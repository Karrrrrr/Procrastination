# ACW for Procrastination
# ACW for Plugin.LocalNotification
# ACW for SQLitePCLRaw.lib.e_sqlite3.android
# ACW for Xamarin.AndroidX.Activity
-keep class androidx.activity.ComponentActivity
-keepclassmembers class androidx.activity.ComponentActivity {
   <init>(...);
   <init>(...);
   *** getActivityResultRegistry(...);
   *** getDefaultViewModelProviderFactory(...);
   *** getLastCustomNonConfigurationInstance(...);
   *** getOnBackPressedDispatcher(...);
   *** getSavedStateRegistry(...);
   *** getViewModelStore(...);
   *** addMenuProvider(...);
   *** addMenuProvider(...);
   *** addMenuProvider(...);
   *** addOnContextAvailableListener(...);
   *** invalidateMenu(...);
   *** onRetainCustomNonConfigurationInstance(...);
   *** onRetainNonConfigurationInstance(...);
   *** peekAvailableContext(...);
   *** registerForActivityResult(...);
   *** registerForActivityResult(...);
   *** removeMenuProvider(...);
   *** removeOnContextAvailableListener(...);
}

-keep class androidx.activity.OnBackPressedDispatcherOwner
-keepclassmembers class androidx.activity.OnBackPressedDispatcherOwner {
}

-keep class androidx.activity.OnBackPressedCallback
-keepclassmembers class androidx.activity.OnBackPressedCallback {
   <init>(...);
   *** isEnabled(...);
   *** setEnabled(...);
   *** handleOnBackPressed(...);
   *** remove(...);
}

-keep class androidx.activity.OnBackPressedCallback
-keepclassmembers class androidx.activity.OnBackPressedCallback {
   *** handleOnBackPressed(...);
}

-keep class androidx.activity.OnBackPressedDispatcher
-keepclassmembers class androidx.activity.OnBackPressedDispatcher {
   <init>(...);
   <init>(...);
   *** hasEnabledCallbacks(...);
   *** addCallback(...);
   *** addCallback(...);
   *** onBackPressed(...);
}

-keep class androidx.activity.contextaware.ContextAware
-keepclassmembers class androidx.activity.contextaware.ContextAware {
}

-keep class androidx.activity.contextaware.OnContextAvailableListener
-keepclassmembers class androidx.activity.contextaware.OnContextAvailableListener {
}

-keep class mono.androidx.activity.contextaware.OnContextAvailableListenerImplementor
-keepclassmembers class mono.androidx.activity.contextaware.OnContextAvailableListenerImplementor {
}

-keep class androidx.activity.result.ActivityResultLauncher
-keepclassmembers class androidx.activity.result.ActivityResultLauncher {
   <init>(...);
   *** getContract(...);
   *** launch(...);
   *** launch(...);
   *** unregister(...);
}

-keep class androidx.activity.result.ActivityResultLauncher
-keepclassmembers class androidx.activity.result.ActivityResultLauncher {
   *** getContract(...);
   *** launch(...);
   *** unregister(...);
}

-keep class androidx.activity.result.ActivityResultRegistry
-keepclassmembers class androidx.activity.result.ActivityResultRegistry {
   <init>(...);
   *** dispatchResult(...);
   *** dispatchResult(...);
   *** onLaunch(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** register(...);
   *** register(...);
}

-keep class androidx.activity.result.ActivityResultRegistry
-keepclassmembers class androidx.activity.result.ActivityResultRegistry {
   *** onLaunch(...);
}

-keep class androidx.activity.result.ActivityResultCallback
-keepclassmembers class androidx.activity.result.ActivityResultCallback {
}

-keep class androidx.activity.result.ActivityResultCaller
-keepclassmembers class androidx.activity.result.ActivityResultCaller {
}

-keep class androidx.activity.result.ActivityResultRegistryOwner
-keepclassmembers class androidx.activity.result.ActivityResultRegistryOwner {
}

-keep class androidx.activity.result.contract.ActivityResultContract$SynchronousResult
-keepclassmembers class androidx.activity.result.contract.ActivityResultContract$SynchronousResult {
   <init>(...);
   *** getValue(...);
}

-keep class androidx.activity.result.contract.ActivityResultContract
-keepclassmembers class androidx.activity.result.contract.ActivityResultContract {
   <init>(...);
   *** createIntent(...);
   *** getSynchronousResult(...);
   *** parseResult(...);
}

-keep class androidx.activity.result.contract.ActivityResultContract
-keepclassmembers class androidx.activity.result.contract.ActivityResultContract {
   *** createIntent(...);
   *** parseResult(...);
}

# ACW for Xamarin.AndroidX.Annotation
-keep class androidx.annotation.AnimatorRes
-keepclassmembers class androidx.annotation.AnimatorRes {
}

-keep class androidx.annotation.AnimRes
-keepclassmembers class androidx.annotation.AnimRes {
}

-keep class androidx.annotation.AnyRes
-keepclassmembers class androidx.annotation.AnyRes {
}

-keep class androidx.annotation.AnyThread
-keepclassmembers class androidx.annotation.AnyThread {
}

-keep class androidx.annotation.ArrayRes
-keepclassmembers class androidx.annotation.ArrayRes {
}

-keep class androidx.annotation.AttrRes
-keepclassmembers class androidx.annotation.AttrRes {
}

-keep class androidx.annotation.BinderThread
-keepclassmembers class androidx.annotation.BinderThread {
}

-keep class androidx.annotation.BoolRes
-keepclassmembers class androidx.annotation.BoolRes {
}

-keep class androidx.annotation.CallSuper
-keepclassmembers class androidx.annotation.CallSuper {
}

-keep class androidx.annotation.CheckResult
-keepclassmembers class androidx.annotation.CheckResult {
}

-keep class androidx.annotation.ChecksSdkIntAtLeast
-keepclassmembers class androidx.annotation.ChecksSdkIntAtLeast {
}

-keep class androidx.annotation.ColorInt
-keepclassmembers class androidx.annotation.ColorInt {
}

-keep class androidx.annotation.ColorLong
-keepclassmembers class androidx.annotation.ColorLong {
}

-keep class androidx.annotation.ColorRes
-keepclassmembers class androidx.annotation.ColorRes {
}

-keep class androidx.annotation.ContentView
-keepclassmembers class androidx.annotation.ContentView {
}

-keep class androidx.annotation.DeprecatedSinceApi
-keepclassmembers class androidx.annotation.DeprecatedSinceApi {
}

-keep class androidx.annotation.DimenRes
-keepclassmembers class androidx.annotation.DimenRes {
}

-keep class androidx.annotation.Dimension$Companion
-keepclassmembers class androidx.annotation.Dimension$Companion {
}

-keep class androidx.annotation.Dimension
-keepclassmembers class androidx.annotation.Dimension {
}

-keep class androidx.annotation.Dimension
-keepclassmembers class androidx.annotation.Dimension {
}

-keep class androidx.annotation.Dimension
-keepclassmembers class androidx.annotation.Dimension {
}

-keep class androidx.annotation.Discouraged
-keepclassmembers class androidx.annotation.Discouraged {
}

-keep class androidx.annotation.DisplayContext
-keepclassmembers class androidx.annotation.DisplayContext {
}

-keep class androidx.annotation.DoNotInline
-keepclassmembers class androidx.annotation.DoNotInline {
}

-keep class androidx.annotation.DrawableRes
-keepclassmembers class androidx.annotation.DrawableRes {
}

-keep class androidx.annotation.EmptySuper
-keepclassmembers class androidx.annotation.EmptySuper {
}

-keep class androidx.annotation.FloatRange
-keepclassmembers class androidx.annotation.FloatRange {
}

-keep class androidx.annotation.FontRes
-keepclassmembers class androidx.annotation.FontRes {
}

-keep class androidx.annotation.FractionRes
-keepclassmembers class androidx.annotation.FractionRes {
}

-keep class androidx.annotation.GravityInt
-keepclassmembers class androidx.annotation.GravityInt {
}

-keep class androidx.annotation.GuardedBy
-keepclassmembers class androidx.annotation.GuardedBy {
}

-keep class androidx.annotation.HalfFloat
-keepclassmembers class androidx.annotation.HalfFloat {
}

-keep class androidx.annotation.IdRes
-keepclassmembers class androidx.annotation.IdRes {
}

-keep class androidx.annotation.InspectableProperty$EnumEntry
-keepclassmembers class androidx.annotation.InspectableProperty$EnumEntry {
}

-keep class androidx.annotation.InspectableProperty$FlagEntry
-keepclassmembers class androidx.annotation.InspectableProperty$FlagEntry {
}

-keep class androidx.annotation.InspectableProperty$ValueType
-keepclassmembers class androidx.annotation.InspectableProperty$ValueType {
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.annotation.InspectableProperty
-keepclassmembers class androidx.annotation.InspectableProperty {
}

-keep class androidx.annotation.IntDef
-keepclassmembers class androidx.annotation.IntDef {
}

-keep class androidx.annotation.IntegerRes
-keepclassmembers class androidx.annotation.IntegerRes {
}

-keep class androidx.annotation.InterpolatorRes
-keepclassmembers class androidx.annotation.InterpolatorRes {
}

-keep class androidx.annotation.IntRange
-keepclassmembers class androidx.annotation.IntRange {
}

-keep class androidx.annotation.Keep
-keepclassmembers class androidx.annotation.Keep {
}

-keep class androidx.annotation.LayoutRes
-keepclassmembers class androidx.annotation.LayoutRes {
}

-keep class androidx.annotation.LongDef
-keepclassmembers class androidx.annotation.LongDef {
}

-keep class androidx.annotation.MainThread
-keepclassmembers class androidx.annotation.MainThread {
}

-keep class androidx.annotation.MenuRes
-keepclassmembers class androidx.annotation.MenuRes {
}

-keep class androidx.annotation.NavigationRes
-keepclassmembers class androidx.annotation.NavigationRes {
}

-keep class androidx.annotation.NonNull
-keepclassmembers class androidx.annotation.NonNull {
}

-keep class androidx.annotation.NonUiContext
-keepclassmembers class androidx.annotation.NonUiContext {
}

-keep class androidx.annotation.Nullable
-keepclassmembers class androidx.annotation.Nullable {
}

-keep class androidx.annotation.OpenForTesting
-keepclassmembers class androidx.annotation.OpenForTesting {
}

-keep class androidx.annotation.PluralsRes
-keepclassmembers class androidx.annotation.PluralsRes {
}

-keep class androidx.annotation.Px
-keepclassmembers class androidx.annotation.Px {
}

-keep class androidx.annotation.RawRes
-keepclassmembers class androidx.annotation.RawRes {
}

-keep class androidx.annotation.RequiresApi
-keepclassmembers class androidx.annotation.RequiresApi {
}

-keep class androidx.annotation.RequiresFeature
-keepclassmembers class androidx.annotation.RequiresFeature {
}

-keep class androidx.annotation.RequiresPermission$Read
-keepclassmembers class androidx.annotation.RequiresPermission$Read {
}

-keep class androidx.annotation.RequiresPermission$Write
-keepclassmembers class androidx.annotation.RequiresPermission$Write {
}

-keep class androidx.annotation.RequiresPermission
-keepclassmembers class androidx.annotation.RequiresPermission {
}

-keep class androidx.annotation.RestrictTo$Scope
-keepclassmembers class androidx.annotation.RestrictTo$Scope {
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.annotation.RestrictTo
-keepclassmembers class androidx.annotation.RestrictTo {
}

-keep class androidx.annotation.ReturnThis
-keepclassmembers class androidx.annotation.ReturnThis {
}

-keep class androidx.annotation.Size
-keepclassmembers class androidx.annotation.Size {
}

-keep class androidx.annotation.StringDef
-keepclassmembers class androidx.annotation.StringDef {
}

-keep class androidx.annotation.StringRes
-keepclassmembers class androidx.annotation.StringRes {
}

-keep class androidx.annotation.StyleableRes
-keepclassmembers class androidx.annotation.StyleableRes {
}

-keep class androidx.annotation.StyleRes
-keepclassmembers class androidx.annotation.StyleRes {
}

-keep class androidx.annotation.TransitionRes
-keepclassmembers class androidx.annotation.TransitionRes {
}

-keep class androidx.annotation.UiContext
-keepclassmembers class androidx.annotation.UiContext {
}

-keep class androidx.annotation.UiThread
-keepclassmembers class androidx.annotation.UiThread {
}

-keep class androidx.annotation.VisibleForTesting$Companion
-keepclassmembers class androidx.annotation.VisibleForTesting$Companion {
}

-keep class androidx.annotation.VisibleForTesting
-keepclassmembers class androidx.annotation.VisibleForTesting {
}

-keep class androidx.annotation.VisibleForTesting
-keepclassmembers class androidx.annotation.VisibleForTesting {
}

-keep class androidx.annotation.VisibleForTesting
-keepclassmembers class androidx.annotation.VisibleForTesting {
}

-keep class androidx.annotation.WorkerThread
-keepclassmembers class androidx.annotation.WorkerThread {
}

-keep class androidx.annotation.XmlRes
-keepclassmembers class androidx.annotation.XmlRes {
}

# ACW for Xamarin.AndroidX.Annotation.Experimental
-keep class androidx.annotation.OptIn
-keepclassmembers class androidx.annotation.OptIn {
}

-keep class androidx.annotation.RequiresOptIn$Level
-keepclassmembers class androidx.annotation.RequiresOptIn$Level {
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.annotation.RequiresOptIn
-keepclassmembers class androidx.annotation.RequiresOptIn {
}

-keep class androidx.annotation.experimental.Experimental$Level
-keepclassmembers class androidx.annotation.experimental.Experimental$Level {
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.annotation.experimental.Experimental
-keepclassmembers class androidx.annotation.experimental.Experimental {
}

-keep class androidx.annotation.experimental.UseExperimental
-keepclassmembers class androidx.annotation.experimental.UseExperimental {
}

# ACW for Xamarin.AndroidX.AppCompat.AppCompatResources
-keep class androidx.appcompat.widget.DrawableUtils
-keepclassmembers class androidx.appcompat.widget.DrawableUtils {
   *** canSafelyMutateDrawable(...);
   *** getOpticalBounds(...);
   *** parseTintMode(...);
}

-keep class androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate
-keepclassmembers class androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate {
   *** createFromXmlInner(...);
}

-keep class androidx.appcompat.widget.ResourceManagerInternal
-keepclassmembers class androidx.appcompat.widget.ResourceManagerInternal {
   <init>(...);
   *** get(...);
   *** getDrawable(...);
   *** getPorterDuffColorFilter(...);
   *** onConfigurationChanged(...);
}

-keep class androidx.appcompat.widget.TintContextWrapper
-keepclassmembers class androidx.appcompat.widget.TintContextWrapper {
   *** wrap(...);
}

-keep class androidx.appcompat.widget.TintInfo
-keepclassmembers class androidx.appcompat.widget.TintInfo {
   <init>(...);
}

-keep class androidx.appcompat.widget.VectorEnabledTintResources
-keepclassmembers class androidx.appcompat.widget.VectorEnabledTintResources {
   <init>(...);
   *** isCompatVectorFromResourcesEnabled(...);
   *** setCompatVectorFromResourcesEnabled(...);
   *** shouldBeUsed(...);
}

-keep class androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat
-keepclassmembers class androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat {
   <init>(...);
   *** getAlpha(...);
   *** setAlpha(...);
   *** isAutoMirrored(...);
   *** setAutoMirrored(...);
   *** getChangingConfigurations(...);
   *** getCurrent(...);
   *** getIntrinsicHeight(...);
   *** getIntrinsicWidth(...);
   *** isStateful(...);
   *** getMinimumHeight(...);
   *** getMinimumWidth(...);
   *** getOpacity(...);
   *** addState(...);
   *** addState(...);
   *** addTransition(...);
   *** applyTheme(...);
   *** canApplyTheme(...);
   *** create(...);
   *** createFromXmlInner(...);
   *** draw(...);
   *** getHotspotBounds(...);
   *** getOutline(...);
   *** getPadding(...);
   *** inflate(...);
   *** invalidateDrawable(...);
   *** jumpToCurrentState(...);
   *** mutate(...);
   *** onLayoutDirectionChanged(...);
   *** onStateChange(...);
   *** scheduleDrawable(...);
   *** setColorFilter(...);
   *** setDither(...);
   *** setEnterFadeDuration(...);
   *** setExitFadeDuration(...);
   *** setHotspot(...);
   *** setHotspotBounds(...);
   *** setTintList(...);
   *** setTintMode(...);
   *** setVisible(...);
   *** unscheduleDrawable(...);
}

-keep class androidx.appcompat.graphics.drawable.DrawableContainer
-keepclassmembers class androidx.appcompat.graphics.drawable.DrawableContainer {
   *** getOpacity(...);
   *** draw(...);
   *** getConstantState(...);
   *** invalidateDrawable(...);
   *** scheduleDrawable(...);
   *** setAlpha(...);
   *** setColorFilter(...);
   *** setEnterFadeDuration(...);
   *** setExitFadeDuration(...);
   *** unscheduleDrawable(...);
}

-keep class androidx.appcompat.graphics.drawable.DrawableWrapper
-keepclassmembers class androidx.appcompat.graphics.drawable.DrawableWrapper {
   <init>(...);
   *** getOpacity(...);
   *** getWrappedDrawable(...);
   *** setWrappedDrawable(...);
   *** draw(...);
   *** invalidateDrawable(...);
   *** scheduleDrawable(...);
   *** setAlpha(...);
   *** setColorFilter(...);
   *** unscheduleDrawable(...);
}

-keep class androidx.appcompat.content.res.AppCompatResources
-keepclassmembers class androidx.appcompat.content.res.AppCompatResources {
   *** getColorStateList(...);
   *** getDrawable(...);
}

# ACW for Xamarin.AndroidX.AppCompat
-keep class androidx.appcompat.graphics.drawable.DrawerArrowDrawable
-keepclassmembers class androidx.appcompat.graphics.drawable.DrawerArrowDrawable {
   <init>(...);
   *** getArrowHeadLength(...);
   *** setArrowHeadLength(...);
   *** getArrowShaftLength(...);
   *** setArrowShaftLength(...);
   *** getBarLength(...);
   *** setBarLength(...);
   *** getBarThickness(...);
   *** setBarThickness(...);
   *** getColor(...);
   *** setColor(...);
   *** getDirection(...);
   *** setDirection(...);
   *** getGapSize(...);
   *** setGapSize(...);
   *** getOpacity(...);
   *** getPaint(...);
   *** getProgress(...);
   *** setProgress(...);
   *** isSpinEnabled(...);
   *** setSpinEnabled(...);
   *** draw(...);
   *** setAlpha(...);
   *** setColorFilter(...);
   *** setVerticalMirror(...);
}

-keep class androidx.appcompat.app.ActionBar$LayoutParams
-keepclassmembers class androidx.appcompat.app.ActionBar$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class androidx.appcompat.app.ActionBar$OnMenuVisibilityListener
-keepclassmembers class androidx.appcompat.app.ActionBar$OnMenuVisibilityListener {
}

-keep class mono.androidx.appcompat.app.ActionBar_OnMenuVisibilityListenerImplementor
-keepclassmembers class mono.androidx.appcompat.app.ActionBar_OnMenuVisibilityListenerImplementor {
}

-keep class androidx.appcompat.app.ActionBar$OnNavigationListener
-keepclassmembers class androidx.appcompat.app.ActionBar$OnNavigationListener {
}

-keep class androidx.appcompat.app.ActionBar$Tab
-keepclassmembers class androidx.appcompat.app.ActionBar$Tab {
   <init>(...);
   *** getContentDescription(...);
   *** getCustomView(...);
   *** getIcon(...);
   *** getPosition(...);
   *** getTag(...);
   *** getText(...);
   *** select(...);
   *** setContentDescription(...);
   *** setContentDescription(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setTabListener(...);
   *** setTag(...);
   *** setText(...);
   *** setText(...);
}

-keep class androidx.appcompat.app.ActionBar$Tab
-keepclassmembers class androidx.appcompat.app.ActionBar$Tab {
   *** getContentDescription(...);
   *** getCustomView(...);
   *** getIcon(...);
   *** getPosition(...);
   *** getTag(...);
   *** getText(...);
   *** select(...);
   *** setContentDescription(...);
   *** setContentDescription(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setTabListener(...);
   *** setTag(...);
   *** setText(...);
   *** setText(...);
}

-keep class androidx.appcompat.app.ActionBar$TabListener
-keepclassmembers class androidx.appcompat.app.ActionBar$TabListener {
}

-keep class androidx.appcompat.app.ActionBar
-keepclassmembers class androidx.appcompat.app.ActionBar {
   <init>(...);
   *** getCustomView(...);
   *** setCustomView(...);
   *** getDisplayOptions(...);
   *** setDisplayOptions(...);
   *** getElevation(...);
   *** setElevation(...);
   *** getHeight(...);
   *** getHideOffset(...);
   *** setHideOffset(...);
   *** isHideOnContentScrollEnabled(...);
   *** setHideOnContentScrollEnabled(...);
   *** isShowing(...);
   *** isTitleTruncated(...);
   *** getNavigationItemCount(...);
   *** getNavigationMode(...);
   *** setNavigationMode(...);
   *** getSelectedNavigationIndex(...);
   *** getSelectedTab(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTabCount(...);
   *** getThemedContext(...);
   *** getTitle(...);
   *** setTitle(...);
   *** addOnMenuVisibilityListener(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** closeOptionsMenu(...);
   *** collapseActionView(...);
   *** dispatchMenuVisibilityChanged(...);
   *** getTabAt(...);
   *** hide(...);
   *** invalidateOptionsMenu(...);
   *** newTab(...);
   *** onConfigurationChanged(...);
   *** onKeyShortcut(...);
   *** onMenuKeyEvent(...);
   *** openOptionsMenu(...);
   *** removeAllTabs(...);
   *** removeOnMenuVisibilityListener(...);
   *** removeTab(...);
   *** removeTabAt(...);
   *** selectTab(...);
   *** setBackgroundDrawable(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setDefaultDisplayHomeAsUpEnabled(...);
   *** setDisplayHomeAsUpEnabled(...);
   *** setDisplayOptions(...);
   *** setDisplayShowCustomEnabled(...);
   *** setDisplayShowHomeEnabled(...);
   *** setDisplayShowTitleEnabled(...);
   *** setDisplayUseLogoEnabled(...);
   *** setHomeActionContentDescription(...);
   *** setHomeActionContentDescription(...);
   *** setHomeAsUpIndicator(...);
   *** setHomeAsUpIndicator(...);
   *** setHomeButtonEnabled(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setListNavigationCallbacks(...);
   *** setLogo(...);
   *** setLogo(...);
   *** setSelectedNavigationItem(...);
   *** setShowHideAnimationEnabled(...);
   *** setSplitBackgroundDrawable(...);
   *** setStackedBackgroundDrawable(...);
   *** setSubtitle(...);
   *** setTitle(...);
   *** setWindowTitle(...);
   *** show(...);
   *** startActionMode(...);
}

-keep class androidx.appcompat.app.ActionBar
-keepclassmembers class androidx.appcompat.app.ActionBar {
   *** getCustomView(...);
   *** setCustomView(...);
   *** getDisplayOptions(...);
   *** setDisplayOptions(...);
   *** getHeight(...);
   *** isShowing(...);
   *** getNavigationItemCount(...);
   *** getNavigationMode(...);
   *** setNavigationMode(...);
   *** getSelectedNavigationIndex(...);
   *** getSelectedTab(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTabCount(...);
   *** getTitle(...);
   *** setTitle(...);
   *** addOnMenuVisibilityListener(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** getTabAt(...);
   *** hide(...);
   *** newTab(...);
   *** removeAllTabs(...);
   *** removeOnMenuVisibilityListener(...);
   *** removeTab(...);
   *** removeTabAt(...);
   *** selectTab(...);
   *** setBackgroundDrawable(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setDisplayHomeAsUpEnabled(...);
   *** setDisplayOptions(...);
   *** setDisplayShowCustomEnabled(...);
   *** setDisplayShowHomeEnabled(...);
   *** setDisplayShowTitleEnabled(...);
   *** setDisplayUseLogoEnabled(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setListNavigationCallbacks(...);
   *** setLogo(...);
   *** setLogo(...);
   *** setSelectedNavigationItem(...);
   *** setSubtitle(...);
   *** setTitle(...);
   *** show(...);
}

-keep class androidx.appcompat.app.ActionBarDrawerToggle$Delegate
-keepclassmembers class androidx.appcompat.app.ActionBarDrawerToggle$Delegate {
}

-keep class androidx.appcompat.app.ActionBarDrawerToggle$DelegateProvider
-keepclassmembers class androidx.appcompat.app.ActionBarDrawerToggle$DelegateProvider {
}

-keep class androidx.appcompat.app.ActionBarDrawerToggle
-keepclassmembers class androidx.appcompat.app.ActionBarDrawerToggle {
   <init>(...);
   <init>(...);
   *** getDrawerArrowDrawable(...);
   *** setDrawerArrowDrawable(...);
   *** isDrawerIndicatorEnabled(...);
   *** setDrawerIndicatorEnabled(...);
   *** isDrawerSlideAnimationEnabled(...);
   *** setDrawerSlideAnimationEnabled(...);
   *** getToolbarNavigationClickListener(...);
   *** setToolbarNavigationClickListener(...);
   *** onConfigurationChanged(...);
   *** onDrawerClosed(...);
   *** onDrawerOpened(...);
   *** onDrawerSlide(...);
   *** onDrawerStateChanged(...);
   *** onOptionsItemSelected(...);
   *** setHomeAsUpIndicator(...);
   *** setHomeAsUpIndicator(...);
   *** syncState(...);
}

-keep class androidx.appcompat.app.AppCompatActivity
-keepclassmembers class androidx.appcompat.app.AppCompatActivity {
   <init>(...);
   <init>(...);
   *** getDelegate(...);
   *** getDrawerToggleDelegate(...);
   *** getSupportActionBar(...);
   *** getSupportParentActivityIntent(...);
   *** onCreateSupportNavigateUpTaskStack(...);
   *** onMenuItemSelected(...);
   *** onNightModeChanged(...);
   *** onPrepareSupportNavigateUpTaskStack(...);
   *** onSupportActionModeFinished(...);
   *** onSupportActionModeStarted(...);
   *** onSupportContentChanged(...);
   *** onSupportNavigateUp(...);
   *** onWindowStartingSupportActionMode(...);
   *** setSupportActionBar(...);
   *** setSupportProgress(...);
   *** setSupportProgressBarIndeterminate(...);
   *** setSupportProgressBarIndeterminateVisibility(...);
   *** setSupportProgressBarVisibility(...);
   *** startSupportActionMode(...);
   *** supportNavigateUpTo(...);
   *** supportRequestWindowFeature(...);
   *** supportShouldUpRecreateTask(...);
}

-keep class androidx.appcompat.app.AppCompatDelegate
-keepclassmembers class androidx.appcompat.app.AppCompatDelegate {
   *** isCompatVectorFromResourcesEnabled(...);
   *** setCompatVectorFromResourcesEnabled(...);
   *** getDefaultNightMode(...);
   *** setDefaultNightMode(...);
   *** getDrawerToggleDelegate(...);
   *** isHandleNativeActionModesEnabled(...);
   *** setHandleNativeActionModesEnabled(...);
   *** getLocalNightMode(...);
   *** getMenuInflater(...);
   *** getSupportActionBar(...);
   *** addContentView(...);
   *** applyDayNight(...);
   *** attachBaseContext(...);
   *** attachBaseContext2(...);
   *** create(...);
   *** create(...);
   *** create(...);
   *** create(...);
   *** createView(...);
   *** findViewById(...);
   *** hasWindowFeature(...);
   *** installViewFactory(...);
   *** invalidateOptionsMenu(...);
   *** onConfigurationChanged(...);
   *** onCreate(...);
   *** onDestroy(...);
   *** onPostCreate(...);
   *** onPostResume(...);
   *** onSaveInstanceState(...);
   *** onStart(...);
   *** onStop(...);
   *** requestWindowFeature(...);
   *** setContentView(...);
   *** setContentView(...);
   *** setContentView(...);
   *** setLocalNightMode(...);
   *** setSupportActionBar(...);
   *** setTheme(...);
   *** setTitle(...);
   *** startSupportActionMode(...);
}

-keep class androidx.appcompat.app.AppCompatDelegate
-keepclassmembers class androidx.appcompat.app.AppCompatDelegate {
   *** getDrawerToggleDelegate(...);
   *** isHandleNativeActionModesEnabled(...);
   *** setHandleNativeActionModesEnabled(...);
   *** getMenuInflater(...);
   *** getSupportActionBar(...);
   *** addContentView(...);
   *** applyDayNight(...);
   *** createView(...);
   *** findViewById(...);
   *** hasWindowFeature(...);
   *** installViewFactory(...);
   *** invalidateOptionsMenu(...);
   *** onConfigurationChanged(...);
   *** onCreate(...);
   *** onDestroy(...);
   *** onPostCreate(...);
   *** onPostResume(...);
   *** onSaveInstanceState(...);
   *** onStart(...);
   *** onStop(...);
   *** requestWindowFeature(...);
   *** setContentView(...);
   *** setContentView(...);
   *** setContentView(...);
   *** setLocalNightMode(...);
   *** setSupportActionBar(...);
   *** setTitle(...);
   *** startSupportActionMode(...);
}

-keep class androidx.appcompat.app.AppCompatCallback
-keepclassmembers class androidx.appcompat.app.AppCompatCallback {
}

-keep class androidx.appcompat.widget.Toolbar$OnMenuItemClickListener
-keepclassmembers class androidx.appcompat.widget.Toolbar$OnMenuItemClickListener {
}

-keep class mono.androidx.appcompat.widget.Toolbar_OnMenuItemClickListenerImplementor
-keepclassmembers class mono.androidx.appcompat.widget.Toolbar_OnMenuItemClickListenerImplementor {
}

-keep class androidx.appcompat.widget.Toolbar
-keepclassmembers class androidx.appcompat.widget.Toolbar {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCollapseContentDescription(...);
   *** setCollapseContentDescription(...);
   *** getCollapseIcon(...);
   *** setCollapseIcon(...);
   *** getContentInsetEnd(...);
   *** getContentInsetEndWithActions(...);
   *** setContentInsetEndWithActions(...);
   *** getContentInsetLeft(...);
   *** getContentInsetRight(...);
   *** getContentInsetStart(...);
   *** getContentInsetStartWithNavigation(...);
   *** setContentInsetStartWithNavigation(...);
   *** getCurrentContentInsetEnd(...);
   *** getCurrentContentInsetLeft(...);
   *** getCurrentContentInsetRight(...);
   *** getCurrentContentInsetStart(...);
   *** hasExpandedActionView(...);
   *** isOverflowMenuShowPending(...);
   *** isOverflowMenuShowing(...);
   *** isTitleTruncated(...);
   *** getLogo(...);
   *** setLogo(...);
   *** getLogoDescription(...);
   *** setLogoDescription(...);
   *** getMenu(...);
   *** getNavigationContentDescription(...);
   *** setNavigationContentDescription(...);
   *** getNavigationIcon(...);
   *** setNavigationIcon(...);
   *** getOverflowIcon(...);
   *** setOverflowIcon(...);
   *** getPopupTheme(...);
   *** setPopupTheme(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTitle(...);
   *** setTitle(...);
   *** getTitleMarginBottom(...);
   *** setTitleMarginBottom(...);
   *** getTitleMarginEnd(...);
   *** setTitleMarginEnd(...);
   *** getTitleMarginStart(...);
   *** setTitleMarginStart(...);
   *** getTitleMarginTop(...);
   *** setTitleMarginTop(...);
   *** getWrapper(...);
   *** canShowOverflowMenu(...);
   *** collapseActionView(...);
   *** dismissPopupMenus(...);
   *** hideOverflowMenu(...);
   *** inflateMenu(...);
   *** onLayout(...);
   *** setCollapseContentDescription(...);
   *** setCollapseIcon(...);
   *** setCollapsible(...);
   *** setContentInsetsAbsolute(...);
   *** setContentInsetsRelative(...);
   *** setLogo(...);
   *** setLogoDescription(...);
   *** setMenuCallbacks(...);
   *** setNavigationContentDescription(...);
   *** setNavigationIcon(...);
   *** setNavigationOnClickListener(...);
   *** setOnMenuItemClickListener(...);
   *** setSubtitle(...);
   *** setSubtitleTextAppearance(...);
   *** setSubtitleTextColor(...);
   *** setSubtitleTextColor(...);
   *** setTitle(...);
   *** setTitleMargin(...);
   *** setTitleTextAppearance(...);
   *** setTitleTextColor(...);
   *** setTitleTextColor(...);
   *** showOverflowMenu(...);
}

-keep class androidx.appcompat.widget.AppCompatCheckBox
-keepclassmembers class androidx.appcompat.widget.AppCompatCheckBox {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSupportBackgroundTintList(...);
   *** setSupportBackgroundTintList(...);
   *** getSupportBackgroundTintMode(...);
   *** setSupportBackgroundTintMode(...);
   *** getSupportButtonTintList(...);
   *** setSupportButtonTintList(...);
   *** getSupportButtonTintMode(...);
   *** setSupportButtonTintMode(...);
}

-keep class androidx.appcompat.widget.DecorToolbar
-keepclassmembers class androidx.appcompat.widget.DecorToolbar {
}

-keep class androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener
-keepclassmembers class androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener {
   <init>(...);
   *** withFinalVisibility(...);
}

-keep class androidx.appcompat.widget.ScrollingTabContainerView
-keepclassmembers class androidx.appcompat.widget.ScrollingTabContainerView {
   <init>(...);
   *** addTab(...);
   *** addTab(...);
   *** animateToTab(...);
   *** animateToVisibility(...);
   *** onAttachedToWindow(...);
   *** onDetachedFromWindow(...);
   *** onItemSelected(...);
   *** onMeasure(...);
   *** onNothingSelected(...);
   *** removeAllTabs(...);
   *** removeTabAt(...);
   *** setAllowCollapse(...);
   *** setContentHeight(...);
   *** setTabSelected(...);
   *** updateTab(...);
}

-keep class androidx.appcompat.view.ActionMode$Callback
-keepclassmembers class androidx.appcompat.view.ActionMode$Callback {
}

-keep class androidx.appcompat.view.ActionMode
-keepclassmembers class androidx.appcompat.view.ActionMode {
   <init>(...);
   *** getCustomView(...);
   *** setCustomView(...);
   *** isTitleOptional(...);
   *** isUiFocusable(...);
   *** getMenu(...);
   *** getMenuInflater(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTag(...);
   *** setTag(...);
   *** getTitle(...);
   *** setTitle(...);
   *** getTitleOptionalHint(...);
   *** setTitleOptionalHint(...);
   *** finish(...);
   *** invalidate(...);
   *** setSubtitle(...);
   *** setTitle(...);
}

-keep class androidx.appcompat.view.ActionMode
-keepclassmembers class androidx.appcompat.view.ActionMode {
   *** getCustomView(...);
   *** setCustomView(...);
   *** getMenu(...);
   *** getMenuInflater(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTitle(...);
   *** setTitle(...);
   *** finish(...);
   *** invalidate(...);
   *** setSubtitle(...);
   *** setTitle(...);
}

-keep class androidx.appcompat.view.menu.MenuBuilder$Callback
-keepclassmembers class androidx.appcompat.view.menu.MenuBuilder$Callback {
}

-keep class androidx.appcompat.view.menu.MenuBuilder
-keepclassmembers class androidx.appcompat.view.menu.MenuBuilder {
   <init>(...);
   *** getActionItems(...);
   *** getActionViewStatesKey(...);
   *** getContext(...);
   *** getExpandedItem(...);
   *** isGroupDividerEnabled(...);
   *** setGroupDividerEnabled(...);
   *** hasVisibleItems(...);
   *** getHeaderIcon(...);
   *** getHeaderTitle(...);
   *** getHeaderView(...);
   *** getNonActionItems(...);
   *** getRootMenu(...);
   *** isShortcutsVisible(...);
   *** setShortcutsVisible(...);
   *** getVisibleItems(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** addIntentOptions(...);
   *** addInternal(...);
   *** addMenuPresenter(...);
   *** addMenuPresenter(...);
   *** addSubMenu(...);
   *** addSubMenu(...);
   *** addSubMenu(...);
   *** addSubMenu(...);
   *** changeMenuMode(...);
   *** clear(...);
   *** clearAll(...);
   *** clearHeader(...);
   *** close(...);
   *** close(...);
   *** collapseItemActionView(...);
   *** expandItemActionView(...);
   *** findGroupIndex(...);
   *** findGroupIndex(...);
   *** findItem(...);
   *** findItemIndex(...);
   *** flagActionItems(...);
   *** getItem(...);
   *** isShortcutKey(...);
   *** onItemsChanged(...);
   *** performIdentifierAction(...);
   *** performItemAction(...);
   *** performItemAction(...);
   *** performShortcut(...);
   *** removeGroup(...);
   *** removeItem(...);
   *** removeItemAt(...);
   *** removeMenuPresenter(...);
   *** restoreActionViewStates(...);
   *** restorePresenterStates(...);
   *** saveActionViewStates(...);
   *** savePresenterStates(...);
   *** setCallback(...);
   *** setCurrentMenuInfo(...);
   *** setDefaultShowAsAction(...);
   *** setGroupCheckable(...);
   *** setGroupEnabled(...);
   *** setGroupVisible(...);
   *** setHeaderIconInt(...);
   *** setHeaderIconInt(...);
   *** setHeaderTitleInt(...);
   *** setHeaderTitleInt(...);
   *** setHeaderViewInt(...);
   *** setOptionalIconsVisible(...);
   *** setOverrideVisibleItems(...);
   *** setQwertyMode(...);
   *** size(...);
   *** startDispatchingItemsChanged(...);
   *** stopDispatchingItemsChanged(...);
}

-keep class androidx.appcompat.view.menu.MenuPresenter$Callback
-keepclassmembers class androidx.appcompat.view.menu.MenuPresenter$Callback {
}

-keep class androidx.appcompat.view.menu.MenuPresenter
-keepclassmembers class androidx.appcompat.view.menu.MenuPresenter {
}

-keep class androidx.appcompat.view.menu.MenuView
-keepclassmembers class androidx.appcompat.view.menu.MenuView {
}

-keep class androidx.appcompat.view.menu.MenuItemImpl
-keepclassmembers class androidx.appcompat.view.menu.MenuItemImpl {
   *** getActionProvider(...);
   *** getActionView(...);
   *** getAlphabeticModifiers(...);
   *** getAlphabeticShortcut(...);
   *** getContentDescription(...);
   *** isExclusiveCheckable(...);
   *** setExclusiveCheckable(...);
   *** getGroupId(...);
   *** hasCollapsibleActionView(...);
   *** hasSubMenu(...);
   *** getIcon(...);
   *** getIconTintList(...);
   *** getIconTintMode(...);
   *** getIntent(...);
   *** isActionButton(...);
   *** setIsActionButton(...);
   *** isActionViewExpanded(...);
   *** isCheckable(...);
   *** isChecked(...);
   *** isEnabled(...);
   *** isVisible(...);
   *** getItemId(...);
   *** getMenuInfo(...);
   *** getNumericModifiers(...);
   *** getNumericShortcut(...);
   *** getOrder(...);
   *** getOrdering(...);
   *** getSubMenu(...);
   *** getSupportActionProvider(...);
   *** getTitle(...);
   *** getTitleCondensed(...);
   *** getTooltipText(...);
   *** actionFormatChanged(...);
   *** collapseActionView(...);
   *** expandActionView(...);
   *** invoke(...);
   *** requestsActionButton(...);
   *** requiresActionButton(...);
   *** requiresOverflow(...);
   *** setActionProvider(...);
   *** setActionView(...);
   *** setActionView(...);
   *** setActionViewExpanded(...);
   *** setAlphabeticShortcut(...);
   *** setAlphabeticShortcut(...);
   *** setCallback(...);
   *** setCheckable(...);
   *** setChecked(...);
   *** setContentDescription(...);
   *** setEnabled(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setIconTintList(...);
   *** setIconTintMode(...);
   *** setIntent(...);
   *** setNumericShortcut(...);
   *** setNumericShortcut(...);
   *** setOnActionExpandListener(...);
   *** setOnMenuItemClickListener(...);
   *** setShortcut(...);
   *** setShortcut(...);
   *** setShowAsAction(...);
   *** setShowAsActionFlags(...);
   *** setSubMenu(...);
   *** setSupportActionProvider(...);
   *** setTitle(...);
   *** setTitle(...);
   *** setTitleCondensed(...);
   *** setTooltipText(...);
   *** setVisible(...);
   *** shouldShowIcon(...);
   *** showsTextAsAction(...);
}

-keep class androidx.appcompat.view.menu.SubMenuBuilder
-keepclassmembers class androidx.appcompat.view.menu.SubMenuBuilder {
   <init>(...);
   *** getActionViewStatesKey(...);
   *** isQwertyMode(...);
   *** getItem(...);
   *** getParentMenu(...);
   *** setHeaderIcon(...);
   *** setHeaderIcon(...);
   *** setHeaderTitle(...);
   *** setHeaderTitle(...);
   *** setHeaderView(...);
   *** setIcon(...);
   *** setIcon(...);
}

# ACW for Xamarin.AndroidX.Arch.Core.Common
-keep class androidx.arch.core.util.Function
-keepclassmembers class androidx.arch.core.util.Function {
}

-keep class androidx.arch.core.internal.FastSafeIterableMap
-keepclassmembers class androidx.arch.core.internal.FastSafeIterableMap {
   <init>(...);
   *** ceil(...);
   *** contains(...);
}

-keep class androidx.arch.core.internal.SafeIterableMap$Entry
-keepclassmembers class androidx.arch.core.internal.SafeIterableMap$Entry {
   *** getKey(...);
   *** getValue(...);
   *** setValue(...);
}

-keep class androidx.arch.core.internal.SafeIterableMap$ListIterator
-keepclassmembers class androidx.arch.core.internal.SafeIterableMap$ListIterator {
   *** hasNext(...);
   *** next(...);
}

-keep class androidx.arch.core.internal.SafeIterableMap$ListIterator
-keepclassmembers class androidx.arch.core.internal.SafeIterableMap$ListIterator {
}

-keep class androidx.arch.core.internal.SafeIterableMap
-keepclassmembers class androidx.arch.core.internal.SafeIterableMap {
   <init>(...);
   *** descendingIterator(...);
   *** eldest(...);
   *** get(...);
   *** iterator(...);
   *** iteratorWithAdditions(...);
   *** newest(...);
   *** put(...);
   *** putIfAbsent(...);
   *** remove(...);
   *** size(...);
}

# ACW for Xamarin.AndroidX.Arch.Core.Runtime
-keep class androidx.arch.core.executor.ArchTaskExecutor
-keepclassmembers class androidx.arch.core.executor.ArchTaskExecutor {
   *** getIOThreadExecutor(...);
   *** getInstance(...);
   *** isMainThread(...);
   *** getMainThreadExecutor(...);
   *** executeOnDiskIO(...);
   *** postToMainThread(...);
   *** setDelegate(...);
}

-keep class androidx.arch.core.executor.DefaultTaskExecutor
-keepclassmembers class androidx.arch.core.executor.DefaultTaskExecutor {
   <init>(...);
   *** isMainThread(...);
   *** executeOnDiskIO(...);
   *** postToMainThread(...);
}

-keep class androidx.arch.core.executor.TaskExecutor
-keepclassmembers class androidx.arch.core.executor.TaskExecutor {
   <init>(...);
   *** isMainThread(...);
   *** executeOnDiskIO(...);
   *** executeOnMainThread(...);
   *** postToMainThread(...);
}

-keep class androidx.arch.core.executor.TaskExecutor
-keepclassmembers class androidx.arch.core.executor.TaskExecutor {
   *** isMainThread(...);
   *** executeOnDiskIO(...);
   *** postToMainThread(...);
}

# ACW for Xamarin.AndroidX.AsyncLayoutInflater
-keep class androidx.asynclayoutinflater.view.AsyncLayoutInflater$OnInflateFinishedListener
-keepclassmembers class androidx.asynclayoutinflater.view.AsyncLayoutInflater$OnInflateFinishedListener {
}

-keep class mono.androidx.asynclayoutinflater.view.AsyncLayoutInflater_OnInflateFinishedListenerImplementor
-keepclassmembers class mono.androidx.asynclayoutinflater.view.AsyncLayoutInflater_OnInflateFinishedListenerImplementor {
}

-keep class androidx.asynclayoutinflater.view.AsyncLayoutInflater
-keepclassmembers class androidx.asynclayoutinflater.view.AsyncLayoutInflater {
   <init>(...);
   *** inflate(...);
}

# ACW for Xamarin.AndroidX.Browser
-keep class android.support.customtabs.trusted.ITrustedWebActivityCallback$Default
-keepclassmembers class android.support.customtabs.trusted.ITrustedWebActivityCallback$Default {
   <init>(...);
   *** asBinder(...);
   *** onExtraCallback(...);
}

-keep class android.support.customtabs.trusted.ITrustedWebActivityCallback$Stub
-keepclassmembers class android.support.customtabs.trusted.ITrustedWebActivityCallback$Stub {
   <init>(...);
   *** getDefaultImpl(...);
   *** asBinder(...);
   *** asInterface(...);
   *** onTransact(...);
   *** setDefaultImpl(...);
   *** onExtraCallback(...);
}

-keep class android.support.customtabs.trusted.ITrustedWebActivityCallback$Stub
-keepclassmembers class android.support.customtabs.trusted.ITrustedWebActivityCallback$Stub {
   *** onExtraCallback(...);
}

-keep class android.support.customtabs.trusted.ITrustedWebActivityCallback
-keepclassmembers class android.support.customtabs.trusted.ITrustedWebActivityCallback {
}

-keep class android.support.customtabs.trusted.ITrustedWebActivityService$Default
-keepclassmembers class android.support.customtabs.trusted.ITrustedWebActivityService$Default {
   <init>(...);
   *** getActiveNotifications(...);
   *** getSmallIconBitmap(...);
   *** getSmallIconId(...);
   *** areNotificationsEnabled(...);
   *** asBinder(...);
   *** cancelNotification(...);
   *** extraCommand(...);
   *** notifyNotificationWithChannel(...);
}

-keep class android.support.customtabs.trusted.ITrustedWebActivityService$Stub
-keepclassmembers class android.support.customtabs.trusted.ITrustedWebActivityService$Stub {
   <init>(...);
   *** getDefaultImpl(...);
   *** asBinder(...);
   *** asInterface(...);
   *** onTransact(...);
   *** setDefaultImpl(...);
   *** areNotificationsEnabled(...);
   *** cancelNotification(...);
   *** extraCommand(...);
   *** notifyNotificationWithChannel(...);
   *** getActiveNotifications(...);
   *** getSmallIconBitmap(...);
   *** getSmallIconId(...);
}

-keep class android.support.customtabs.trusted.ITrustedWebActivityService$Stub
-keepclassmembers class android.support.customtabs.trusted.ITrustedWebActivityService$Stub {
   *** getActiveNotifications(...);
   *** getSmallIconBitmap(...);
   *** getSmallIconId(...);
   *** areNotificationsEnabled(...);
   *** cancelNotification(...);
   *** extraCommand(...);
   *** notifyNotificationWithChannel(...);
}

-keep class android.support.customtabs.trusted.ITrustedWebActivityService
-keepclassmembers class android.support.customtabs.trusted.ITrustedWebActivityService {
}

-keep class android.support.customtabs.ICustomTabsCallback$Default
-keepclassmembers class android.support.customtabs.ICustomTabsCallback$Default {
   <init>(...);
   *** asBinder(...);
   *** extraCallback(...);
   *** extraCallbackWithResult(...);
   *** onMessageChannelReady(...);
   *** onNavigationEvent(...);
   *** onPostMessage(...);
   *** onRelationshipValidationResult(...);
}

-keep class android.support.customtabs.ICustomTabsCallback$Stub
-keepclassmembers class android.support.customtabs.ICustomTabsCallback$Stub {
   <init>(...);
   *** getDefaultImpl(...);
   *** asBinder(...);
   *** asInterface(...);
   *** onTransact(...);
   *** setDefaultImpl(...);
   *** extraCallback(...);
   *** extraCallbackWithResult(...);
   *** onMessageChannelReady(...);
   *** onNavigationEvent(...);
   *** onPostMessage(...);
   *** onRelationshipValidationResult(...);
}

-keep class android.support.customtabs.ICustomTabsCallback$Stub
-keepclassmembers class android.support.customtabs.ICustomTabsCallback$Stub {
   *** extraCallback(...);
   *** extraCallbackWithResult(...);
   *** onMessageChannelReady(...);
   *** onNavigationEvent(...);
   *** onPostMessage(...);
   *** onRelationshipValidationResult(...);
}

-keep class android.support.customtabs.ICustomTabsCallback
-keepclassmembers class android.support.customtabs.ICustomTabsCallback {
}

-keep class android.support.customtabs.ICustomTabsService$Default
-keepclassmembers class android.support.customtabs.ICustomTabsService$Default {
   <init>(...);
   *** asBinder(...);
   *** extraCommand(...);
   *** mayLaunchUrl(...);
   *** newSession(...);
   *** newSessionWithExtras(...);
   *** postMessage(...);
   *** receiveFile(...);
   *** requestPostMessageChannel(...);
   *** requestPostMessageChannelWithExtras(...);
   *** updateVisuals(...);
   *** validateRelationship(...);
   *** warmup(...);
}

-keep class android.support.customtabs.ICustomTabsService$Stub
-keepclassmembers class android.support.customtabs.ICustomTabsService$Stub {
   <init>(...);
   *** getDefaultImpl(...);
   *** asBinder(...);
   *** asInterface(...);
   *** onTransact(...);
   *** setDefaultImpl(...);
   *** extraCommand(...);
   *** mayLaunchUrl(...);
   *** newSession(...);
   *** newSessionWithExtras(...);
   *** postMessage(...);
   *** receiveFile(...);
   *** requestPostMessageChannel(...);
   *** requestPostMessageChannelWithExtras(...);
   *** updateVisuals(...);
   *** validateRelationship(...);
   *** warmup(...);
}

-keep class android.support.customtabs.ICustomTabsService$Stub
-keepclassmembers class android.support.customtabs.ICustomTabsService$Stub {
   *** extraCommand(...);
   *** mayLaunchUrl(...);
   *** newSession(...);
   *** newSessionWithExtras(...);
   *** postMessage(...);
   *** receiveFile(...);
   *** requestPostMessageChannel(...);
   *** requestPostMessageChannelWithExtras(...);
   *** updateVisuals(...);
   *** validateRelationship(...);
   *** warmup(...);
}

-keep class android.support.customtabs.ICustomTabsService
-keepclassmembers class android.support.customtabs.ICustomTabsService {
}

-keep class android.support.customtabs.IPostMessageService$Default
-keepclassmembers class android.support.customtabs.IPostMessageService$Default {
   <init>(...);
   *** asBinder(...);
   *** onMessageChannelReady(...);
   *** onPostMessage(...);
}

-keep class android.support.customtabs.IPostMessageService$Stub
-keepclassmembers class android.support.customtabs.IPostMessageService$Stub {
   <init>(...);
   *** getDefaultImpl(...);
   *** asBinder(...);
   *** asInterface(...);
   *** onTransact(...);
   *** setDefaultImpl(...);
   *** onMessageChannelReady(...);
   *** onPostMessage(...);
}

-keep class android.support.customtabs.IPostMessageService$Stub
-keepclassmembers class android.support.customtabs.IPostMessageService$Stub {
   *** onMessageChannelReady(...);
   *** onPostMessage(...);
}

-keep class android.support.customtabs.IPostMessageService
-keepclassmembers class android.support.customtabs.IPostMessageService {
}

-keep class androidx.browser.trusted.TokenStore
-keepclassmembers class androidx.browser.trusted.TokenStore {
}

-keep class androidx.browser.trusted.TrustedWebActivityDisplayMode$DefaultMode
-keepclassmembers class androidx.browser.trusted.TrustedWebActivityDisplayMode$DefaultMode {
   <init>(...);
   *** toBundle(...);
}

-keep class androidx.browser.trusted.TrustedWebActivityDisplayMode$ImmersiveMode
-keepclassmembers class androidx.browser.trusted.TrustedWebActivityDisplayMode$ImmersiveMode {
   <init>(...);
   *** isSticky(...);
   *** layoutInDisplayCutoutMode(...);
   *** toBundle(...);
}

-keep class androidx.browser.trusted.TrustedWebActivityDisplayMode
-keepclassmembers class androidx.browser.trusted.TrustedWebActivityDisplayMode {
   *** fromBundle(...);
}

-keep class androidx.browser.trusted.TrustedWebActivityDisplayMode
-keepclassmembers class androidx.browser.trusted.TrustedWebActivityDisplayMode {
}

-keep class androidx.browser.trusted.TrustedWebActivityDisplayMode
-keepclassmembers class androidx.browser.trusted.TrustedWebActivityDisplayMode {
}

-keep class androidx.browser.trusted.NotificationApiHelperForM
-keepclassmembers class androidx.browser.trusted.NotificationApiHelperForM {
}

-keep class androidx.browser.trusted.ScreenOrientation$LockType
-keepclassmembers class androidx.browser.trusted.ScreenOrientation$LockType {
}

-keep class androidx.browser.trusted.ScreenOrientation
-keepclassmembers class androidx.browser.trusted.ScreenOrientation {
}

-keep class androidx.browser.trusted.Token
-keepclassmembers class androidx.browser.trusted.Token {
   *** create(...);
   *** deserialize(...);
   *** matches(...);
   *** serialize(...);
}

-keep class androidx.browser.trusted.TrustedWebActivityCallback
-keepclassmembers class androidx.browser.trusted.TrustedWebActivityCallback {
   <init>(...);
   *** onExtraCallback(...);
}

-keep class androidx.browser.trusted.TrustedWebActivityCallback
-keepclassmembers class androidx.browser.trusted.TrustedWebActivityCallback {
   *** onExtraCallback(...);
}

-keep class androidx.browser.trusted.TrustedWebActivityCallbackRemote
-keepclassmembers class androidx.browser.trusted.TrustedWebActivityCallbackRemote {
   *** runExtraCallback(...);
}

-keep class androidx.browser.trusted.TrustedWebActivityIntent
-keepclassmembers class androidx.browser.trusted.TrustedWebActivityIntent {
   *** getIntent(...);
   *** launchTrustedWebActivity(...);
}

-keep class androidx.browser.trusted.TrustedWebActivityIntentBuilder
-keepclassmembers class androidx.browser.trusted.TrustedWebActivityIntentBuilder {
   <init>(...);
   *** getDisplayMode(...);
   *** getUri(...);
   *** build(...);
   *** buildCustomTabsIntent(...);
   *** setAdditionalTrustedOrigins(...);
   *** setColorScheme(...);
   *** setColorSchemeParams(...);
   *** setDefaultColorSchemeParams(...);
   *** setDisplayMode(...);
   *** setNavigationBarColor(...);
   *** setNavigationBarDividerColor(...);
   *** setScreenOrientation(...);
   *** setShareParams(...);
   *** setSplashScreenParams(...);
   *** setToolbarColor(...);
}

-keep class androidx.browser.trusted.TrustedWebActivityService
-keepclassmembers class androidx.browser.trusted.TrustedWebActivityService {
   <init>(...);
   *** getTokenStore(...);
   *** onAreNotificationsEnabled(...);
   *** onBind(...);
   *** onCancelNotification(...);
   *** onExtraCommand(...);
   *** onGetActiveNotifications(...);
   *** onGetSmallIconBitmap(...);
   *** onGetSmallIconId(...);
   *** onNotifyNotificationWithChannel(...);
   *** onUnbind(...);
}

-keep class androidx.browser.trusted.TrustedWebActivityService
-keepclassmembers class androidx.browser.trusted.TrustedWebActivityService {
   *** getTokenStore(...);
}

-keep class androidx.browser.trusted.TrustedWebActivityServiceConnection
-keepclassmembers class androidx.browser.trusted.TrustedWebActivityServiceConnection {
   *** getComponentName(...);
   *** getSmallIconBitmap(...);
   *** getSmallIconId(...);
   *** areNotificationsEnabled(...);
   *** cancel(...);
   *** getActiveNotifications(...);
   *** notify(...);
   *** sendExtraCommand(...);
}

-keep class androidx.browser.trusted.TrustedWebActivityServiceConnectionPool
-keepclassmembers class androidx.browser.trusted.TrustedWebActivityServiceConnectionPool {
   *** connect(...);
   *** create(...);
   *** serviceExistsForScope(...);
}

-keep class androidx.browser.trusted.splashscreens.SplashScreenParamKey
-keepclassmembers class androidx.browser.trusted.splashscreens.SplashScreenParamKey {
}

-keep class androidx.browser.trusted.splashscreens.SplashScreenVersion
-keepclassmembers class androidx.browser.trusted.splashscreens.SplashScreenVersion {
}

-keep class androidx.browser.trusted.sharing.ShareData
-keepclassmembers class androidx.browser.trusted.sharing.ShareData {
   <init>(...);
   *** fromBundle(...);
   *** toBundle(...);
}

-keep class androidx.browser.trusted.sharing.ShareTarget$EncodingType
-keepclassmembers class androidx.browser.trusted.sharing.ShareTarget$EncodingType {
}

-keep class androidx.browser.trusted.sharing.ShareTarget$FileFormField
-keepclassmembers class androidx.browser.trusted.sharing.ShareTarget$FileFormField {
   <init>(...);
}

-keep class androidx.browser.trusted.sharing.ShareTarget$Params
-keepclassmembers class androidx.browser.trusted.sharing.ShareTarget$Params {
   <init>(...);
}

-keep class androidx.browser.trusted.sharing.ShareTarget$RequestMethod
-keepclassmembers class androidx.browser.trusted.sharing.ShareTarget$RequestMethod {
}

-keep class androidx.browser.trusted.sharing.ShareTarget
-keepclassmembers class androidx.browser.trusted.sharing.ShareTarget {
   <init>(...);
   *** fromBundle(...);
   *** toBundle(...);
}

-keep class androidx.browser.browseractions.BrowserActionItem
-keepclassmembers class androidx.browser.browseractions.BrowserActionItem {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getAction(...);
   *** getIconId(...);
   *** getIconUri(...);
   *** getTitle(...);
}

-keep class androidx.browser.browseractions.BrowserActionsFallbackMenuView
-keepclassmembers class androidx.browser.browseractions.BrowserActionsFallbackMenuView {
   <init>(...);
}

-keep class androidx.browser.browseractions.BrowserActionsIntent$BrowserActionsItemId
-keepclassmembers class androidx.browser.browseractions.BrowserActionsIntent$BrowserActionsItemId {
}

-keep class androidx.browser.browseractions.BrowserActionsIntent$BrowserActionsUrlType
-keepclassmembers class androidx.browser.browseractions.BrowserActionsIntent$BrowserActionsUrlType {
}

-keep class androidx.browser.browseractions.BrowserActionsIntent$Builder
-keepclassmembers class androidx.browser.browseractions.BrowserActionsIntent$Builder {
   <init>(...);
   *** build(...);
   *** setCustomItems(...);
   *** setCustomItems(...);
   *** setOnItemSelectedAction(...);
   *** setUrlType(...);
}

-keep class androidx.browser.browseractions.BrowserActionsIntent
-keepclassmembers class androidx.browser.browseractions.BrowserActionsIntent {
   *** getIntent(...);
   *** getBrowserActionsIntentHandlers(...);
   *** getCreatorPackageName(...);
   *** getUntrustedCreatorPackageName(...);
   *** launchIntent(...);
   *** openBrowserAction(...);
   *** openBrowserAction(...);
   *** parseBrowserActionItems(...);
}

-keep class androidx.browser.browseractions.BrowserServiceFileProvider
-keepclassmembers class androidx.browser.browseractions.BrowserServiceFileProvider {
   <init>(...);
   *** grantReadPermission(...);
   *** loadBitmap(...);
}

-keep class androidx.browser.customtabs.CustomTabsClient
-keepclassmembers class androidx.browser.customtabs.CustomTabsClient {
   *** attachSession(...);
   *** bindCustomTabsService(...);
   *** bindCustomTabsServicePreservePriority(...);
   *** connectAndInitialize(...);
   *** extraCommand(...);
   *** getPackageName(...);
   *** getPackageName(...);
   *** newPendingSession(...);
   *** newSession(...);
   *** newSession(...);
   *** warmup(...);
}

-keep class androidx.browser.customtabs.CustomTabColorSchemeParams$Builder
-keepclassmembers class androidx.browser.customtabs.CustomTabColorSchemeParams$Builder {
   <init>(...);
   *** build(...);
   *** setNavigationBarColor(...);
   *** setNavigationBarDividerColor(...);
   *** setSecondaryToolbarColor(...);
   *** setToolbarColor(...);
}

-keep class androidx.browser.customtabs.CustomTabColorSchemeParams
-keepclassmembers class androidx.browser.customtabs.CustomTabColorSchemeParams {
}

-keep class androidx.browser.customtabs.CustomTabsCallback
-keepclassmembers class androidx.browser.customtabs.CustomTabsCallback {
   <init>(...);
   *** extraCallback(...);
   *** extraCallbackWithResult(...);
   *** onMessageChannelReady(...);
   *** onNavigationEvent(...);
   *** onPostMessage(...);
   *** onRelationshipValidationResult(...);
}

-keep class androidx.browser.customtabs.CustomTabsIntent$Builder
-keepclassmembers class androidx.browser.customtabs.CustomTabsIntent$Builder {
   <init>(...);
   <init>(...);
   *** addDefaultShareMenuItem(...);
   *** addMenuItem(...);
   *** addToolbarItem(...);
   *** build(...);
   *** enableUrlBarHiding(...);
   *** setActionButton(...);
   *** setActionButton(...);
   *** setCloseButtonIcon(...);
   *** setColorScheme(...);
   *** setColorSchemeParams(...);
   *** setDefaultColorSchemeParams(...);
   *** setDefaultShareMenuItemEnabled(...);
   *** setExitAnimations(...);
   *** setInstantAppsEnabled(...);
   *** setNavigationBarColor(...);
   *** setNavigationBarDividerColor(...);
   *** setPendingSession(...);
   *** setSecondaryToolbarColor(...);
   *** setSecondaryToolbarViews(...);
   *** setSession(...);
   *** setShareState(...);
   *** setShowTitle(...);
   *** setStartAnimations(...);
   *** setToolbarColor(...);
   *** setUrlBarHidingEnabled(...);
}

-keep class androidx.browser.customtabs.CustomTabsIntent$ColorScheme
-keepclassmembers class androidx.browser.customtabs.CustomTabsIntent$ColorScheme {
}

-keep class androidx.browser.customtabs.CustomTabsIntent$ShareState
-keepclassmembers class androidx.browser.customtabs.CustomTabsIntent$ShareState {
}

-keep class androidx.browser.customtabs.CustomTabsIntent
-keepclassmembers class androidx.browser.customtabs.CustomTabsIntent {
   *** getMaxToolbarItems(...);
   *** getColorSchemeParams(...);
   *** launchUrl(...);
   *** setAlwaysUseBrowserUI(...);
   *** shouldAlwaysUseBrowserUI(...);
}

-keep class androidx.browser.customtabs.CustomTabsService$FilePurpose
-keepclassmembers class androidx.browser.customtabs.CustomTabsService$FilePurpose {
}

-keep class androidx.browser.customtabs.CustomTabsService$Relation
-keepclassmembers class androidx.browser.customtabs.CustomTabsService$Relation {
}

-keep class androidx.browser.customtabs.CustomTabsService$Result
-keepclassmembers class androidx.browser.customtabs.CustomTabsService$Result {
}

-keep class androidx.browser.customtabs.CustomTabsService
-keepclassmembers class androidx.browser.customtabs.CustomTabsService {
   <init>(...);
   *** cleanUpSession(...);
   *** extraCommand(...);
   *** mayLaunchUrl(...);
   *** newSession(...);
   *** onBind(...);
   *** postMessage(...);
   *** receiveFile(...);
   *** requestPostMessageChannel(...);
   *** updateVisuals(...);
   *** validateRelationship(...);
   *** warmup(...);
}

-keep class androidx.browser.customtabs.CustomTabsService
-keepclassmembers class androidx.browser.customtabs.CustomTabsService {
   *** extraCommand(...);
   *** mayLaunchUrl(...);
   *** newSession(...);
   *** postMessage(...);
   *** receiveFile(...);
   *** requestPostMessageChannel(...);
   *** updateVisuals(...);
   *** validateRelationship(...);
   *** warmup(...);
}

-keep class androidx.browser.customtabs.CustomTabsServiceConnection
-keepclassmembers class androidx.browser.customtabs.CustomTabsServiceConnection {
   <init>(...);
   *** onCustomTabsServiceConnected(...);
   *** onServiceConnected(...);
   *** onServiceDisconnected(...);
}

-keep class androidx.browser.customtabs.CustomTabsServiceConnection
-keepclassmembers class androidx.browser.customtabs.CustomTabsServiceConnection {
   *** onCustomTabsServiceConnected(...);
   *** onServiceDisconnected(...);
}

-keep class androidx.browser.customtabs.CustomTabsSession$PendingSession
-keepclassmembers class androidx.browser.customtabs.CustomTabsSession$PendingSession {
}

-keep class androidx.browser.customtabs.CustomTabsSession
-keepclassmembers class androidx.browser.customtabs.CustomTabsSession {
   *** createMockSessionForTesting(...);
   *** mayLaunchUrl(...);
   *** postMessage(...);
   *** receiveFile(...);
   *** requestPostMessageChannel(...);
   *** setActionButton(...);
   *** setSecondaryToolbarViews(...);
   *** setToolbarItem(...);
   *** validateRelationship(...);
}

-keep class androidx.browser.customtabs.CustomTabsSessionToken
-keepclassmembers class androidx.browser.customtabs.CustomTabsSessionToken {
   *** getCallback(...);
   *** hasCallback(...);
   *** hasId(...);
   *** createMockSessionTokenForTesting(...);
   *** getSessionTokenFromIntent(...);
   *** isAssociatedWith(...);
}

-keep class androidx.browser.customtabs.PostMessageBackend
-keepclassmembers class androidx.browser.customtabs.PostMessageBackend {
}

-keep class androidx.browser.customtabs.PostMessageService
-keepclassmembers class androidx.browser.customtabs.PostMessageService {
   <init>(...);
   *** onBind(...);
}

-keep class androidx.browser.customtabs.PostMessageServiceConnection
-keepclassmembers class androidx.browser.customtabs.PostMessageServiceConnection {
   <init>(...);
   *** bindSessionToPostMessageService(...);
   *** bindSessionToPostMessageService(...);
   *** cleanup(...);
   *** notifyMessageChannelReady(...);
   *** onDisconnectChannel(...);
   *** onNotifyMessageChannelReady(...);
   *** onPostMessage(...);
   *** onPostMessageServiceConnected(...);
   *** onPostMessageServiceDisconnected(...);
   *** onServiceConnected(...);
   *** onServiceDisconnected(...);
   *** postMessage(...);
   *** setPackageName(...);
   *** unbindFromContext(...);
}

-keep class androidx.browser.customtabs.PostMessageServiceConnection
-keepclassmembers class androidx.browser.customtabs.PostMessageServiceConnection {
}

-keep class androidx.browser.customtabs.TrustedWebUtils
-keepclassmembers class androidx.browser.customtabs.TrustedWebUtils {
   *** areSplashScreensSupported(...);
   *** launchAsTrustedWebActivity(...);
   *** launchBrowserSiteSettings(...);
   *** transferSplashImage(...);
}

# ACW for Xamarin.AndroidX.CardView
-keep class androidx.cardview.widget.CardView
-keepclassmembers class androidx.cardview.widget.CardView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCardBackgroundColor(...);
   *** setCardBackgroundColor(...);
   *** getCardElevation(...);
   *** setCardElevation(...);
   *** getContentPaddingBottom(...);
   *** getContentPaddingLeft(...);
   *** getContentPaddingRight(...);
   *** getContentPaddingTop(...);
   *** getMaxCardElevation(...);
   *** setMaxCardElevation(...);
   *** getPreventCornerOverlap(...);
   *** setPreventCornerOverlap(...);
   *** getRadius(...);
   *** setRadius(...);
   *** getUseCompatPadding(...);
   *** setUseCompatPadding(...);
   *** setCardBackgroundColor(...);
   *** setContentPadding(...);
}

-keep class androidx.cardview.widget.RoundRectDrawableWithShadow
-keepclassmembers class androidx.cardview.widget.RoundRectDrawableWithShadow {
   *** getOpacity(...);
   *** draw(...);
   *** setAlpha(...);
   *** setColorFilter(...);
}

# ACW for Xamarin.AndroidX.Collection
-keep class androidx.collection.ArrayMap
-keepclassmembers class androidx.collection.ArrayMap {
   <init>(...);
   <init>(...);
   <init>(...);
   *** containsAll(...);
   *** entrySet(...);
   *** keySet(...);
   *** putAll(...);
   *** removeAll(...);
   *** retainAll(...);
   *** values(...);
}

-keep class androidx.collection.ArraySet
-keepclassmembers class androidx.collection.ArraySet {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** isEmpty(...);
   *** add(...);
   *** addAll(...);
   *** addAll(...);
   *** clear(...);
   *** contains(...);
   *** containsAll(...);
   *** ensureCapacity(...);
   *** indexOf(...);
   *** iterator(...);
   *** remove(...);
   *** removeAll(...);
   *** removeAll(...);
   *** removeAt(...);
   *** retainAll(...);
   *** size(...);
   *** toArray(...);
   *** toArray(...);
   *** valueAt(...);
}

-keep class androidx.collection.CircularArray
-keepclassmembers class androidx.collection.CircularArray {
   <init>(...);
   <init>(...);
   *** getFirst(...);
   *** isEmpty(...);
   *** getLast(...);
   *** addFirst(...);
   *** addLast(...);
   *** clear(...);
   *** get(...);
   *** popFirst(...);
   *** popLast(...);
   *** removeFromEnd(...);
   *** removeFromStart(...);
   *** size(...);
}

-keep class androidx.collection.CircularIntArray
-keepclassmembers class androidx.collection.CircularIntArray {
   <init>(...);
   <init>(...);
   *** getFirst(...);
   *** isEmpty(...);
   *** getLast(...);
   *** addFirst(...);
   *** addLast(...);
   *** clear(...);
   *** get(...);
   *** popFirst(...);
   *** popLast(...);
   *** removeFromEnd(...);
   *** removeFromStart(...);
   *** size(...);
}

-keep class androidx.collection.LongSparseArray
-keepclassmembers class androidx.collection.LongSparseArray {
   <init>(...);
   <init>(...);
   *** isEmpty(...);
   *** append(...);
   *** clear(...);
   *** clone(...);
   *** containsKey(...);
   *** containsValue(...);
   *** delete(...);
   *** get(...);
   *** get(...);
   *** indexOfKey(...);
   *** indexOfValue(...);
   *** keyAt(...);
   *** put(...);
   *** putAll(...);
   *** putIfAbsent(...);
   *** remove(...);
   *** remove(...);
   *** removeAt(...);
   *** replace(...);
   *** replace(...);
   *** setValueAt(...);
   *** size(...);
   *** valueAt(...);
}

-keep class androidx.collection.LruCache
-keepclassmembers class androidx.collection.LruCache {
   <init>(...);
   *** create(...);
   *** createCount(...);
   *** entryRemoved(...);
   *** evictAll(...);
   *** evictionCount(...);
   *** get(...);
   *** hitCount(...);
   *** maxSize(...);
   *** missCount(...);
   *** put(...);
   *** putCount(...);
   *** remove(...);
   *** resize(...);
   *** size(...);
   *** sizeOf(...);
   *** snapshot(...);
   *** toString(...);
   *** trimToSize(...);
}

-keep class androidx.collection.SimpleArrayMap
-keepclassmembers class androidx.collection.SimpleArrayMap {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isEmpty(...);
   *** clear(...);
   *** containsKey(...);
   *** containsValue(...);
   *** ensureCapacity(...);
   *** get(...);
   *** getOrDefault(...);
   *** indexOfKey(...);
   *** keyAt(...);
   *** put(...);
   *** putAll(...);
   *** putIfAbsent(...);
   *** remove(...);
   *** remove(...);
   *** removeAt(...);
   *** replace(...);
   *** replace(...);
   *** setValueAt(...);
   *** size(...);
   *** valueAt(...);
}

-keep class androidx.collection.SparseArrayCompat
-keepclassmembers class androidx.collection.SparseArrayCompat {
   <init>(...);
   <init>(...);
   *** isEmpty(...);
   *** append(...);
   *** clear(...);
   *** clone(...);
   *** containsKey(...);
   *** containsValue(...);
   *** delete(...);
   *** get(...);
   *** get(...);
   *** indexOfKey(...);
   *** indexOfValue(...);
   *** keyAt(...);
   *** put(...);
   *** putAll(...);
   *** putIfAbsent(...);
   *** remove(...);
   *** remove(...);
   *** removeAt(...);
   *** removeAtRange(...);
   *** replace(...);
   *** replace(...);
   *** setValueAt(...);
   *** size(...);
   *** valueAt(...);
}

# ACW for Xamarin.AndroidX.Concurrent.Futures
-keep class androidx.concurrent.futures.AbstractResolvableFuture
-keepclassmembers class androidx.concurrent.futures.AbstractResolvableFuture {
   <init>(...);
   *** isCancelled(...);
   *** isDone(...);
   *** addListener(...);
   *** afterDone(...);
   *** cancel(...);
   *** get(...);
   *** get(...);
   *** interruptTask(...);
   *** pendingToString(...);
   *** set(...);
   *** setException(...);
   *** setFuture(...);
   *** wasInterrupted(...);
}

-keep class androidx.concurrent.futures.AbstractResolvableFuture
-keepclassmembers class androidx.concurrent.futures.AbstractResolvableFuture {
}

-keep class androidx.concurrent.futures.CallbackToFutureAdapter$Completer
-keepclassmembers class androidx.concurrent.futures.CallbackToFutureAdapter$Completer {
   *** addCancellationListener(...);
   *** set(...);
   *** setCancelled(...);
   *** setException(...);
}

-keep class androidx.concurrent.futures.CallbackToFutureAdapter$Resolver
-keepclassmembers class androidx.concurrent.futures.CallbackToFutureAdapter$Resolver {
}

-keep class androidx.concurrent.futures.CallbackToFutureAdapter
-keepclassmembers class androidx.concurrent.futures.CallbackToFutureAdapter {
   *** getFuture(...);
}

-keep class androidx.concurrent.futures.DirectExecutor
-keepclassmembers class androidx.concurrent.futures.DirectExecutor {
   *** execute(...);
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.concurrent.futures.ResolvableFuture
-keepclassmembers class androidx.concurrent.futures.ResolvableFuture {
   *** create(...);
   *** set(...);
   *** setException(...);
   *** setFuture(...);
}

# ACW for Xamarin.AndroidX.CoordinatorLayout
-keep class androidx.coordinatorlayout.widget.CoordinatorLayout$AttachedBehavior
-keepclassmembers class androidx.coordinatorlayout.widget.CoordinatorLayout$AttachedBehavior {
}

-keep class androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior
-keepclassmembers class androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior {
   <init>(...);
   <init>(...);
   *** blocksInteractionBelow(...);
   *** getInsetDodgeRect(...);
   *** getScrimColor(...);
   *** getScrimOpacity(...);
   *** getTag(...);
   *** layoutDependsOn(...);
   *** onApplyWindowInsets(...);
   *** onAttachedToLayoutParams(...);
   *** onDependentViewChanged(...);
   *** onDependentViewRemoved(...);
   *** onDetachedFromLayoutParams(...);
   *** onInterceptTouchEvent(...);
   *** onLayoutChild(...);
   *** onMeasureChild(...);
   *** onNestedFling(...);
   *** onNestedPreFling(...);
   *** onNestedPreScroll(...);
   *** onNestedPreScroll(...);
   *** onNestedScroll(...);
   *** onNestedScroll(...);
   *** onNestedScroll(...);
   *** onNestedScrollAccepted(...);
   *** onNestedScrollAccepted(...);
   *** onRequestChildRectangleOnScreen(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** onStartNestedScroll(...);
   *** onStartNestedScroll(...);
   *** onStopNestedScroll(...);
   *** onStopNestedScroll(...);
   *** onTouchEvent(...);
   *** setTag(...);
}

-keep class androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior
-keepclassmembers class androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior {
}

-keep class androidx.coordinatorlayout.widget.CoordinatorLayout$DefaultBehavior
-keepclassmembers class androidx.coordinatorlayout.widget.CoordinatorLayout$DefaultBehavior {
}

-keep class androidx.coordinatorlayout.widget.CoordinatorLayout$DispatchChangeEvent
-keepclassmembers class androidx.coordinatorlayout.widget.CoordinatorLayout$DispatchChangeEvent {
}

-keep class androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams
-keepclassmembers class androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getAnchorId(...);
   *** setAnchorId(...);
   *** getBehavior(...);
   *** setBehavior(...);
}

-keep class androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState
-keepclassmembers class androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState {
   <init>(...);
   <init>(...);
}

-keep class androidx.coordinatorlayout.widget.CoordinatorLayout
-keepclassmembers class androidx.coordinatorlayout.widget.CoordinatorLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getLastWindowInsets(...);
   *** getStatusBarBackground(...);
   *** setStatusBarBackground(...);
   *** dispatchDependentViewsChanged(...);
   *** doViewsOverlap(...);
   *** getDependencies(...);
   *** getDependents(...);
   *** isPointInChildBounds(...);
   *** onAttachedToWindow(...);
   *** onDetachedFromWindow(...);
   *** onDraw(...);
   *** onLayout(...);
   *** onLayoutChild(...);
   *** onMeasureChild(...);
   *** onNestedPreScroll(...);
   *** onNestedScroll(...);
   *** onNestedScroll(...);
   *** onNestedScrollAccepted(...);
   *** onStartNestedScroll(...);
   *** onStopNestedScroll(...);
   *** setStatusBarBackgroundColor(...);
   *** setStatusBarBackgroundResource(...);
}

-keep class androidx.coordinatorlayout.widget.DirectedAcyclicGraph
-keepclassmembers class androidx.coordinatorlayout.widget.DirectedAcyclicGraph {
   <init>(...);
   *** getSortedList(...);
   *** addEdge(...);
   *** addNode(...);
   *** clear(...);
   *** contains(...);
   *** getIncomingEdges(...);
   *** getOutgoingEdges(...);
   *** hasOutgoingEdges(...);
}

-keep class androidx.coordinatorlayout.widget.ViewGroupUtils
-keepclassmembers class androidx.coordinatorlayout.widget.ViewGroupUtils {
   *** getDescendantRect(...);
}

# ACW for Xamarin.AndroidX.Core.Core.Ktx
-keep class androidx.core.widget.TextViewKt
-keepclassmembers class androidx.core.widget.TextViewKt {
   *** addTextChangedListener(...);
   *** doAfterTextChanged(...);
   *** doBeforeTextChanged(...);
   *** doOnTextChanged(...);
}

-keep class androidx.core.view.MenuKt
-keepclassmembers class androidx.core.view.MenuKt {
   *** contains(...);
   *** forEach(...);
   *** forEachIndexed(...);
   *** get(...);
   *** getChildren(...);
   *** getSize(...);
   *** isEmpty(...);
   *** isNotEmpty(...);
   *** iterator(...);
   *** minusAssign(...);
}

-keep class androidx.core.view.ViewGroupKt
-keepclassmembers class androidx.core.view.ViewGroupKt {
   *** contains(...);
   *** forEach(...);
   *** forEachIndexed(...);
   *** get(...);
   *** getChildren(...);
   *** getDescendants(...);
   *** getSize(...);
   *** isEmpty(...);
   *** isNotEmpty(...);
   *** iterator(...);
   *** minusAssign(...);
   *** plusAssign(...);
   *** setMargins(...);
   *** updateMargins(...);
   *** updateMarginsRelative(...);
}

-keep class androidx.core.view.ViewKt
-keepclassmembers class androidx.core.view.ViewKt {
   *** doOnAttach(...);
   *** doOnDetach(...);
   *** doOnLayout(...);
   *** doOnNextLayout(...);
   *** doOnPreDraw(...);
   *** drawToBitmap(...);
   *** getAllViews(...);
   *** getAncestors(...);
   *** getMarginBottom(...);
   *** getMarginEnd(...);
   *** getMarginLeft(...);
   *** getMarginRight(...);
   *** getMarginStart(...);
   *** getMarginTop(...);
   *** isGone(...);
   *** isInvisible(...);
   *** isVisible(...);
   *** postDelayed(...);
   *** postOnAnimationDelayed(...);
   *** setGone(...);
   *** setInvisible(...);
   *** setPadding(...);
   *** setVisible(...);
   *** updateLayoutParams(...);
   *** updatePadding(...);
   *** updatePaddingRelative(...);
}

-keep class androidx.core.util.AtomicFileKt
-keepclassmembers class androidx.core.util.AtomicFileKt {
   *** readBytes(...);
   *** readText(...);
   *** tryWrite(...);
   *** writeBytes(...);
   *** writeText(...);
}

-keep class androidx.core.util.HalfKt
-keepclassmembers class androidx.core.util.HalfKt {
   *** toHalf(...);
   *** toHalf(...);
   *** toHalf(...);
   *** toHalf(...);
}

-keep class androidx.core.util.LongSparseArrayKt
-keepclassmembers class androidx.core.util.LongSparseArrayKt {
   *** contains(...);
   *** containsKey(...);
   *** containsValue(...);
   *** forEach(...);
   *** getOrDefault(...);
   *** getOrElse(...);
   *** getSize(...);
   *** isEmpty(...);
   *** isNotEmpty(...);
   *** keyIterator(...);
   *** plus(...);
   *** putAll(...);
   *** remove(...);
   *** set(...);
   *** valueIterator(...);
}

-keep class androidx.core.util.LruCacheKt
-keepclassmembers class androidx.core.util.LruCacheKt {
   *** lruCache(...);
}

-keep class androidx.core.util.PairKt
-keepclassmembers class androidx.core.util.PairKt {
   *** component1(...);
   *** component1(...);
   *** component2(...);
   *** component2(...);
   *** toAndroidPair(...);
   *** toAndroidXPair(...);
   *** toKotlinPair(...);
   *** toKotlinPair(...);
}

-keep class androidx.core.util.RangeKt
-keepclassmembers class androidx.core.util.RangeKt {
   *** and(...);
   *** plus(...);
   *** plus(...);
   *** rangeTo(...);
   *** toClosedRange(...);
   *** toRange(...);
}

-keep class androidx.core.util.SizeKt
-keepclassmembers class androidx.core.util.SizeKt {
   *** component1(...);
   *** component1(...);
   *** component2(...);
   *** component2(...);
}

-keep class androidx.core.util.SparseArrayKt
-keepclassmembers class androidx.core.util.SparseArrayKt {
   *** contains(...);
   *** containsKey(...);
   *** containsValue(...);
   *** forEach(...);
   *** getOrDefault(...);
   *** getOrElse(...);
   *** getSize(...);
   *** isEmpty(...);
   *** isNotEmpty(...);
   *** keyIterator(...);
   *** plus(...);
   *** putAll(...);
   *** remove(...);
   *** set(...);
   *** valueIterator(...);
}

-keep class androidx.core.util.SparseBooleanArrayKt
-keepclassmembers class androidx.core.util.SparseBooleanArrayKt {
   *** contains(...);
   *** containsKey(...);
   *** containsValue(...);
   *** forEach(...);
   *** getOrDefault(...);
   *** getOrElse(...);
   *** getSize(...);
   *** isEmpty(...);
   *** isNotEmpty(...);
   *** keyIterator(...);
   *** plus(...);
   *** putAll(...);
   *** remove(...);
   *** set(...);
   *** valueIterator(...);
}

-keep class androidx.core.util.SparseIntArrayKt
-keepclassmembers class androidx.core.util.SparseIntArrayKt {
   *** contains(...);
   *** containsKey(...);
   *** containsValue(...);
   *** forEach(...);
   *** getOrDefault(...);
   *** getOrElse(...);
   *** getSize(...);
   *** isEmpty(...);
   *** isNotEmpty(...);
   *** keyIterator(...);
   *** plus(...);
   *** putAll(...);
   *** remove(...);
   *** set(...);
   *** valueIterator(...);
}

-keep class androidx.core.util.SparseLongArrayKt
-keepclassmembers class androidx.core.util.SparseLongArrayKt {
   *** contains(...);
   *** containsKey(...);
   *** containsValue(...);
   *** forEach(...);
   *** getOrDefault(...);
   *** getOrElse(...);
   *** getSize(...);
   *** isEmpty(...);
   *** isNotEmpty(...);
   *** keyIterator(...);
   *** plus(...);
   *** putAll(...);
   *** remove(...);
   *** set(...);
   *** valueIterator(...);
}

-keep class androidx.core.transition.TransitionKt
-keepclassmembers class androidx.core.transition.TransitionKt {
   *** addListener(...);
   *** doOnCancel(...);
   *** doOnEnd(...);
   *** doOnPause(...);
   *** doOnResume(...);
   *** doOnStart(...);
}

-keep class androidx.core.text.CharSequenceKt
-keepclassmembers class androidx.core.text.CharSequenceKt {
   *** isDigitsOnly(...);
   *** trimmedLength(...);
}

-keep class androidx.core.text.HtmlKt
-keepclassmembers class androidx.core.text.HtmlKt {
   *** parseAsHtml(...);
   *** toHtml(...);
}

-keep class androidx.core.text.LocaleKt
-keepclassmembers class androidx.core.text.LocaleKt {
   *** getLayoutDirection(...);
}

-keep class androidx.core.text.SpannableStringBuilderKt
-keepclassmembers class androidx.core.text.SpannableStringBuilderKt {
   *** backgroundColor(...);
   *** bold(...);
   *** buildSpannedString(...);
   *** color(...);
   *** inSpans(...);
   *** inSpans(...);
   *** italic(...);
   *** scale(...);
   *** strikeThrough(...);
   *** subscript(...);
   *** superscript(...);
   *** underline(...);
}

-keep class androidx.core.text.SpannableStringKt
-keepclassmembers class androidx.core.text.SpannableStringKt {
   *** clearSpans(...);
   *** set(...);
   *** set(...);
   *** toSpannable(...);
}

-keep class androidx.core.text.SpannedStringKt
-keepclassmembers class androidx.core.text.SpannedStringKt {
   *** toSpanned(...);
}

-keep class androidx.core.text.StringKt
-keepclassmembers class androidx.core.text.StringKt {
   *** htmlEncode(...);
}

-keep class androidx.core.os.BundleKt
-keepclassmembers class androidx.core.os.BundleKt {
   *** bundleOf(...);
}

-keep class androidx.core.os.HandlerKt
-keepclassmembers class androidx.core.os.HandlerKt {
   *** postAtTime(...);
   *** postDelayed(...);
}

-keep class androidx.core.os.PersistableBundleKt
-keepclassmembers class androidx.core.os.PersistableBundleKt {
   *** persistableBundleOf(...);
}

-keep class androidx.core.os.TraceKt
-keepclassmembers class androidx.core.os.TraceKt {
   *** trace(...);
}

-keep class androidx.core.net.UriKt
-keepclassmembers class androidx.core.net.UriKt {
   *** toFile(...);
   *** toUri(...);
   *** toUri(...);
}

-keep class androidx.core.location.LocationKt
-keepclassmembers class androidx.core.location.LocationKt {
   *** component1(...);
   *** component2(...);
}

-keep class androidx.core.graphics.BitmapKt
-keepclassmembers class androidx.core.graphics.BitmapKt {
   *** applyCanvas(...);
   *** contains(...);
   *** contains(...);
   *** createBitmap(...);
   *** createBitmap(...);
   *** get(...);
   *** scale(...);
   *** set(...);
}

-keep class androidx.core.graphics.CanvasKt
-keepclassmembers class androidx.core.graphics.CanvasKt {
   *** withClip(...);
   *** withClip(...);
   *** withClip(...);
   *** withClip(...);
   *** withClip(...);
   *** withMatrix(...);
   *** withRotation(...);
   *** withSave(...);
   *** withScale(...);
   *** withSkew(...);
   *** withTranslation(...);
}

-keep class androidx.core.graphics.ColorKt
-keepclassmembers class androidx.core.graphics.ColorKt {
   *** component1(...);
   *** component1(...);
   *** component1(...);
   *** component2(...);
   *** component2(...);
   *** component2(...);
   *** component3(...);
   *** component3(...);
   *** component3(...);
   *** component4(...);
   *** component4(...);
   *** component4(...);
   *** convertTo(...);
   *** convertTo(...);
   *** convertTo(...);
   *** convertTo(...);
   *** convertTo(...);
   *** convertTo(...);
   *** getAlpha(...);
   *** getAlpha(...);
   *** getBlue(...);
   *** getBlue(...);
   *** getColorSpace(...);
   *** getGreen(...);
   *** getGreen(...);
   *** getLuminance(...);
   *** getLuminance(...);
   *** getRed(...);
   *** getRed(...);
   *** isSrgb(...);
   *** isWideGamut(...);
   *** plus(...);
   *** toColor(...);
   *** toColor(...);
   *** toColorInt(...);
   *** toColorInt(...);
   *** toColorLong(...);
}

-keep class androidx.core.graphics.ImageDecoderKt
-keepclassmembers class androidx.core.graphics.ImageDecoderKt {
   *** decodeBitmap(...);
   *** decodeDrawable(...);
}

-keep class androidx.core.graphics.MatrixKt
-keepclassmembers class androidx.core.graphics.MatrixKt {
   *** rotationMatrix(...);
   *** scaleMatrix(...);
   *** times(...);
   *** translationMatrix(...);
   *** values(...);
}

-keep class androidx.core.graphics.PaintKt
-keepclassmembers class androidx.core.graphics.PaintKt {
   *** setBlendMode(...);
}

-keep class androidx.core.graphics.PathKt
-keepclassmembers class androidx.core.graphics.PathKt {
   *** and(...);
   *** flatten(...);
   *** minus(...);
   *** or(...);
   *** plus(...);
   *** xor(...);
}

-keep class androidx.core.graphics.PictureKt
-keepclassmembers class androidx.core.graphics.PictureKt {
   *** record(...);
}

-keep class androidx.core.graphics.PointKt
-keepclassmembers class androidx.core.graphics.PointKt {
   *** component1(...);
   *** component1(...);
   *** component2(...);
   *** component2(...);
   *** minus(...);
   *** minus(...);
   *** minus(...);
   *** minus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** toPoint(...);
   *** toPointF(...);
   *** unaryMinus(...);
   *** unaryMinus(...);
}

-keep class androidx.core.graphics.PorterDuffKt
-keepclassmembers class androidx.core.graphics.PorterDuffKt {
   *** toColorFilter(...);
   *** toXfermode(...);
}

-keep class androidx.core.graphics.RectKt
-keepclassmembers class androidx.core.graphics.RectKt {
   *** and(...);
   *** and(...);
   *** component1(...);
   *** component1(...);
   *** component2(...);
   *** component2(...);
   *** component3(...);
   *** component3(...);
   *** component4(...);
   *** component4(...);
   *** contains(...);
   *** contains(...);
   *** minus(...);
   *** minus(...);
   *** minus(...);
   *** minus(...);
   *** minus(...);
   *** minus(...);
   *** or(...);
   *** or(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** times(...);
   *** times(...);
   *** times(...);
   *** toRect(...);
   *** toRectF(...);
   *** toRegion(...);
   *** toRegion(...);
   *** transform(...);
   *** xor(...);
   *** xor(...);
}

-keep class androidx.core.graphics.RegionKt
-keepclassmembers class androidx.core.graphics.RegionKt {
   *** and(...);
   *** and(...);
   *** contains(...);
   *** forEach(...);
   *** iterator(...);
   *** minus(...);
   *** minus(...);
   *** not(...);
   *** or(...);
   *** or(...);
   *** plus(...);
   *** plus(...);
   *** unaryMinus(...);
   *** xor(...);
   *** xor(...);
}

-keep class androidx.core.graphics.ShaderKt
-keepclassmembers class androidx.core.graphics.ShaderKt {
   *** transform(...);
}

-keep class androidx.core.graphics.drawable.BitmapDrawableKt
-keepclassmembers class androidx.core.graphics.drawable.BitmapDrawableKt {
   *** toDrawable(...);
}

-keep class androidx.core.graphics.drawable.ColorDrawableKt
-keepclassmembers class androidx.core.graphics.drawable.ColorDrawableKt {
   *** toDrawable(...);
   *** toDrawable(...);
}

-keep class androidx.core.graphics.drawable.DrawableKt
-keepclassmembers class androidx.core.graphics.drawable.DrawableKt {
   *** toBitmap(...);
   *** updateBounds(...);
}

-keep class androidx.core.graphics.drawable.IconKt
-keepclassmembers class androidx.core.graphics.drawable.IconKt {
   *** toAdaptiveIcon(...);
   *** toIcon(...);
   *** toIcon(...);
   *** toIcon(...);
}

-keep class androidx.core.database.CursorKt
-keepclassmembers class androidx.core.database.CursorKt {
   *** getBlobOrNull(...);
   *** getDoubleOrNull(...);
   *** getFloatOrNull(...);
   *** getIntOrNull(...);
   *** getLongOrNull(...);
   *** getShortOrNull(...);
   *** getStringOrNull(...);
}

-keep class androidx.core.database.sqlite.SQLiteDatabaseKt
-keepclassmembers class androidx.core.database.sqlite.SQLiteDatabaseKt {
   *** transaction(...);
}

-keep class androidx.core.content.ContentValuesKt
-keepclassmembers class androidx.core.content.ContentValuesKt {
   *** contentValuesOf(...);
}

-keep class androidx.core.content.ContextKt
-keepclassmembers class androidx.core.content.ContextKt {
   *** withStyledAttributes(...);
   *** withStyledAttributes(...);
}

-keep class androidx.core.content.SharedPreferencesKt
-keepclassmembers class androidx.core.content.SharedPreferencesKt {
   *** edit(...);
}

-keep class androidx.core.content.res.TypedArrayKt
-keepclassmembers class androidx.core.content.res.TypedArrayKt {
   *** getBooleanOrThrow(...);
   *** getColorOrThrow(...);
   *** getColorStateListOrThrow(...);
   *** getDimensionOrThrow(...);
   *** getDimensionPixelOffsetOrThrow(...);
   *** getDimensionPixelSizeOrThrow(...);
   *** getDrawableOrThrow(...);
   *** getFloatOrThrow(...);
   *** getFontOrThrow(...);
   *** getIntOrThrow(...);
   *** getIntegerOrThrow(...);
   *** getResourceIdOrThrow(...);
   *** getStringOrThrow(...);
   *** getTextArrayOrThrow(...);
   *** getTextOrThrow(...);
   *** use(...);
}

-keep class androidx.core.animation.AnimatorKt
-keepclassmembers class androidx.core.animation.AnimatorKt {
   *** addListener(...);
   *** addPauseListener(...);
   *** doOnCancel(...);
   *** doOnEnd(...);
   *** doOnPause(...);
   *** doOnRepeat(...);
   *** doOnResume(...);
   *** doOnStart(...);
}

# ACW for Xamarin.AndroidX.Core
-keep class androidx.core.util.Pair
-keepclassmembers class androidx.core.util.Pair {
   <init>(...);
   *** create(...);
}

-keep class androidx.core.internal.view.SupportMenu
-keepclassmembers class androidx.core.internal.view.SupportMenu {
}

-keep class androidx.core.internal.view.SupportMenuItem
-keepclassmembers class androidx.core.internal.view.SupportMenuItem {
}

-keep class androidx.core.graphics.Insets
-keepclassmembers class androidx.core.graphics.Insets {
   *** add(...);
   *** max(...);
   *** min(...);
   *** of(...);
   *** of(...);
   *** subtract(...);
   *** toCompatInsets(...);
   *** toPlatformInsets(...);
   *** wrap(...);
}

-keep class androidx.core.graphics.drawable.IconCompat
-keepclassmembers class androidx.core.graphics.drawable.IconCompat {
   <init>(...);
   *** getBitmap(...);
   *** getResId(...);
   *** getResPackage(...);
   *** getType(...);
   *** getUri(...);
   *** addToShortcutIntent(...);
   *** checkResource(...);
   *** createFromBundle(...);
   *** createFromIcon(...);
   *** createFromIcon(...);
   *** createFromIconOrNullIfZeroResId(...);
   *** createWithAdaptiveBitmap(...);
   *** createWithAdaptiveBitmapContentUri(...);
   *** createWithAdaptiveBitmapContentUri(...);
   *** createWithBitmap(...);
   *** createWithContentUri(...);
   *** createWithContentUri(...);
   *** createWithData(...);
   *** createWithResource(...);
   *** createWithResource(...);
   *** getUriInputStream(...);
   *** loadDrawable(...);
   *** setTint(...);
   *** setTintList(...);
   *** setTintMode(...);
   *** toBundle(...);
   *** toIcon(...);
   *** toIcon(...);
}

-keep class androidx.core.graphics.drawable.TintAwareDrawable
-keepclassmembers class androidx.core.graphics.drawable.TintAwareDrawable {
}

-keep class androidx.core.content.ContextCompat
-keepclassmembers class androidx.core.content.ContextCompat {
   <init>(...);
   *** checkSelfPermission(...);
   *** createDeviceProtectedStorageContext(...);
   *** getAttributionTag(...);
   *** getCodeCacheDir(...);
   *** getColor(...);
   *** getColorStateList(...);
   *** getDataDir(...);
   *** getDrawable(...);
   *** getExternalCacheDirs(...);
   *** getExternalFilesDirs(...);
   *** getMainExecutor(...);
   *** getNoBackupFilesDir(...);
   *** getObbDirs(...);
   *** getSystemService(...);
   *** getSystemServiceName(...);
   *** isDeviceProtectedStorage(...);
   *** registerReceiver(...);
   *** registerReceiver(...);
   *** startActivities(...);
   *** startActivities(...);
   *** startActivity(...);
   *** startForegroundService(...);
}

-keep class androidx.core.content.LocusIdCompat
-keepclassmembers class androidx.core.content.LocusIdCompat {
   <init>(...);
   *** getId(...);
   *** toLocusId(...);
   *** toLocusIdCompat(...);
}

-keep class androidx.core.content.res.ResourcesCompat$FontCallback
-keepclassmembers class androidx.core.content.res.ResourcesCompat$FontCallback {
   <init>(...);
   *** callbackFailAsync(...);
   *** callbackSuccessAsync(...);
   *** getHandler(...);
   *** onFontRetrievalFailed(...);
   *** onFontRetrieved(...);
}

-keep class androidx.core.content.res.ResourcesCompat$FontCallback
-keepclassmembers class androidx.core.content.res.ResourcesCompat$FontCallback {
   *** onFontRetrievalFailed(...);
   *** onFontRetrieved(...);
}

-keep class androidx.core.content.res.ResourcesCompat
-keepclassmembers class androidx.core.content.res.ResourcesCompat {
   *** clearCachesForTheme(...);
   *** getCachedFont(...);
   *** getColor(...);
   *** getColorStateList(...);
   *** getDrawable(...);
   *** getDrawableForDensity(...);
   *** getFloat(...);
   *** getFont(...);
   *** getFont(...);
   *** getFont(...);
}

-keep class androidx.core.content.pm.PackageInfoCompat
-keepclassmembers class androidx.core.content.pm.PackageInfoCompat {
   *** getLongVersionCode(...);
   *** getSignatures(...);
   *** hasSignatures(...);
}

-keep class androidx.core.content.pm.ShortcutInfoCompat
-keepclassmembers class androidx.core.content.pm.ShortcutInfoCompat {
   *** getActivity(...);
   *** getCategories(...);
   *** getDisabledMessage(...);
   *** getDisabledReason(...);
   *** getExcludedFromSurfaces(...);
   *** getExtras(...);
   *** hasKeyFieldsOnly(...);
   *** getIcon(...);
   *** getId(...);
   *** getIntent(...);
   *** isCached(...);
   *** isDeclaredInManifest(...);
   *** isDynamic(...);
   *** isEnabled(...);
   *** isImmutable(...);
   *** isPinned(...);
   *** getLastChangedTimestamp(...);
   *** getLocusId(...);
   *** getLongLabel(...);
   *** getPackage(...);
   *** getRank(...);
   *** getShortLabel(...);
   *** getTransientExtras(...);
   *** getUserHandle(...);
   *** getIntents(...);
   *** isExcludedFromSurfaces(...);
   *** toShortcutInfo(...);
}

-keep class androidx.core.app.ActivityCompat$OnRequestPermissionsResultCallback
-keepclassmembers class androidx.core.app.ActivityCompat$OnRequestPermissionsResultCallback {
}

-keep class androidx.core.app.ActivityCompat$PermissionCompatDelegate
-keepclassmembers class androidx.core.app.ActivityCompat$PermissionCompatDelegate {
}

-keep class androidx.core.app.ActivityCompat$RequestPermissionsRequestCodeValidator
-keepclassmembers class androidx.core.app.ActivityCompat$RequestPermissionsRequestCodeValidator {
}

-keep class androidx.core.app.ActivityCompat
-keepclassmembers class androidx.core.app.ActivityCompat {
   <init>(...);
   *** getPermissionCompatDelegate(...);
   *** setPermissionCompatDelegate(...);
   *** finishAffinity(...);
   *** finishAfterTransition(...);
   *** getReferrer(...);
   *** invalidateOptionsMenu(...);
   *** isLaunchedFromBubble(...);
   *** postponeEnterTransition(...);
   *** recreate(...);
   *** requestDragAndDropPermissions(...);
   *** requestPermissions(...);
   *** requireViewById(...);
   *** setEnterSharedElementCallback(...);
   *** setExitSharedElementCallback(...);
   *** setLocusContext(...);
   *** shouldShowRequestPermissionRationale(...);
   *** startActivityForResult(...);
   *** startIntentSenderForResult(...);
   *** startPostponedEnterTransition(...);
}

-keep class androidx.core.app.ActivityOptionsCompat
-keepclassmembers class androidx.core.app.ActivityOptionsCompat {
   <init>(...);
   *** getLaunchBounds(...);
   *** makeBasic(...);
   *** makeClipRevealAnimation(...);
   *** makeCustomAnimation(...);
   *** makeScaleUpAnimation(...);
   *** makeSceneTransitionAnimation(...);
   *** makeSceneTransitionAnimation(...);
   *** makeTaskLaunchBehind(...);
   *** makeThumbnailScaleUpAnimation(...);
   *** requestUsageTimeReport(...);
   *** setLaunchBounds(...);
   *** toBundle(...);
   *** update(...);
}

-keep class androidx.core.app.ComponentActivity$ExtraData
-keepclassmembers class androidx.core.app.ComponentActivity$ExtraData {
   <init>(...);
}

-keep class androidx.core.app.ComponentActivity
-keepclassmembers class androidx.core.app.ComponentActivity {
   <init>(...);
   *** getLifecycle(...);
   *** getExtraData(...);
   *** putExtraData(...);
   *** shouldDumpInternalState(...);
   *** superDispatchKeyEvent(...);
}

-keep class androidx.core.app.NotificationBuilderWithBuilderAccessor
-keepclassmembers class androidx.core.app.NotificationBuilderWithBuilderAccessor {
}

-keep class androidx.core.app.NotificationCompat$Action
-keepclassmembers class androidx.core.app.NotificationCompat$Action {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getActionIntent(...);
   *** getAllowGeneratedReplies(...);
   *** getExtras(...);
   *** getIcon(...);
   *** getIconCompat(...);
   *** isAuthenticationRequired(...);
   *** isContextual(...);
   *** getSemanticAction(...);
   *** getShowsUserInterface(...);
   *** getTitle(...);
   *** getDataOnlyRemoteInputs(...);
   *** getRemoteInputs(...);
}

-keep class androidx.core.app.NotificationCompat$BigPictureStyle
-keepclassmembers class androidx.core.app.NotificationCompat$BigPictureStyle {
   <init>(...);
   <init>(...);
   *** bigLargeIcon(...);
   *** bigPicture(...);
   *** bigPicture(...);
   *** getPictureIcon(...);
   *** setBigContentTitle(...);
   *** setContentDescription(...);
   *** setSummaryText(...);
   *** showBigPictureWhenCollapsed(...);
}

-keep class androidx.core.app.NotificationCompat$BigTextStyle
-keepclassmembers class androidx.core.app.NotificationCompat$BigTextStyle {
   <init>(...);
   <init>(...);
   *** bigText(...);
   *** setBigContentTitle(...);
   *** setSummaryText(...);
}

-keep class androidx.core.app.NotificationCompat$BubbleMetadata
-keepclassmembers class androidx.core.app.NotificationCompat$BubbleMetadata {
   *** getAutoExpandBubble(...);
   *** getDeleteIntent(...);
   *** getDesiredHeight(...);
   *** getDesiredHeightResId(...);
   *** getIcon(...);
   *** getIntent(...);
   *** isNotificationSuppressed(...);
   *** getShortcutId(...);
   *** fromPlatform(...);
   *** setFlags(...);
   *** toPlatform(...);
}

-keep class androidx.core.app.NotificationCompat$Builder
-keepclassmembers class androidx.core.app.NotificationCompat$Builder {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getBigContentView(...);
   *** getBubbleMetadata(...);
   *** getColor(...);
   *** getContentView(...);
   *** getExtras(...);
   *** getForegroundServiceBehavior(...);
   *** getHeadsUpContentView(...);
   *** getNotification(...);
   *** getPriority(...);
   *** getWhenIfShowing(...);
   *** addAction(...);
   *** addAction(...);
   *** addExtras(...);
   *** addInvisibleAction(...);
   *** addInvisibleAction(...);
   *** addPerson(...);
   *** addPerson(...);
   *** build(...);
   *** clearActions(...);
   *** clearInvisibleActions(...);
   *** clearPeople(...);
   *** createBigContentView(...);
   *** createContentView(...);
   *** createHeadsUpContentView(...);
   *** extend(...);
   *** limitCharSequenceLength(...);
   *** setAllowSystemGeneratedContextualActions(...);
   *** setAutoCancel(...);
   *** setBadgeIconType(...);
   *** setBubbleMetadata(...);
   *** setCategory(...);
   *** setChannelId(...);
   *** setChronometerCountDown(...);
   *** setColor(...);
   *** setColorized(...);
   *** setContent(...);
   *** setContentInfo(...);
   *** setContentIntent(...);
   *** setContentText(...);
   *** setContentTitle(...);
   *** setCustomBigContentView(...);
   *** setCustomContentView(...);
   *** setCustomHeadsUpContentView(...);
   *** setDefaults(...);
   *** setDeleteIntent(...);
   *** setExtras(...);
   *** setForegroundServiceBehavior(...);
   *** setFullScreenIntent(...);
   *** setGroup(...);
   *** setGroupAlertBehavior(...);
   *** setGroupSummary(...);
   *** setLargeIcon(...);
   *** setLights(...);
   *** setLocalOnly(...);
   *** setLocusId(...);
   *** setNotificationSilent(...);
   *** setNumber(...);
   *** setOngoing(...);
   *** setOnlyAlertOnce(...);
   *** setPriority(...);
   *** setProgress(...);
   *** setPublicVersion(...);
   *** setRemoteInputHistory(...);
   *** setSettingsText(...);
   *** setShortcutId(...);
   *** setShortcutInfo(...);
   *** setShowWhen(...);
   *** setSilent(...);
   *** setSmallIcon(...);
   *** setSmallIcon(...);
   *** setSmallIcon(...);
   *** setSortKey(...);
   *** setSound(...);
   *** setSound(...);
   *** setStyle(...);
   *** setSubText(...);
   *** setTicker(...);
   *** setTicker(...);
   *** setTimeoutAfter(...);
   *** setUsesChronometer(...);
   *** setVibrate(...);
   *** setVisibility(...);
   *** setWhen(...);
}

-keep class androidx.core.app.NotificationCompat$Extender
-keepclassmembers class androidx.core.app.NotificationCompat$Extender {
}

-keep class androidx.core.app.NotificationCompat$Style
-keepclassmembers class androidx.core.app.NotificationCompat$Style {
   <init>(...);
   *** getClassName(...);
   *** addCompatExtras(...);
   *** apply(...);
   *** applyStandardTemplate(...);
   *** build(...);
   *** buildIntoRemoteViews(...);
   *** clearCompatExtraKeys(...);
   *** createColoredBitmap(...);
   *** displayCustomViewInline(...);
   *** extractStyleFromNotification(...);
   *** makeBigContentView(...);
   *** makeContentView(...);
   *** makeHeadsUpContentView(...);
   *** restoreFromCompatExtras(...);
   *** setBuilder(...);
}

-keep class androidx.core.app.NotificationCompat$Style
-keepclassmembers class androidx.core.app.NotificationCompat$Style {
}

-keep class androidx.core.app.NotificationCompat
-keepclassmembers class androidx.core.app.NotificationCompat {
   <init>(...);
   *** getAction(...);
   *** getActionCount(...);
   *** getAllowSystemGeneratedContextualActions(...);
   *** getAutoCancel(...);
   *** getBadgeIconType(...);
   *** getBubbleMetadata(...);
   *** getCategory(...);
   *** getChannelId(...);
   *** getColor(...);
   *** getContentInfo(...);
   *** getContentText(...);
   *** getContentTitle(...);
   *** getExtras(...);
   *** getGroup(...);
   *** getGroupAlertBehavior(...);
   *** getInvisibleActions(...);
   *** getLocalOnly(...);
   *** getLocusId(...);
   *** getOngoing(...);
   *** getOnlyAlertOnce(...);
   *** getPeople(...);
   *** getPublicVersion(...);
   *** getSettingsText(...);
   *** getShortcutId(...);
   *** getShowWhen(...);
   *** getSortKey(...);
   *** getSubText(...);
   *** getTimeoutAfter(...);
   *** getUsesChronometer(...);
   *** getVisibility(...);
   *** isGroupSummary(...);
}

-keep class androidx.core.app.Person$Builder
-keepclassmembers class androidx.core.app.Person$Builder {
   <init>(...);
   *** build(...);
   *** setBot(...);
   *** setIcon(...);
   *** setImportant(...);
   *** setKey(...);
   *** setName(...);
   *** setUri(...);
}

-keep class androidx.core.app.Person
-keepclassmembers class androidx.core.app.Person {
   *** getIcon(...);
   *** isBot(...);
   *** isImportant(...);
   *** getKey(...);
   *** getName(...);
   *** getUri(...);
   *** fromAndroidPerson(...);
   *** fromBundle(...);
   *** fromPersistableBundle(...);
   *** resolveToLegacyUri(...);
   *** toAndroidPerson(...);
   *** toBuilder(...);
   *** toBundle(...);
   *** toPersistableBundle(...);
}

-keep class androidx.core.app.RemoteInput
-keepclassmembers class androidx.core.app.RemoteInput {
   *** getAllowFreeFormInput(...);
   *** getAllowedDataTypes(...);
   *** getEditChoicesBeforeSending(...);
   *** getExtras(...);
   *** isDataOnly(...);
   *** getLabel(...);
   *** getResultKey(...);
   *** addDataResultToIntent(...);
   *** addResultsToIntent(...);
   *** getChoices(...);
   *** getDataResultsFromIntent(...);
   *** getResultsFromIntent(...);
   *** getResultsSource(...);
   *** setResultsSource(...);
}

-keep class androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener
-keepclassmembers class androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener {
}

-keep class androidx.core.app.SharedElementCallback
-keepclassmembers class androidx.core.app.SharedElementCallback {
   <init>(...);
   *** onCaptureSharedElementSnapshot(...);
   *** onCreateSnapshotView(...);
   *** onMapSharedElements(...);
   *** onRejectSharedElements(...);
   *** onSharedElementEnd(...);
   *** onSharedElementStart(...);
   *** onSharedElementsArrived(...);
}

-keep class androidx.core.app.SharedElementCallback
-keepclassmembers class androidx.core.app.SharedElementCallback {
}

-keep class androidx.core.app.TaskStackBuilder$SupportParentable
-keepclassmembers class androidx.core.app.TaskStackBuilder$SupportParentable {
}

-keep class androidx.core.app.TaskStackBuilder
-keepclassmembers class androidx.core.app.TaskStackBuilder {
   *** getIntentCount(...);
   *** addNextIntent(...);
   *** addNextIntentWithParentStack(...);
   *** addParentStack(...);
   *** addParentStack(...);
   *** addParentStack(...);
   *** create(...);
   *** editIntentAt(...);
   *** from(...);
   *** getIntent(...);
   *** getIntents(...);
   *** getPendingIntent(...);
   *** getPendingIntent(...);
   *** iterator(...);
   *** startActivities(...);
   *** startActivities(...);
}

-keep class androidx.core.widget.TintableCompoundButton
-keepclassmembers class androidx.core.widget.TintableCompoundButton {
}

-keep class androidx.core.widget.TintableImageSourceView
-keepclassmembers class androidx.core.widget.TintableImageSourceView {
}

-keep class androidx.core.view.ActionProvider$SubUiVisibilityListener
-keepclassmembers class androidx.core.view.ActionProvider$SubUiVisibilityListener {
}

-keep class mono.androidx.core.view.ActionProvider_SubUiVisibilityListenerImplementor
-keepclassmembers class mono.androidx.core.view.ActionProvider_SubUiVisibilityListenerImplementor {
}

-keep class androidx.core.view.ActionProvider$VisibilityListener
-keepclassmembers class androidx.core.view.ActionProvider$VisibilityListener {
}

-keep class mono.androidx.core.view.ActionProvider_VisibilityListenerImplementor
-keepclassmembers class mono.androidx.core.view.ActionProvider_VisibilityListenerImplementor {
}

-keep class androidx.core.view.ActionProvider
-keepclassmembers class androidx.core.view.ActionProvider {
   <init>(...);
   *** getContext(...);
   *** hasSubMenu(...);
   *** isVisible(...);
   *** onCreateActionView(...);
   *** onCreateActionView(...);
   *** onPerformDefaultAction(...);
   *** onPrepareSubMenu(...);
   *** overridesItemVisibility(...);
   *** refreshVisibility(...);
   *** reset(...);
   *** setSubUiVisibilityListener(...);
   *** setVisibilityListener(...);
   *** subUiVisibilityChanged(...);
}

-keep class androidx.core.view.ActionProvider
-keepclassmembers class androidx.core.view.ActionProvider {
   *** onCreateActionView(...);
}

-keep class androidx.core.view.DisplayCutoutCompat
-keepclassmembers class androidx.core.view.DisplayCutoutCompat {
   <init>(...);
   <init>(...);
   *** getBoundingRects(...);
   *** getSafeInsetBottom(...);
   *** getSafeInsetLeft(...);
   *** getSafeInsetRight(...);
   *** getSafeInsetTop(...);
   *** getWaterfallInsets(...);
}

-keep class androidx.core.view.DragAndDropPermissionsCompat
-keepclassmembers class androidx.core.view.DragAndDropPermissionsCompat {
   *** release(...);
   *** request(...);
}

-keep class androidx.core.view.MenuHost
-keepclassmembers class androidx.core.view.MenuHost {
}

-keep class androidx.core.view.MenuProvider
-keepclassmembers class androidx.core.view.MenuProvider {
}

-keep class androidx.core.view.TintableBackgroundView
-keepclassmembers class androidx.core.view.TintableBackgroundView {
}

-keep class androidx.core.view.ViewPropertyAnimatorListener
-keepclassmembers class androidx.core.view.ViewPropertyAnimatorListener {
}

-keep class androidx.core.view.ViewPropertyAnimatorUpdateListener
-keepclassmembers class androidx.core.view.ViewPropertyAnimatorUpdateListener {
}

-keep class androidx.core.view.KeyEventDispatcher$Component
-keepclassmembers class androidx.core.view.KeyEventDispatcher$Component {
}

-keep class androidx.core.view.KeyEventDispatcher
-keepclassmembers class androidx.core.view.KeyEventDispatcher {
   *** dispatchBeforeHierarchy(...);
   *** dispatchKeyEvent(...);
}

-keep class androidx.core.view.ViewPropertyAnimatorCompat
-keepclassmembers class androidx.core.view.ViewPropertyAnimatorCompat {
   *** getDuration(...);
   *** getInterpolator(...);
   *** getStartDelay(...);
   *** alpha(...);
   *** alphaBy(...);
   *** cancel(...);
   *** rotation(...);
   *** rotationBy(...);
   *** rotationX(...);
   *** rotationXBy(...);
   *** rotationY(...);
   *** rotationYBy(...);
   *** scaleX(...);
   *** scaleXBy(...);
   *** scaleY(...);
   *** scaleYBy(...);
   *** setDuration(...);
   *** setInterpolator(...);
   *** setListener(...);
   *** setStartDelay(...);
   *** setUpdateListener(...);
   *** start(...);
   *** translationX(...);
   *** translationXBy(...);
   *** translationY(...);
   *** translationYBy(...);
   *** translationZ(...);
   *** translationZBy(...);
   *** withEndAction(...);
   *** withLayer(...);
   *** withStartAction(...);
   *** x(...);
   *** xBy(...);
   *** y(...);
   *** yBy(...);
   *** z(...);
   *** zBy(...);
}

-keep class androidx.core.view.WindowInsetsCompat
-keepclassmembers class androidx.core.view.WindowInsetsCompat {
   <init>(...);
   *** getDisplayCutout(...);
   *** hasInsets(...);
   *** hasStableInsets(...);
   *** hasSystemWindowInsets(...);
   *** isConsumed(...);
   *** isRound(...);
   *** getMandatorySystemGestureInsets(...);
   *** getStableInsetBottom(...);
   *** getStableInsetLeft(...);
   *** getStableInsetRight(...);
   *** getStableInsetTop(...);
   *** getStableInsets(...);
   *** getSystemGestureInsets(...);
   *** getSystemWindowInsetBottom(...);
   *** getSystemWindowInsetLeft(...);
   *** getSystemWindowInsetRight(...);
   *** getSystemWindowInsetTop(...);
   *** getSystemWindowInsets(...);
   *** getTappableElementInsets(...);
   *** consumeDisplayCutout(...);
   *** consumeStableInsets(...);
   *** consumeSystemWindowInsets(...);
   *** getInsets(...);
   *** getInsetsIgnoringVisibility(...);
   *** inset(...);
   *** inset(...);
   *** isVisible(...);
   *** replaceSystemWindowInsets(...);
   *** replaceSystemWindowInsets(...);
   *** toWindowInsets(...);
   *** toWindowInsetsCompat(...);
   *** toWindowInsetsCompat(...);
}

# ACW for Xamarin.AndroidX.CursorAdapter
-keep class androidx.cursoradapter.widget.CursorAdapter
-keepclassmembers class androidx.cursoradapter.widget.CursorAdapter {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCount(...);
   *** getCursor(...);
   *** getFilter(...);
   *** getFilterQueryProvider(...);
   *** setFilterQueryProvider(...);
   *** bindView(...);
   *** changeCursor(...);
   *** convertToString(...);
   *** getItem(...);
   *** getItemId(...);
   *** getView(...);
   *** init(...);
   *** newDropDownView(...);
   *** newView(...);
   *** onContentChanged(...);
   *** runQueryOnBackgroundThread(...);
   *** swapCursor(...);
}

-keep class androidx.cursoradapter.widget.CursorAdapter
-keepclassmembers class androidx.cursoradapter.widget.CursorAdapter {
   *** bindView(...);
   *** newView(...);
}

-keep class androidx.cursoradapter.widget.CursorFilter
-keepclassmembers class androidx.cursoradapter.widget.CursorFilter {
   *** performFiltering(...);
   *** publishResults(...);
}

-keep class androidx.cursoradapter.widget.ResourceCursorAdapter
-keepclassmembers class androidx.cursoradapter.widget.ResourceCursorAdapter {
   <init>(...);
   <init>(...);
   <init>(...);
   *** newView(...);
   *** setDropDownViewResource(...);
   *** setViewResource(...);
}

-keep class androidx.cursoradapter.widget.ResourceCursorAdapter
-keepclassmembers class androidx.cursoradapter.widget.ResourceCursorAdapter {
   *** bindView(...);
}

-keep class androidx.cursoradapter.widget.SimpleCursorAdapter$CursorToStringConverter
-keepclassmembers class androidx.cursoradapter.widget.SimpleCursorAdapter$CursorToStringConverter {
}

-keep class androidx.cursoradapter.widget.SimpleCursorAdapter$ViewBinder
-keepclassmembers class androidx.cursoradapter.widget.SimpleCursorAdapter$ViewBinder {
}

-keep class androidx.cursoradapter.widget.SimpleCursorAdapter
-keepclassmembers class androidx.cursoradapter.widget.SimpleCursorAdapter {
   <init>(...);
   <init>(...);
   *** getCursorToStringConverter(...);
   *** setCursorToStringConverter(...);
   *** getStringConversionColumn(...);
   *** setStringConversionColumn(...);
   *** getViewBinder(...);
   *** setViewBinder(...);
   *** bindView(...);
   *** changeCursorAndColumns(...);
   *** setViewImage(...);
   *** setViewText(...);
}

# ACW for Xamarin.AndroidX.CustomView
-keep class androidx.customview.widget.Openable
-keepclassmembers class androidx.customview.widget.Openable {
}

# ACW for Xamarin.AndroidX.DocumentFile
-keep class androidx.documentfile.provider.DocumentFile
-keepclassmembers class androidx.documentfile.provider.DocumentFile {
   *** isDirectory(...);
   *** isFile(...);
   *** isVirtual(...);
   *** getName(...);
   *** getParentFile(...);
   *** getType(...);
   *** getUri(...);
   *** canRead(...);
   *** canWrite(...);
   *** createDirectory(...);
   *** createFile(...);
   *** delete(...);
   *** exists(...);
   *** findFile(...);
   *** fromFile(...);
   *** fromSingleUri(...);
   *** fromTreeUri(...);
   *** isDocumentUri(...);
   *** lastModified(...);
   *** length(...);
   *** listFiles(...);
   *** renameTo(...);
}

-keep class androidx.documentfile.provider.DocumentFile
-keepclassmembers class androidx.documentfile.provider.DocumentFile {
   *** isDirectory(...);
   *** isFile(...);
   *** isVirtual(...);
   *** getName(...);
   *** getType(...);
   *** getUri(...);
   *** canRead(...);
   *** canWrite(...);
   *** createDirectory(...);
   *** createFile(...);
   *** delete(...);
   *** exists(...);
   *** lastModified(...);
   *** length(...);
   *** listFiles(...);
   *** renameTo(...);
}

# ACW for Xamarin.AndroidX.DrawerLayout
-keep class androidx.drawerlayout.widget.DrawerLayout$DrawerListener
-keepclassmembers class androidx.drawerlayout.widget.DrawerLayout$DrawerListener {
}

-keep class mono.androidx.drawerlayout.widget.DrawerLayout_DrawerListenerImplementor
-keepclassmembers class mono.androidx.drawerlayout.widget.DrawerLayout_DrawerListenerImplementor {
}

-keep class androidx.drawerlayout.widget.DrawerLayout
-keepclassmembers class androidx.drawerlayout.widget.DrawerLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDrawerElevation(...);
   *** setDrawerElevation(...);
   *** isOpen(...);
   *** getStatusBarBackgroundDrawable(...);
   *** addDrawerListener(...);
   *** addFocusables(...);
   *** close(...);
   *** closeDrawer(...);
   *** closeDrawer(...);
   *** closeDrawer(...);
   *** closeDrawer(...);
   *** closeDrawers(...);
   *** getDrawerLockMode(...);
   *** getDrawerLockMode(...);
   *** getDrawerTitle(...);
   *** isDrawerOpen(...);
   *** isDrawerOpen(...);
   *** isDrawerVisible(...);
   *** isDrawerVisible(...);
   *** onDraw(...);
   *** onLayout(...);
   *** open(...);
   *** openDrawer(...);
   *** openDrawer(...);
   *** openDrawer(...);
   *** openDrawer(...);
   *** removeDrawerListener(...);
   *** setChildInsets(...);
   *** setDrawerListener(...);
   *** setDrawerLockMode(...);
   *** setDrawerLockMode(...);
   *** setDrawerLockMode(...);
   *** setDrawerShadow(...);
   *** setDrawerShadow(...);
   *** setDrawerTitle(...);
   *** setScrimColor(...);
   *** setStatusBarBackground(...);
   *** setStatusBarBackground(...);
   *** setStatusBarBackgroundColor(...);
}

# ACW for Xamarin.AndroidX.Fragment
-keep class androidx.fragment.app.FragmentActivity
-keepclassmembers class androidx.fragment.app.FragmentActivity {
   <init>(...);
   <init>(...);
   *** getSupportFragmentManager(...);
   *** getSupportLoaderManager(...);
   *** onAttachFragment(...);
   *** onPrepareOptionsPanel(...);
   *** onResumeFragments(...);
   *** setEnterSharedElementCallback(...);
   *** setExitSharedElementCallback(...);
   *** startActivityFromFragment(...);
   *** startActivityFromFragment(...);
   *** startIntentSenderFromFragment(...);
   *** supportFinishAfterTransition(...);
   *** supportInvalidateOptionsMenu(...);
   *** supportPostponeEnterTransition(...);
   *** supportStartPostponedEnterTransition(...);
   *** validateRequestPermissionsRequestCode(...);
}

-keep class androidx.fragment.app.Fragment$SavedState
-keepclassmembers class androidx.fragment.app.Fragment$SavedState {
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class androidx.fragment.app.Fragment
-keepclassmembers class androidx.fragment.app.Fragment {
   <init>(...);
   <init>(...);
   *** getActivity(...);
   *** getAllowEnterTransitionOverlap(...);
   *** setAllowEnterTransitionOverlap(...);
   *** getAllowReturnTransitionOverlap(...);
   *** setAllowReturnTransitionOverlap(...);
   *** getArguments(...);
   *** setArguments(...);
   *** getChildFragmentManager(...);
   *** getContext(...);
   *** getDefaultViewModelProviderFactory(...);
   *** getEnterTransition(...);
   *** setEnterTransition(...);
   *** getExitTransition(...);
   *** setExitTransition(...);
   *** getFragmentManager(...);
   *** hasOptionsMenu(...);
   *** setHasOptionsMenu(...);
   *** getHost(...);
   *** getId(...);
   *** isAdded(...);
   *** isDetached(...);
   *** isHidden(...);
   *** isInLayout(...);
   *** isMenuVisible(...);
   *** isRemoving(...);
   *** isResumed(...);
   *** isStateSaved(...);
   *** isVisible(...);
   *** getLayoutInflater(...);
   *** getLifecycle(...);
   *** getLoaderManager(...);
   *** getParentFragment(...);
   *** getParentFragmentManager(...);
   *** getReenterTransition(...);
   *** setReenterTransition(...);
   *** getResources(...);
   *** getRetainInstance(...);
   *** setRetainInstance(...);
   *** getReturnTransition(...);
   *** setReturnTransition(...);
   *** getSavedStateRegistry(...);
   *** getSharedElementEnterTransition(...);
   *** setSharedElementEnterTransition(...);
   *** getSharedElementReturnTransition(...);
   *** setSharedElementReturnTransition(...);
   *** getTag(...);
   *** getTargetFragment(...);
   *** getTargetRequestCode(...);
   *** getUserVisibleHint(...);
   *** setUserVisibleHint(...);
   *** getView(...);
   *** getViewLifecycleOwner(...);
   *** getViewLifecycleOwnerLiveData(...);
   *** getViewModelStore(...);
   *** dump(...);
   *** equals(...);
   *** getLayoutInflater(...);
   *** getString(...);
   *** getString(...);
   *** getText(...);
   *** hashCode(...);
   *** instantiate(...);
   *** instantiate(...);
   *** onActivityCreated(...);
   *** onActivityResult(...);
   *** onAttach(...);
   *** onAttach(...);
   *** onAttachFragment(...);
   *** onConfigurationChanged(...);
   *** onContextItemSelected(...);
   *** onCreate(...);
   *** onCreateAnimation(...);
   *** onCreateAnimator(...);
   *** onCreateContextMenu(...);
   *** onCreateOptionsMenu(...);
   *** onCreateView(...);
   *** onDestroy(...);
   *** onDestroyOptionsMenu(...);
   *** onDestroyView(...);
   *** onDetach(...);
   *** onGetLayoutInflater(...);
   *** onHiddenChanged(...);
   *** onInflate(...);
   *** onInflate(...);
   *** onLowMemory(...);
   *** onMultiWindowModeChanged(...);
   *** onOptionsItemSelected(...);
   *** onOptionsMenuClosed(...);
   *** onPause(...);
   *** onPictureInPictureModeChanged(...);
   *** onPrepareOptionsMenu(...);
   *** onPrimaryNavigationFragmentChanged(...);
   *** onRequestPermissionsResult(...);
   *** onResume(...);
   *** onSaveInstanceState(...);
   *** onStart(...);
   *** onStop(...);
   *** onViewCreated(...);
   *** onViewStateRestored(...);
   *** postponeEnterTransition(...);
   *** postponeEnterTransition(...);
   *** registerForActivityResult(...);
   *** registerForActivityResult(...);
   *** registerForContextMenu(...);
   *** requestPermissions(...);
   *** requireActivity(...);
   *** requireArguments(...);
   *** requireContext(...);
   *** requireFragmentManager(...);
   *** requireHost(...);
   *** requireParentFragment(...);
   *** requireView(...);
   *** setEnterSharedElementCallback(...);
   *** setExitSharedElementCallback(...);
   *** setInitialSavedState(...);
   *** setMenuVisibility(...);
   *** setTargetFragment(...);
   *** shouldShowRequestPermissionRationale(...);
   *** startActivity(...);
   *** startActivity(...);
   *** startActivityForResult(...);
   *** startActivityForResult(...);
   *** startIntentSenderForResult(...);
   *** startPostponedEnterTransition(...);
   *** unregisterForContextMenu(...);
}

-keep class androidx.fragment.app.FragmentContainer
-keepclassmembers class androidx.fragment.app.FragmentContainer {
   <init>(...);
   *** instantiate(...);
   *** onFindViewById(...);
   *** onHasView(...);
}

-keep class androidx.fragment.app.FragmentContainer
-keepclassmembers class androidx.fragment.app.FragmentContainer {
   *** onFindViewById(...);
   *** onHasView(...);
}

-keep class androidx.fragment.app.FragmentFactory
-keepclassmembers class androidx.fragment.app.FragmentFactory {
   <init>(...);
   *** instantiate(...);
   *** loadFragmentClass(...);
}

-keep class androidx.fragment.app.FragmentHostCallback
-keepclassmembers class androidx.fragment.app.FragmentHostCallback {
   <init>(...);
   *** getHandler(...);
   *** onDump(...);
   *** onFindViewById(...);
   *** onGetHost(...);
   *** onGetLayoutInflater(...);
   *** onGetWindowAnimations(...);
   *** onHasView(...);
   *** onHasWindowAnimations(...);
   *** onRequestPermissionsFromFragment(...);
   *** onShouldSaveFragmentState(...);
   *** onShouldShowRequestPermissionRationale(...);
   *** onStartActivityFromFragment(...);
   *** onStartActivityFromFragment(...);
   *** onStartIntentSenderFromFragment(...);
   *** onSupportInvalidateOptionsMenu(...);
}

-keep class androidx.fragment.app.FragmentHostCallback
-keepclassmembers class androidx.fragment.app.FragmentHostCallback {
   *** onGetHost(...);
}

-keep class androidx.fragment.app.FragmentManager$BackStackEntry
-keepclassmembers class androidx.fragment.app.FragmentManager$BackStackEntry {
}

-keep class androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks
-keepclassmembers class androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks {
   <init>(...);
   *** onFragmentActivityCreated(...);
   *** onFragmentAttached(...);
   *** onFragmentCreated(...);
   *** onFragmentDestroyed(...);
   *** onFragmentDetached(...);
   *** onFragmentPaused(...);
   *** onFragmentPreAttached(...);
   *** onFragmentPreCreated(...);
   *** onFragmentResumed(...);
   *** onFragmentSaveInstanceState(...);
   *** onFragmentStarted(...);
   *** onFragmentStopped(...);
   *** onFragmentViewCreated(...);
   *** onFragmentViewDestroyed(...);
}

-keep class androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks
-keepclassmembers class androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks {
}

-keep class androidx.fragment.app.FragmentManager$OnBackStackChangedListener
-keepclassmembers class androidx.fragment.app.FragmentManager$OnBackStackChangedListener {
}

-keep class mono.androidx.fragment.app.FragmentManager_OnBackStackChangedListenerImplementor
-keepclassmembers class mono.androidx.fragment.app.FragmentManager_OnBackStackChangedListenerImplementor {
}

-keep class androidx.fragment.app.FragmentManager
-keepclassmembers class androidx.fragment.app.FragmentManager {
   <init>(...);
   *** getBackStackEntryCount(...);
   *** getFragmentFactory(...);
   *** setFragmentFactory(...);
   *** getFragments(...);
   *** getHost(...);
   *** isDestroyed(...);
   *** isStateSaved(...);
   *** getPrimaryNavigationFragment(...);
   *** getStrictModePolicy(...);
   *** setStrictModePolicy(...);
   *** addFragmentOnAttachListener(...);
   *** addOnBackStackChangedListener(...);
   *** beginTransaction(...);
   *** clearBackStack(...);
   *** clearFragmentResult(...);
   *** clearFragmentResultListener(...);
   *** dump(...);
   *** enableDebugLogging(...);
   *** executePendingTransactions(...);
   *** findFragment(...);
   *** findFragmentById(...);
   *** findFragmentByTag(...);
   *** getBackStackEntryAt(...);
   *** getFragment(...);
   *** isLoggingEnabled(...);
   *** openTransaction(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** popBackStackImmediate(...);
   *** popBackStackImmediate(...);
   *** popBackStackImmediate(...);
   *** putFragment(...);
   *** registerFragmentLifecycleCallbacks(...);
   *** removeFragmentOnAttachListener(...);
   *** removeOnBackStackChangedListener(...);
   *** restoreBackStack(...);
   *** saveBackStack(...);
   *** saveFragmentInstanceState(...);
   *** setFragmentResult(...);
   *** setFragmentResultListener(...);
   *** unregisterFragmentLifecycleCallbacks(...);
}

-keep class androidx.fragment.app.FragmentManager
-keepclassmembers class androidx.fragment.app.FragmentManager {
}

-keep class androidx.fragment.app.FragmentTransaction
-keepclassmembers class androidx.fragment.app.FragmentTransaction {
   <init>(...);
   *** isAddToBackStackAllowed(...);
   *** isEmpty(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** addSharedElement(...);
   *** addToBackStack(...);
   *** attach(...);
   *** commit(...);
   *** commitAllowingStateLoss(...);
   *** commitNow(...);
   *** commitNowAllowingStateLoss(...);
   *** detach(...);
   *** disallowAddToBackStack(...);
   *** hide(...);
   *** remove(...);
   *** replace(...);
   *** replace(...);
   *** replace(...);
   *** replace(...);
   *** runOnCommit(...);
   *** setAllowOptimization(...);
   *** setBreadCrumbShortTitle(...);
   *** setBreadCrumbShortTitle(...);
   *** setBreadCrumbTitle(...);
   *** setBreadCrumbTitle(...);
   *** setCustomAnimations(...);
   *** setCustomAnimations(...);
   *** setMaxLifecycle(...);
   *** setPrimaryNavigationFragment(...);
   *** setReorderingAllowed(...);
   *** setTransition(...);
   *** setTransitionStyle(...);
   *** show(...);
}

-keep class androidx.fragment.app.FragmentTransaction
-keepclassmembers class androidx.fragment.app.FragmentTransaction {
   *** commit(...);
   *** commitAllowingStateLoss(...);
   *** commitNow(...);
   *** commitNowAllowingStateLoss(...);
}

-keep class androidx.fragment.app.FragmentOnAttachListener
-keepclassmembers class androidx.fragment.app.FragmentOnAttachListener {
}

-keep class mono.androidx.fragment.app.FragmentOnAttachListenerImplementor
-keepclassmembers class mono.androidx.fragment.app.FragmentOnAttachListenerImplementor {
}

-keep class androidx.fragment.app.FragmentResultListener
-keepclassmembers class androidx.fragment.app.FragmentResultListener {
}

-keep class androidx.fragment.app.FragmentResultOwner
-keepclassmembers class androidx.fragment.app.FragmentResultOwner {
}

-keep class androidx.fragment.app.strictmode.FragmentStrictMode$Policy
-keepclassmembers class androidx.fragment.app.strictmode.FragmentStrictMode$Policy {
}

-keep class androidx.fragment.app.strictmode.FragmentStrictMode
-keepclassmembers class androidx.fragment.app.strictmode.FragmentStrictMode {
   *** getDefaultPolicy(...);
   *** setDefaultPolicy(...);
   *** onFragmentReuse(...);
   *** onFragmentTagUsage(...);
   *** onGetRetainInstanceUsage(...);
   *** onGetTargetFragmentRequestCodeUsage(...);
   *** onGetTargetFragmentUsage(...);
   *** onPolicyViolation(...);
   *** onSetRetainInstanceUsage(...);
   *** onSetTargetFragmentUsage(...);
   *** onSetUserVisibleHint(...);
   *** onWrongFragmentContainer(...);
}

-keep class androidx.fragment.app.strictmode.Violation
-keepclassmembers class androidx.fragment.app.strictmode.Violation {
   *** getFragment(...);
}

-keep class androidx.fragment.app.strictmode.Violation
-keepclassmembers class androidx.fragment.app.strictmode.Violation {
}

# ACW for Xamarin.AndroidX.Interpolator
-keep class androidx.interpolator.view.animation.FastOutLinearInInterpolator
-keepclassmembers class androidx.interpolator.view.animation.FastOutLinearInInterpolator {
   <init>(...);
   *** getInterpolation(...);
}

-keep class androidx.interpolator.view.animation.FastOutSlowInInterpolator
-keepclassmembers class androidx.interpolator.view.animation.FastOutSlowInInterpolator {
   <init>(...);
   *** getInterpolation(...);
}

-keep class androidx.interpolator.view.animation.LinearOutSlowInInterpolator
-keepclassmembers class androidx.interpolator.view.animation.LinearOutSlowInInterpolator {
   <init>(...);
   *** getInterpolation(...);
}

-keep class androidx.interpolator.view.animation.LookupTableInterpolator
-keepclassmembers class androidx.interpolator.view.animation.LookupTableInterpolator {
   <init>(...);
   *** getInterpolation(...);
}

-keep class androidx.interpolator.view.animation.LookupTableInterpolator
-keepclassmembers class androidx.interpolator.view.animation.LookupTableInterpolator {
}

# ACW for Xamarin.AndroidX.Legacy.Support.Core.UI
-keep class androidx.legacy.widget.Space
-keepclassmembers class androidx.legacy.widget.Space {
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class androidx.legacy.app.ActionBarDrawerToggle$Delegate
-keepclassmembers class androidx.legacy.app.ActionBarDrawerToggle$Delegate {
}

-keep class androidx.legacy.app.ActionBarDrawerToggle$DelegateProvider
-keepclassmembers class androidx.legacy.app.ActionBarDrawerToggle$DelegateProvider {
}

-keep class androidx.legacy.app.ActionBarDrawerToggle
-keepclassmembers class androidx.legacy.app.ActionBarDrawerToggle {
   <init>(...);
   <init>(...);
   *** isDrawerIndicatorEnabled(...);
   *** setDrawerIndicatorEnabled(...);
   *** onConfigurationChanged(...);
   *** onDrawerClosed(...);
   *** onDrawerOpened(...);
   *** onDrawerSlide(...);
   *** onDrawerStateChanged(...);
   *** onOptionsItemSelected(...);
   *** setHomeAsUpIndicator(...);
   *** setHomeAsUpIndicator(...);
   *** syncState(...);
}

# ACW for Xamarin.AndroidX.Legacy.Support.Core.Utils
-keep class androidx.legacy.content.WakefulBroadcastReceiver
-keepclassmembers class androidx.legacy.content.WakefulBroadcastReceiver {
   <init>(...);
   *** completeWakefulIntent(...);
   *** startWakefulService(...);
}

-keep class androidx.legacy.content.WakefulBroadcastReceiver
-keepclassmembers class androidx.legacy.content.WakefulBroadcastReceiver {
   *** onReceive(...);
}

# ACW for Xamarin.AndroidX.Lifecycle.Common
-keep class androidx.lifecycle.Lifecycle$State
-keepclassmembers class androidx.lifecycle.Lifecycle$State {
   *** isAtLeast(...);
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.lifecycle.Lifecycle
-keepclassmembers class androidx.lifecycle.Lifecycle {
   <init>(...);
   *** getCurrentState(...);
   *** addObserver(...);
   *** removeObserver(...);
}

-keep class androidx.lifecycle.LifecycleObserver
-keepclassmembers class androidx.lifecycle.LifecycleObserver {
}

-keep class androidx.lifecycle.LifecycleOwner
-keepclassmembers class androidx.lifecycle.LifecycleOwner {
}

-keep class androidx.lifecycle.Lifecycle
-keepclassmembers class androidx.lifecycle.Lifecycle {
   *** getCurrentState(...);
   *** addObserver(...);
   *** removeObserver(...);
}

# ACW for Xamarin.AndroidX.Lifecycle.LiveData.Core
-keep class androidx.lifecycle.Observer
-keepclassmembers class androidx.lifecycle.Observer {
}

-keep class androidx.lifecycle.LiveData
-keepclassmembers class androidx.lifecycle.LiveData {
   <init>(...);
   <init>(...);
   *** hasActiveObservers(...);
   *** hasObservers(...);
   *** getValue(...);
   *** observe(...);
   *** observeForever(...);
   *** onActive(...);
   *** onInactive(...);
   *** postValue(...);
   *** removeObserver(...);
   *** removeObservers(...);
   *** setValue(...);
}

-keep class androidx.lifecycle.LiveData
-keepclassmembers class androidx.lifecycle.LiveData {
}

# ACW for Xamarin.AndroidX.Lifecycle.Runtime
-keep class androidx.lifecycle.LifecycleRegistry
-keepclassmembers class androidx.lifecycle.LifecycleRegistry {
   <init>(...);
   *** getCurrentState(...);
   *** getObserverCount(...);
   *** addObserver(...);
   *** createUnsafe(...);
   *** handleLifecycleEvent(...);
   *** markState(...);
   *** removeObserver(...);
   *** setCurrentState(...);
}

-keep class androidx.lifecycle.ReportFragment
-keepclassmembers class androidx.lifecycle.ReportFragment {
   <init>(...);
   *** injectIfNeededIn(...);
}

-keep class androidx.lifecycle.ViewTreeLifecycleOwner
-keepclassmembers class androidx.lifecycle.ViewTreeLifecycleOwner {
   *** get(...);
   *** set(...);
}

# ACW for Xamarin.AndroidX.Lifecycle.ViewModel
-keep class androidx.lifecycle.HasDefaultViewModelProviderFactory
-keepclassmembers class androidx.lifecycle.HasDefaultViewModelProviderFactory {
}

-keep class androidx.lifecycle.ViewModelStoreOwner
-keepclassmembers class androidx.lifecycle.ViewModelStoreOwner {
}

-keep class androidx.lifecycle.ViewModelProvider$Factory
-keepclassmembers class androidx.lifecycle.ViewModelProvider$Factory {
}

-keep class androidx.lifecycle.ViewModelProvider
-keepclassmembers class androidx.lifecycle.ViewModelProvider {
   <init>(...);
   <init>(...);
   <init>(...);
   *** get(...);
   *** get(...);
}

-keep class androidx.lifecycle.ViewModelStore
-keepclassmembers class androidx.lifecycle.ViewModelStore {
   <init>(...);
   *** clear(...);
}

# ACW for Xamarin.AndroidX.Lifecycle.ViewModelSavedState
-keep class androidx.lifecycle.AbstractSavedStateViewModelFactory
-keepclassmembers class androidx.lifecycle.AbstractSavedStateViewModelFactory {
   <init>(...);
   *** create(...);
   *** create(...);
   *** create(...);
}

-keep class androidx.lifecycle.AbstractSavedStateViewModelFactory
-keepclassmembers class androidx.lifecycle.AbstractSavedStateViewModelFactory {
   *** create(...);
}

-keep class androidx.lifecycle.SavedStateHandle
-keepclassmembers class androidx.lifecycle.SavedStateHandle {
   <init>(...);
   <init>(...);
   *** clearSavedStateProvider(...);
   *** contains(...);
   *** get(...);
   *** getLiveData(...);
   *** getLiveData(...);
   *** keys(...);
   *** remove(...);
   *** set(...);
   *** setSavedStateProvider(...);
}

-keep class androidx.lifecycle.SavedStateViewModelFactory
-keepclassmembers class androidx.lifecycle.SavedStateViewModelFactory {
   <init>(...);
   <init>(...);
   *** create(...);
   *** create(...);
}

# ACW for Xamarin.AndroidX.Loader
-keep class androidx.loader.content.Loader$OnLoadCanceledListener
-keepclassmembers class androidx.loader.content.Loader$OnLoadCanceledListener {
}

-keep class androidx.loader.content.Loader$OnLoadCompleteListener
-keepclassmembers class androidx.loader.content.Loader$OnLoadCompleteListener {
}

-keep class androidx.loader.content.Loader
-keepclassmembers class androidx.loader.content.Loader {
   <init>(...);
   *** getContext(...);
   *** getId(...);
   *** isAbandoned(...);
   *** isReset(...);
   *** isStarted(...);
   *** abandon(...);
   *** cancelLoad(...);
   *** commitContentChanged(...);
   *** dataToString(...);
   *** deliverCancellation(...);
   *** deliverResult(...);
   *** dump(...);
   *** forceLoad(...);
   *** onAbandon(...);
   *** onCancelLoad(...);
   *** onContentChanged(...);
   *** onForceLoad(...);
   *** onReset(...);
   *** onStartLoading(...);
   *** onStopLoading(...);
   *** registerListener(...);
   *** registerOnLoadCanceledListener(...);
   *** reset(...);
   *** rollbackContentChanged(...);
   *** startLoading(...);
   *** stopLoading(...);
   *** takeContentChanged(...);
   *** unregisterListener(...);
   *** unregisterOnLoadCanceledListener(...);
}

-keep class androidx.loader.app.LoaderManager$LoaderCallbacks
-keepclassmembers class androidx.loader.app.LoaderManager$LoaderCallbacks {
}

-keep class androidx.loader.app.LoaderManager
-keepclassmembers class androidx.loader.app.LoaderManager {
   <init>(...);
   *** hasRunningLoaders(...);
   *** destroyLoader(...);
   *** dump(...);
   *** enableDebugLogging(...);
   *** getInstance(...);
   *** getLoader(...);
   *** initLoader(...);
   *** markForRedelivery(...);
   *** restartLoader(...);
}

-keep class androidx.loader.app.LoaderManager
-keepclassmembers class androidx.loader.app.LoaderManager {
   *** destroyLoader(...);
   *** dump(...);
   *** getLoader(...);
   *** initLoader(...);
   *** markForRedelivery(...);
   *** restartLoader(...);
}

# ACW for Xamarin.AndroidX.LocalBroadcastManager
-keep class androidx.localbroadcastmanager.content.LocalBroadcastManager
-keepclassmembers class androidx.localbroadcastmanager.content.LocalBroadcastManager {
   *** getInstance(...);
   *** registerReceiver(...);
   *** sendBroadcast(...);
   *** sendBroadcastSync(...);
   *** unregisterReceiver(...);
}

# ACW for Xamarin.AndroidX.MultiDex
# ACW for Xamarin.AndroidX.Print
-keep class androidx.print.PrintHelper$OnPrintFinishCallback
-keepclassmembers class androidx.print.PrintHelper$OnPrintFinishCallback {
}

-keep class androidx.print.PrintHelper
-keepclassmembers class androidx.print.PrintHelper {
   <init>(...);
   *** getColorMode(...);
   *** setColorMode(...);
   *** getOrientation(...);
   *** setOrientation(...);
   *** getScaleMode(...);
   *** setScaleMode(...);
   *** printBitmap(...);
   *** printBitmap(...);
   *** printBitmap(...);
   *** printBitmap(...);
   *** systemSupportsPrint(...);
}

# ACW for Xamarin.AndroidX.RecyclerView
-keep class androidx.recyclerview.widget.AdapterListUpdateCallback
-keepclassmembers class androidx.recyclerview.widget.AdapterListUpdateCallback {
   <init>(...);
   *** onChanged(...);
   *** onInserted(...);
   *** onMoved(...);
   *** onRemoved(...);
}

-keep class androidx.recyclerview.widget.AsyncDifferConfig$Builder
-keepclassmembers class androidx.recyclerview.widget.AsyncDifferConfig$Builder {
   <init>(...);
   *** build(...);
   *** setBackgroundThreadExecutor(...);
   *** setMainThreadExecutor(...);
}

-keep class androidx.recyclerview.widget.AsyncDifferConfig
-keepclassmembers class androidx.recyclerview.widget.AsyncDifferConfig {
   *** getBackgroundThreadExecutor(...);
   *** getDiffCallback(...);
   *** getMainThreadExecutor(...);
}

-keep class androidx.recyclerview.widget.AsyncListDiffer$ListListener
-keepclassmembers class androidx.recyclerview.widget.AsyncListDiffer$ListListener {
}

-keep class mono.androidx.recyclerview.widget.AsyncListDiffer_ListListenerImplementor
-keepclassmembers class mono.androidx.recyclerview.widget.AsyncListDiffer_ListListenerImplementor {
}

-keep class androidx.recyclerview.widget.AsyncListDiffer
-keepclassmembers class androidx.recyclerview.widget.AsyncListDiffer {
   <init>(...);
   <init>(...);
   *** getCurrentList(...);
   *** addListListener(...);
   *** removeListListener(...);
   *** submitList(...);
   *** submitList(...);
}

-keep class androidx.recyclerview.widget.AsyncListUtil$DataCallback
-keepclassmembers class androidx.recyclerview.widget.AsyncListUtil$DataCallback {
   <init>(...);
   *** getMaxCachedTiles(...);
   *** fillData(...);
   *** recycleData(...);
   *** refreshData(...);
}

-keep class androidx.recyclerview.widget.AsyncListUtil$DataCallback
-keepclassmembers class androidx.recyclerview.widget.AsyncListUtil$DataCallback {
   *** fillData(...);
   *** refreshData(...);
}

-keep class androidx.recyclerview.widget.AsyncListUtil$ViewCallback
-keepclassmembers class androidx.recyclerview.widget.AsyncListUtil$ViewCallback {
   <init>(...);
   *** extendRangeInto(...);
   *** getItemRangeInto(...);
   *** onDataRefresh(...);
   *** onItemLoaded(...);
}

-keep class androidx.recyclerview.widget.AsyncListUtil$ViewCallback
-keepclassmembers class androidx.recyclerview.widget.AsyncListUtil$ViewCallback {
   *** getItemRangeInto(...);
   *** onDataRefresh(...);
   *** onItemLoaded(...);
}

-keep class androidx.recyclerview.widget.AsyncListUtil
-keepclassmembers class androidx.recyclerview.widget.AsyncListUtil {
   <init>(...);
   *** getItemCount(...);
   *** getItem(...);
   *** onRangeChanged(...);
   *** refresh(...);
}

-keep class androidx.recyclerview.widget.BatchingListUpdateCallback
-keepclassmembers class androidx.recyclerview.widget.BatchingListUpdateCallback {
   <init>(...);
   *** dispatchLastEvent(...);
   *** onChanged(...);
   *** onInserted(...);
   *** onMoved(...);
   *** onRemoved(...);
}

-keep class androidx.recyclerview.widget.DefaultItemAnimator
-keepclassmembers class androidx.recyclerview.widget.DefaultItemAnimator {
   <init>(...);
   *** isRunning(...);
   *** animateAdd(...);
   *** animateChange(...);
   *** animateMove(...);
   *** animateRemove(...);
   *** endAnimation(...);
   *** endAnimations(...);
   *** runPendingAnimations(...);
}

-keep class androidx.recyclerview.widget.DiffUtil$Callback
-keepclassmembers class androidx.recyclerview.widget.DiffUtil$Callback {
   <init>(...);
   *** getNewListSize(...);
   *** getOldListSize(...);
   *** areContentsTheSame(...);
   *** areItemsTheSame(...);
   *** getChangePayload(...);
}

-keep class androidx.recyclerview.widget.DiffUtil$Callback
-keepclassmembers class androidx.recyclerview.widget.DiffUtil$Callback {
   *** getNewListSize(...);
   *** getOldListSize(...);
   *** areContentsTheSame(...);
   *** areItemsTheSame(...);
}

-keep class androidx.recyclerview.widget.DiffUtil$DiffResult
-keepclassmembers class androidx.recyclerview.widget.DiffUtil$DiffResult {
   *** convertNewPositionToOld(...);
   *** convertOldPositionToNew(...);
   *** dispatchUpdatesTo(...);
   *** dispatchUpdatesTo(...);
}

-keep class androidx.recyclerview.widget.DiffUtil$ItemCallback
-keepclassmembers class androidx.recyclerview.widget.DiffUtil$ItemCallback {
   <init>(...);
   *** areContentsTheSame(...);
   *** areItemsTheSame(...);
   *** getChangePayload(...);
}

-keep class androidx.recyclerview.widget.DiffUtil$ItemCallback
-keepclassmembers class androidx.recyclerview.widget.DiffUtil$ItemCallback {
   *** areContentsTheSame(...);
   *** areItemsTheSame(...);
}

-keep class androidx.recyclerview.widget.DiffUtil
-keepclassmembers class androidx.recyclerview.widget.DiffUtil {
   *** calculateDiff(...);
   *** calculateDiff(...);
}

-keep class androidx.recyclerview.widget.DividerItemDecoration
-keepclassmembers class androidx.recyclerview.widget.DividerItemDecoration {
   <init>(...);
   *** getDrawable(...);
   *** setDrawable(...);
   *** setOrientation(...);
}

-keep class androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup
-keepclassmembers class androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup {
   <init>(...);
   *** getSpanSize(...);
}

-keep class androidx.recyclerview.widget.GridLayoutManager$LayoutParams
-keepclassmembers class androidx.recyclerview.widget.GridLayoutManager$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSpanIndex(...);
   *** getSpanSize(...);
}

-keep class androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup
-keepclassmembers class androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup {
   <init>(...);
   *** isSpanGroupIndexCacheEnabled(...);
   *** setSpanGroupIndexCacheEnabled(...);
   *** isSpanIndexCacheEnabled(...);
   *** setSpanIndexCacheEnabled(...);
   *** getSpanGroupIndex(...);
   *** getSpanIndex(...);
   *** getSpanSize(...);
   *** invalidateSpanGroupIndexCache(...);
   *** invalidateSpanIndexCache(...);
}

-keep class androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup
-keepclassmembers class androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup {
   *** getSpanSize(...);
}

-keep class androidx.recyclerview.widget.GridLayoutManager
-keepclassmembers class androidx.recyclerview.widget.GridLayoutManager {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSpanCount(...);
   *** setSpanCount(...);
   *** isUsingSpansToEstimateScrollbarDimensions(...);
   *** setUsingSpansToEstimateScrollbarDimensions(...);
   *** getSpanSizeLookup(...);
   *** setSpanSizeLookup(...);
}

-keep class androidx.recyclerview.widget.ItemTouchUIUtil
-keepclassmembers class androidx.recyclerview.widget.ItemTouchUIUtil {
}

-keep class androidx.recyclerview.widget.ListUpdateCallback
-keepclassmembers class androidx.recyclerview.widget.ListUpdateCallback {
}

-keep class androidx.recyclerview.widget.ItemTouchHelper$Callback
-keepclassmembers class androidx.recyclerview.widget.ItemTouchHelper$Callback {
   <init>(...);
   *** getBoundingBoxMargin(...);
   *** getDefaultUIUtil(...);
   *** isItemViewSwipeEnabled(...);
   *** isLongPressDragEnabled(...);
   *** canDropOver(...);
   *** chooseDropTarget(...);
   *** clearView(...);
   *** convertToAbsoluteDirection(...);
   *** convertToRelativeDirection(...);
   *** getAnimationDuration(...);
   *** getMoveThreshold(...);
   *** getMovementFlags(...);
   *** getSwipeEscapeVelocity(...);
   *** getSwipeThreshold(...);
   *** getSwipeVelocityThreshold(...);
   *** interpolateOutOfBoundsScroll(...);
   *** makeFlag(...);
   *** makeMovementFlags(...);
   *** onChildDraw(...);
   *** onChildDrawOver(...);
   *** onMove(...);
   *** onMoved(...);
   *** onSelectedChanged(...);
   *** onSwiped(...);
}

-keep class androidx.recyclerview.widget.ItemTouchHelper$Callback
-keepclassmembers class androidx.recyclerview.widget.ItemTouchHelper$Callback {
   *** getMovementFlags(...);
   *** onMove(...);
   *** onSwiped(...);
}

-keep class androidx.recyclerview.widget.ItemTouchHelper$SimpleCallback
-keepclassmembers class androidx.recyclerview.widget.ItemTouchHelper$SimpleCallback {
   <init>(...);
   *** getDragDirs(...);
   *** getMovementFlags(...);
   *** getSwipeDirs(...);
   *** setDefaultDragDirs(...);
   *** setDefaultSwipeDirs(...);
}

-keep class androidx.recyclerview.widget.ItemTouchHelper$SimpleCallback
-keepclassmembers class androidx.recyclerview.widget.ItemTouchHelper$SimpleCallback {
   *** onMove(...);
   *** onSwiped(...);
}

-keep class androidx.recyclerview.widget.ItemTouchHelper$ViewDropHandler
-keepclassmembers class androidx.recyclerview.widget.ItemTouchHelper$ViewDropHandler {
}

-keep class androidx.recyclerview.widget.ItemTouchHelper
-keepclassmembers class androidx.recyclerview.widget.ItemTouchHelper {
   <init>(...);
   *** attachToRecyclerView(...);
   *** onChildViewAttachedToWindow(...);
   *** onChildViewDetachedFromWindow(...);
   *** startDrag(...);
   *** startSwipe(...);
}

-keep class androidx.recyclerview.widget.LayoutState
-keepclassmembers class androidx.recyclerview.widget.LayoutState {
}

-keep class androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult
-keepclassmembers class androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult {
   <init>(...);
}

-keep class androidx.recyclerview.widget.LinearLayoutManager$SavedState
-keepclassmembers class androidx.recyclerview.widget.LinearLayoutManager$SavedState {
   <init>(...);
   <init>(...);
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class androidx.recyclerview.widget.LinearLayoutManager
-keepclassmembers class androidx.recyclerview.widget.LinearLayoutManager {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getInitialPrefetchItemCount(...);
   *** setInitialPrefetchItemCount(...);
   *** isLayoutRTL(...);
   *** getOrientation(...);
   *** setOrientation(...);
   *** getRecycleChildrenOnDetach(...);
   *** setRecycleChildrenOnDetach(...);
   *** getReverseLayout(...);
   *** setReverseLayout(...);
   *** isSmoothScrollbarEnabled(...);
   *** setSmoothScrollbarEnabled(...);
   *** getStackFromEnd(...);
   *** setStackFromEnd(...);
   *** calculateExtraLayoutSpace(...);
   *** computeScrollVectorForPosition(...);
   *** findFirstCompletelyVisibleItemPosition(...);
   *** findFirstVisibleItemPosition(...);
   *** findLastCompletelyVisibleItemPosition(...);
   *** findLastVisibleItemPosition(...);
   *** generateDefaultLayoutParams(...);
   *** getExtraLayoutSpace(...);
   *** prepareForDrop(...);
   *** scrollToPositionWithOffset(...);
}

-keep class androidx.recyclerview.widget.LinearSmoothScroller
-keepclassmembers class androidx.recyclerview.widget.LinearSmoothScroller {
   <init>(...);
   *** getHorizontalSnapPreference(...);
   *** getVerticalSnapPreference(...);
   *** calculateDtToFit(...);
   *** calculateDxToMakeVisible(...);
   *** calculateDyToMakeVisible(...);
   *** calculateSpeedPerPixel(...);
   *** calculateTimeForDeceleration(...);
   *** calculateTimeForScrolling(...);
   *** onSeekTargetStep(...);
   *** onStart(...);
   *** onStop(...);
   *** onTargetFound(...);
   *** updateActionForInterimTarget(...);
}

-keep class androidx.recyclerview.widget.LinearSnapHelper
-keepclassmembers class androidx.recyclerview.widget.LinearSnapHelper {
   <init>(...);
   *** calculateDistanceToFinalSnap(...);
   *** findSnapView(...);
   *** findTargetSnapPosition(...);
}

-keep class androidx.recyclerview.widget.ListAdapter
-keepclassmembers class androidx.recyclerview.widget.ListAdapter {
   <init>(...);
   <init>(...);
   *** getCurrentList(...);
   *** getItemCount(...);
   *** getItem(...);
   *** onCurrentListChanged(...);
   *** submitList(...);
   *** submitList(...);
}

-keep class androidx.recyclerview.widget.ListAdapter
-keepclassmembers class androidx.recyclerview.widget.ListAdapter {
   *** onBindViewHolder(...);
   *** onCreateViewHolder(...);
}

-keep class androidx.recyclerview.widget.OrientationHelper
-keepclassmembers class androidx.recyclerview.widget.OrientationHelper {
   *** getEnd(...);
   *** getEndAfterPadding(...);
   *** getEndPadding(...);
   *** getLayoutManager(...);
   *** getMode(...);
   *** getModeInOther(...);
   *** getStartAfterPadding(...);
   *** getTotalSpace(...);
   *** getTotalSpaceChange(...);
   *** createHorizontalHelper(...);
   *** createOrientationHelper(...);
   *** createVerticalHelper(...);
   *** getDecoratedEnd(...);
   *** getDecoratedMeasurement(...);
   *** getDecoratedMeasurementInOther(...);
   *** getDecoratedStart(...);
   *** getTransformedEndWithDecoration(...);
   *** getTransformedStartWithDecoration(...);
   *** offsetChild(...);
   *** offsetChildren(...);
   *** onLayoutComplete(...);
}

-keep class androidx.recyclerview.widget.OrientationHelper
-keepclassmembers class androidx.recyclerview.widget.OrientationHelper {
   *** getEnd(...);
   *** getEndAfterPadding(...);
   *** getEndPadding(...);
   *** getMode(...);
   *** getModeInOther(...);
   *** getStartAfterPadding(...);
   *** getTotalSpace(...);
   *** getDecoratedEnd(...);
   *** getDecoratedMeasurement(...);
   *** getDecoratedMeasurementInOther(...);
   *** getDecoratedStart(...);
   *** getTransformedEndWithDecoration(...);
   *** getTransformedStartWithDecoration(...);
   *** offsetChild(...);
   *** offsetChildren(...);
}

-keep class androidx.recyclerview.widget.PagerSnapHelper
-keepclassmembers class androidx.recyclerview.widget.PagerSnapHelper {
   <init>(...);
   *** calculateDistanceToFinalSnap(...);
   *** findSnapView(...);
   *** findTargetSnapPosition(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$Adapter
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$Adapter {
   <init>(...);
   *** hasObservers(...);
   *** hasStableIds(...);
   *** setHasStableIds(...);
   *** getItemCount(...);
   *** bindViewHolder(...);
   *** createViewHolder(...);
   *** getItemId(...);
   *** getItemViewType(...);
   *** notifyDataSetChanged(...);
   *** notifyItemChanged(...);
   *** notifyItemChanged(...);
   *** notifyItemInserted(...);
   *** notifyItemMoved(...);
   *** notifyItemRangeChanged(...);
   *** notifyItemRangeChanged(...);
   *** notifyItemRangeInserted(...);
   *** notifyItemRangeRemoved(...);
   *** notifyItemRemoved(...);
   *** onAttachedToRecyclerView(...);
   *** onBindViewHolder(...);
   *** onBindViewHolder(...);
   *** onCreateViewHolder(...);
   *** onDetachedFromRecyclerView(...);
   *** onFailedToRecycleView(...);
   *** onViewAttachedToWindow(...);
   *** onViewDetachedFromWindow(...);
   *** onViewRecycled(...);
   *** registerAdapterDataObserver(...);
   *** unregisterAdapterDataObserver(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$Adapter
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$Adapter {
   *** getItemCount(...);
   *** onBindViewHolder(...);
   *** onCreateViewHolder(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$AdapterDataObserver
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$AdapterDataObserver {
   <init>(...);
   *** onChanged(...);
   *** onItemRangeChanged(...);
   *** onItemRangeChanged(...);
   *** onItemRangeInserted(...);
   *** onItemRangeMoved(...);
   *** onItemRangeRemoved(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$AdapterDataObserver
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$AdapterDataObserver {
}

-keep class androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback {
}

-keep class androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory$EdgeDirection
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory$EdgeDirection {
}

-keep class androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory {
   <init>(...);
   *** createEdgeEffect(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ItemAnimator$AdapterChanges
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ItemAnimator$AdapterChanges {
}

-keep class androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener {
}

-keep class mono.androidx.recyclerview.widget.RecyclerView_ItemAnimator_ItemAnimatorFinishedListenerImplementor
-keepclassmembers class mono.androidx.recyclerview.widget.RecyclerView_ItemAnimator_ItemAnimatorFinishedListenerImplementor {
}

-keep class androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo {
   <init>(...);
   *** setFrom(...);
   *** setFrom(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ItemAnimator
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ItemAnimator {
   <init>(...);
   *** getAddDuration(...);
   *** setAddDuration(...);
   *** getChangeDuration(...);
   *** setChangeDuration(...);
   *** isRunning(...);
   *** getMoveDuration(...);
   *** setMoveDuration(...);
   *** getRemoveDuration(...);
   *** setRemoveDuration(...);
   *** animateAppearance(...);
   *** animateChange(...);
   *** animateDisappearance(...);
   *** animatePersistence(...);
   *** canReuseUpdatedViewHolder(...);
   *** canReuseUpdatedViewHolder(...);
   *** dispatchAnimationFinished(...);
   *** dispatchAnimationStarted(...);
   *** dispatchAnimationsFinished(...);
   *** endAnimation(...);
   *** endAnimations(...);
   *** isRunning(...);
   *** obtainHolderInfo(...);
   *** onAnimationFinished(...);
   *** onAnimationStarted(...);
   *** recordPostLayoutInformation(...);
   *** recordPreLayoutInformation(...);
   *** runPendingAnimations(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ItemAnimator
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ItemAnimator {
   *** isRunning(...);
   *** animateAppearance(...);
   *** animateChange(...);
   *** animateDisappearance(...);
   *** animatePersistence(...);
   *** endAnimation(...);
   *** endAnimations(...);
   *** runPendingAnimations(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ItemDecoration
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ItemDecoration {
   <init>(...);
   *** getItemOffsets(...);
   *** getItemOffsets(...);
   *** onDraw(...);
   *** onDraw(...);
   *** onDrawOver(...);
   *** onDrawOver(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ItemDecoration
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ItemDecoration {
}

-keep class androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry {
}

-keep class androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties {
   <init>(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$LayoutManager
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$LayoutManager {
   <init>(...);
   *** isAutoMeasureEnabled(...);
   *** setAutoMeasureEnabled(...);
   *** getBaseline(...);
   *** getChildCount(...);
   *** getClipToPadding(...);
   *** getFocusedChild(...);
   *** hasFocus(...);
   *** getHeight(...);
   *** getHeightMode(...);
   *** isAttachedToWindow(...);
   *** isFocused(...);
   *** isSmoothScrolling(...);
   *** getItemCount(...);
   *** isItemPrefetchEnabled(...);
   *** setItemPrefetchEnabled(...);
   *** getLayoutDirection(...);
   *** isMeasurementCacheEnabled(...);
   *** setMeasurementCacheEnabled(...);
   *** getMinimumHeight(...);
   *** getMinimumWidth(...);
   *** getPaddingBottom(...);
   *** getPaddingEnd(...);
   *** getPaddingLeft(...);
   *** getPaddingRight(...);
   *** getPaddingStart(...);
   *** getPaddingTop(...);
   *** getWidth(...);
   *** getWidthMode(...);
   *** addDisappearingView(...);
   *** addDisappearingView(...);
   *** addView(...);
   *** addView(...);
   *** assertInLayoutOrScroll(...);
   *** assertNotInLayoutOrScroll(...);
   *** attachView(...);
   *** attachView(...);
   *** attachView(...);
   *** calculateItemDecorationsForChild(...);
   *** canScrollHorizontally(...);
   *** canScrollVertically(...);
   *** checkLayoutParams(...);
   *** chooseSize(...);
   *** collectAdjacentPrefetchPositions(...);
   *** collectInitialPrefetchPositions(...);
   *** computeHorizontalScrollExtent(...);
   *** computeHorizontalScrollOffset(...);
   *** computeHorizontalScrollRange(...);
   *** computeVerticalScrollExtent(...);
   *** computeVerticalScrollOffset(...);
   *** computeVerticalScrollRange(...);
   *** detachAndScrapAttachedViews(...);
   *** detachAndScrapView(...);
   *** detachAndScrapViewAt(...);
   *** detachView(...);
   *** detachViewAt(...);
   *** endAnimation(...);
   *** findContainingItemView(...);
   *** findViewByPosition(...);
   *** generateDefaultLayoutParams(...);
   *** generateLayoutParams(...);
   *** generateLayoutParams(...);
   *** getBottomDecorationHeight(...);
   *** getChildAt(...);
   *** getChildMeasureSpec(...);
   *** getChildMeasureSpec(...);
   *** getColumnCountForAccessibility(...);
   *** getDecoratedBottom(...);
   *** getDecoratedBoundsWithMargins(...);
   *** getDecoratedLeft(...);
   *** getDecoratedMeasuredHeight(...);
   *** getDecoratedMeasuredWidth(...);
   *** getDecoratedRight(...);
   *** getDecoratedTop(...);
   *** getItemViewType(...);
   *** getLeftDecorationWidth(...);
   *** getPosition(...);
   *** getProperties(...);
   *** getRightDecorationWidth(...);
   *** getRowCountForAccessibility(...);
   *** getSelectionModeForAccessibility(...);
   *** getTopDecorationHeight(...);
   *** getTransformedBoundingBox(...);
   *** ignoreView(...);
   *** isLayoutHierarchical(...);
   *** isViewPartiallyVisible(...);
   *** layoutDecorated(...);
   *** layoutDecoratedWithMargins(...);
   *** measureChild(...);
   *** measureChildWithMargins(...);
   *** moveView(...);
   *** offsetChildrenHorizontal(...);
   *** offsetChildrenVertical(...);
   *** onAdapterChanged(...);
   *** onAddFocusables(...);
   *** onAttachedToWindow(...);
   *** onDetachedFromWindow(...);
   *** onDetachedFromWindow(...);
   *** onFocusSearchFailed(...);
   *** onInitializeAccessibilityEvent(...);
   *** onInitializeAccessibilityEvent(...);
   *** onInitializeAccessibilityNodeInfo(...);
   *** onInitializeAccessibilityNodeInfoForItem(...);
   *** onInterceptFocusSearch(...);
   *** onItemsAdded(...);
   *** onItemsChanged(...);
   *** onItemsMoved(...);
   *** onItemsRemoved(...);
   *** onItemsUpdated(...);
   *** onItemsUpdated(...);
   *** onLayoutChildren(...);
   *** onLayoutCompleted(...);
   *** onMeasure(...);
   *** onRequestChildFocus(...);
   *** onRequestChildFocus(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** onScrollStateChanged(...);
   *** performAccessibilityAction(...);
   *** performAccessibilityActionForItem(...);
   *** postOnAnimation(...);
   *** removeAllViews(...);
   *** removeAndRecycleAllViews(...);
   *** removeAndRecycleView(...);
   *** removeAndRecycleViewAt(...);
   *** removeCallbacks(...);
   *** removeDetachedView(...);
   *** removeView(...);
   *** removeViewAt(...);
   *** requestChildRectangleOnScreen(...);
   *** requestChildRectangleOnScreen(...);
   *** requestLayout(...);
   *** requestSimpleAnimationsInNextLayout(...);
   *** scrollHorizontallyBy(...);
   *** scrollToPosition(...);
   *** scrollVerticallyBy(...);
   *** setMeasuredDimension(...);
   *** setMeasuredDimension(...);
   *** smoothScrollToPosition(...);
   *** startSmoothScroll(...);
   *** stopIgnoringView(...);
   *** supportsPredictiveItemAnimations(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$LayoutManager
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$LayoutManager {
   *** generateDefaultLayoutParams(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$LayoutParams
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** isItemChanged(...);
   *** isItemRemoved(...);
   *** isViewInvalid(...);
   *** getViewAdapterPosition(...);
   *** getViewLayoutPosition(...);
   *** getViewPosition(...);
   *** viewNeedsUpdate(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener {
}

-keep class mono.androidx.recyclerview.widget.RecyclerView_OnChildAttachStateChangeListenerImplementor
-keepclassmembers class mono.androidx.recyclerview.widget.RecyclerView_OnChildAttachStateChangeListenerImplementor {
}

-keep class androidx.recyclerview.widget.RecyclerView$OnFlingListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$OnFlingListener {
   <init>(...);
   *** onFling(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$OnFlingListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$OnFlingListener {
   *** onFling(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$OnItemTouchListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$OnItemTouchListener {
}

-keep class mono.androidx.recyclerview.widget.RecyclerView_OnItemTouchListenerImplementor
-keepclassmembers class mono.androidx.recyclerview.widget.RecyclerView_OnItemTouchListenerImplementor {
}

-keep class androidx.recyclerview.widget.RecyclerView$OnScrollListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$OnScrollListener {
   <init>(...);
   *** onScrollStateChanged(...);
   *** onScrolled(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$OnScrollListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$OnScrollListener {
}

-keep class androidx.recyclerview.widget.RecyclerView$Orientation
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$Orientation {
}

-keep class androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData {
}

-keep class androidx.recyclerview.widget.RecyclerView$RecycledViewPool
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$RecycledViewPool {
   <init>(...);
   *** clear(...);
   *** getRecycledView(...);
   *** getRecycledViewCount(...);
   *** putRecycledView(...);
   *** setMaxRecycledViews(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$Recycler
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$Recycler {
   <init>(...);
   *** getScrapList(...);
   *** bindViewToPosition(...);
   *** clear(...);
   *** convertPreLayoutPositionToPostLayout(...);
   *** getViewForPosition(...);
   *** recycleView(...);
   *** setViewCacheSize(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$RecyclerListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$RecyclerListener {
}

-keep class mono.androidx.recyclerview.widget.RecyclerView_RecyclerListenerImplementor
-keepclassmembers class mono.androidx.recyclerview.widget.RecyclerView_RecyclerListenerImplementor {
}

-keep class androidx.recyclerview.widget.RecyclerView$SavedState
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$SavedState {
}

-keep class androidx.recyclerview.widget.RecyclerView$SimpleOnItemTouchListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$SimpleOnItemTouchListener {
   <init>(...);
   *** onInterceptTouchEvent(...);
   *** onRequestDisallowInterceptTouchEvent(...);
   *** onTouchEvent(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDuration(...);
   *** setDuration(...);
   *** getDx(...);
   *** setDx(...);
   *** getDy(...);
   *** setDy(...);
   *** getInterpolator(...);
   *** setInterpolator(...);
   *** jumpTo(...);
   *** update(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$SmoothScroller$ScrollVectorProvider
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$SmoothScroller$ScrollVectorProvider {
}

-keep class androidx.recyclerview.widget.RecyclerView$SmoothScroller
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$SmoothScroller {
   <init>(...);
   *** getChildCount(...);
   *** isPendingInitialRun(...);
   *** isRunning(...);
   *** getLayoutManager(...);
   *** getTargetPosition(...);
   *** setTargetPosition(...);
   *** computeScrollVectorForPosition(...);
   *** findViewByPosition(...);
   *** getChildPosition(...);
   *** instantScrollToPosition(...);
   *** normalize(...);
   *** onChildAttachedToWindow(...);
   *** onSeekTargetStep(...);
   *** onStart(...);
   *** onStop(...);
   *** onTargetFound(...);
   *** stop(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$SmoothScroller
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$SmoothScroller {
   *** onSeekTargetStep(...);
   *** onStart(...);
   *** onStop(...);
   *** onTargetFound(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$State
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$State {
   <init>(...);
   *** hasTargetScrollPosition(...);
   *** isMeasuring(...);
   *** isPreLayout(...);
   *** getItemCount(...);
   *** getRemainingScrollHorizontal(...);
   *** getRemainingScrollVertical(...);
   *** getTargetScrollPosition(...);
   *** didStructureChange(...);
   *** get(...);
   *** put(...);
   *** remove(...);
   *** willRunPredictiveAnimations(...);
   *** willRunSimpleAnimations(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ViewCacheExtension
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ViewCacheExtension {
   <init>(...);
   *** getViewForPositionAndType(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ViewCacheExtension
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ViewCacheExtension {
   *** getViewForPositionAndType(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ViewHolder
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ViewHolder {
   <init>(...);
   *** getAdapterPosition(...);
   *** isRecyclable(...);
   *** setIsRecyclable(...);
   *** getItemId(...);
   *** getItemViewType(...);
   *** getLayoutPosition(...);
   *** getOldPosition(...);
   *** getPosition(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ViewHolder
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ViewHolder {
}

-keep class androidx.recyclerview.widget.RecyclerView
-keepclassmembers class androidx.recyclerview.widget.RecyclerView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCompatAccessibilityDelegate(...);
   *** hasFixedSize(...);
   *** setHasFixedSize(...);
   *** hasPendingAdapterUpdates(...);
   *** isAnimating(...);
   *** isComputingLayout(...);
   *** isLayoutSuppressed(...);
   *** getItemDecorationCount(...);
   *** isLayoutFrozen(...);
   *** setLayoutFrozen(...);
   *** getMaxFlingVelocity(...);
   *** getMinFlingVelocity(...);
   *** getPreserveFocusAfterLayout(...);
   *** setPreserveFocusAfterLayout(...);
   *** getScrollState(...);
   *** addFocusables(...);
   *** addItemDecoration(...);
   *** addItemDecoration(...);
   *** addOnChildAttachStateChangeListener(...);
   *** addOnItemTouchListener(...);
   *** addOnScrollListener(...);
   *** clearOnChildAttachStateChangeListeners(...);
   *** clearOnScrollListeners(...);
   *** computeHorizontalScrollExtent(...);
   *** computeHorizontalScrollOffset(...);
   *** computeHorizontalScrollRange(...);
   *** computeVerticalScrollExtent(...);
   *** computeVerticalScrollOffset(...);
   *** computeVerticalScrollRange(...);
   *** dispatchNestedPreScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchRestoreInstanceState(...);
   *** dispatchSaveInstanceState(...);
   *** drawChild(...);
   *** findChildViewUnder(...);
   *** findContainingItemView(...);
   *** findContainingViewHolder(...);
   *** findViewHolderForAdapterPosition(...);
   *** findViewHolderForItemId(...);
   *** findViewHolderForLayoutPosition(...);
   *** findViewHolderForPosition(...);
   *** fling(...);
   *** getAdapter(...);
   *** getChildAdapterPosition(...);
   *** getChildItemId(...);
   *** getChildLayoutPosition(...);
   *** getChildPosition(...);
   *** getChildViewHolder(...);
   *** getDecoratedBoundsWithMargins(...);
   *** getEdgeEffectFactory(...);
   *** getItemAnimator(...);
   *** getItemDecorationAt(...);
   *** getLayoutManager(...);
   *** getOnFlingListener(...);
   *** getRecycledViewPool(...);
   *** hasNestedScrollingParent(...);
   *** invalidateItemDecorations(...);
   *** offsetChildrenHorizontal(...);
   *** offsetChildrenVertical(...);
   *** onChildAttachedToWindow(...);
   *** onChildDetachedFromWindow(...);
   *** onDraw(...);
   *** onLayout(...);
   *** onScrollStateChanged(...);
   *** onScrolled(...);
   *** removeItemDecoration(...);
   *** removeItemDecorationAt(...);
   *** removeOnChildAttachStateChangeListener(...);
   *** removeOnItemTouchListener(...);
   *** removeOnScrollListener(...);
   *** scrollToPosition(...);
   *** setAccessibilityDelegateCompat(...);
   *** setAdapter(...);
   *** setChildDrawingOrderCallback(...);
   *** setEdgeEffectFactory(...);
   *** setItemAnimator(...);
   *** setItemViewCacheSize(...);
   *** setLayoutManager(...);
   *** setOnFlingListener(...);
   *** setOnScrollListener(...);
   *** setRecycledViewPool(...);
   *** setRecyclerListener(...);
   *** setScrollingTouchSlop(...);
   *** setViewCacheExtension(...);
   *** smoothScrollBy(...);
   *** smoothScrollBy(...);
   *** smoothScrollBy(...);
   *** smoothScrollToPosition(...);
   *** startNestedScroll(...);
   *** stopNestedScroll(...);
   *** stopScroll(...);
   *** suppressLayout(...);
   *** swapAdapter(...);
}

-keep class androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate
-keepclassmembers class androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate {
   <init>(...);
}

-keep class androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate
-keepclassmembers class androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate {
   <init>(...);
   *** getItemDelegate(...);
}

-keep class androidx.recyclerview.widget.SimpleItemAnimator
-keepclassmembers class androidx.recyclerview.widget.SimpleItemAnimator {
   <init>(...);
   *** getSupportsChangeAnimations(...);
   *** setSupportsChangeAnimations(...);
   *** animateAdd(...);
   *** animateAppearance(...);
   *** animateChange(...);
   *** animateChange(...);
   *** animateDisappearance(...);
   *** animateMove(...);
   *** animatePersistence(...);
   *** animateRemove(...);
   *** dispatchAddFinished(...);
   *** dispatchAddStarting(...);
   *** dispatchChangeFinished(...);
   *** dispatchChangeStarting(...);
   *** dispatchMoveFinished(...);
   *** dispatchMoveStarting(...);
   *** dispatchRemoveFinished(...);
   *** dispatchRemoveStarting(...);
   *** onAddFinished(...);
   *** onAddStarting(...);
   *** onChangeFinished(...);
   *** onChangeStarting(...);
   *** onMoveFinished(...);
   *** onMoveStarting(...);
   *** onRemoveFinished(...);
   *** onRemoveStarting(...);
}

-keep class androidx.recyclerview.widget.SimpleItemAnimator
-keepclassmembers class androidx.recyclerview.widget.SimpleItemAnimator {
   *** animateAdd(...);
   *** animateChange(...);
   *** animateMove(...);
   *** animateRemove(...);
   *** isRunning(...);
   *** endAnimation(...);
   *** endAnimations(...);
   *** runPendingAnimations(...);
}

-keep class androidx.recyclerview.widget.SnapHelper
-keepclassmembers class androidx.recyclerview.widget.SnapHelper {
   <init>(...);
   *** attachToRecyclerView(...);
   *** calculateDistanceToFinalSnap(...);
   *** calculateScrollDistance(...);
   *** createScroller(...);
   *** createSnapScroller(...);
   *** findSnapView(...);
   *** findTargetSnapPosition(...);
   *** onFling(...);
}

-keep class androidx.recyclerview.widget.SnapHelper
-keepclassmembers class androidx.recyclerview.widget.SnapHelper {
   *** calculateDistanceToFinalSnap(...);
   *** findSnapView(...);
   *** findTargetSnapPosition(...);
}

-keep class androidx.recyclerview.widget.SortedList$BatchedCallback
-keepclassmembers class androidx.recyclerview.widget.SortedList$BatchedCallback {
   <init>(...);
   *** areContentsTheSame(...);
   *** areItemsTheSame(...);
   *** compare(...);
   *** dispatchLastEvent(...);
   *** onChanged(...);
   *** onInserted(...);
   *** onMoved(...);
   *** onRemoved(...);
}

-keep class androidx.recyclerview.widget.SortedList$Callback
-keepclassmembers class androidx.recyclerview.widget.SortedList$Callback {
   <init>(...);
   *** areContentsTheSame(...);
   *** areItemsTheSame(...);
   *** compare(...);
   *** getChangePayload(...);
   *** onChanged(...);
   *** onChanged(...);
   *** onInserted(...);
   *** onMoved(...);
   *** onRemoved(...);
}

-keep class androidx.recyclerview.widget.SortedList$Callback
-keepclassmembers class androidx.recyclerview.widget.SortedList$Callback {
   *** areContentsTheSame(...);
   *** areItemsTheSame(...);
   *** compare(...);
   *** onChanged(...);
   *** onInserted(...);
   *** onMoved(...);
   *** onRemoved(...);
}

-keep class androidx.recyclerview.widget.SortedList
-keepclassmembers class androidx.recyclerview.widget.SortedList {
   <init>(...);
   <init>(...);
   *** add(...);
   *** addAll(...);
   *** addAll(...);
   *** addAll(...);
   *** beginBatchedUpdates(...);
   *** clear(...);
   *** endBatchedUpdates(...);
   *** get(...);
   *** indexOf(...);
   *** recalculatePositionOfItemAt(...);
   *** remove(...);
   *** removeItemAt(...);
   *** replaceAll(...);
   *** replaceAll(...);
   *** replaceAll(...);
   *** size(...);
   *** updateItemAt(...);
}

-keep class androidx.recyclerview.widget.SortedListAdapterCallback
-keepclassmembers class androidx.recyclerview.widget.SortedListAdapterCallback {
   <init>(...);
   *** onChanged(...);
   *** onInserted(...);
   *** onMoved(...);
   *** onRemoved(...);
}

-keep class androidx.recyclerview.widget.SortedListAdapterCallback
-keepclassmembers class androidx.recyclerview.widget.SortedListAdapterCallback {
   *** areContentsTheSame(...);
   *** areItemsTheSame(...);
   *** compare(...);
}

-keep class androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams
-keepclassmembers class androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** isFullSpan(...);
   *** setFullSpan(...);
   *** getSpanIndex(...);
}

-keep class androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState
-keepclassmembers class androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState {
   <init>(...);
   <init>(...);
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class androidx.recyclerview.widget.StaggeredGridLayoutManager
-keepclassmembers class androidx.recyclerview.widget.StaggeredGridLayoutManager {
   <init>(...);
   <init>(...);
   *** getGapStrategy(...);
   *** setGapStrategy(...);
   *** getOrientation(...);
   *** setOrientation(...);
   *** getReverseLayout(...);
   *** setReverseLayout(...);
   *** getSpanCount(...);
   *** setSpanCount(...);
   *** computeScrollVectorForPosition(...);
   *** findFirstCompletelyVisibleItemPositions(...);
   *** findFirstVisibleItemPositions(...);
   *** findLastCompletelyVisibleItemPositions(...);
   *** findLastVisibleItemPositions(...);
   *** generateDefaultLayoutParams(...);
   *** invalidateSpanAssignments(...);
   *** scrollToPositionWithOffset(...);
}

# ACW for Xamarin.AndroidX.SavedState
-keep class androidx.savedstate.SavedStateRegistryOwner
-keepclassmembers class androidx.savedstate.SavedStateRegistryOwner {
}

-keep class androidx.savedstate.SavedStateRegistry$SavedStateProvider
-keepclassmembers class androidx.savedstate.SavedStateRegistry$SavedStateProvider {
}

-keep class androidx.savedstate.SavedStateRegistry
-keepclassmembers class androidx.savedstate.SavedStateRegistry {
   *** isRestored(...);
   *** consumeRestoredStateForKey(...);
   *** registerSavedStateProvider(...);
   *** runOnNextRecreation(...);
   *** unregisterSavedStateProvider(...);
}

# ACW for Xamarin.AndroidX.SlidingPaneLayout
-keep class androidx.slidingpanelayout.widget.SlidingPaneLayout$LayoutParams
-keepclassmembers class androidx.slidingpanelayout.widget.SlidingPaneLayout$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class androidx.slidingpanelayout.widget.SlidingPaneLayout$PanelSlideListener
-keepclassmembers class androidx.slidingpanelayout.widget.SlidingPaneLayout$PanelSlideListener {
}

-keep class mono.androidx.slidingpanelayout.widget.SlidingPaneLayout_PanelSlideListenerImplementor
-keepclassmembers class mono.androidx.slidingpanelayout.widget.SlidingPaneLayout_PanelSlideListenerImplementor {
}

-keep class androidx.slidingpanelayout.widget.SlidingPaneLayout$SimplePanelSlideListener
-keepclassmembers class androidx.slidingpanelayout.widget.SlidingPaneLayout$SimplePanelSlideListener {
   <init>(...);
   *** onPanelClosed(...);
   *** onPanelOpened(...);
   *** onPanelSlide(...);
}

-keep class androidx.slidingpanelayout.widget.SlidingPaneLayout
-keepclassmembers class androidx.slidingpanelayout.widget.SlidingPaneLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCoveredFadeColor(...);
   *** setCoveredFadeColor(...);
   *** isOpen(...);
   *** isSlideable(...);
   *** getParallaxDistance(...);
   *** setParallaxDistance(...);
   *** getSliderFadeColor(...);
   *** setSliderFadeColor(...);
   *** canScroll(...);
   *** canSlide(...);
   *** closePane(...);
   *** onLayout(...);
   *** openPane(...);
   *** setPanelSlideListener(...);
   *** setShadowDrawable(...);
   *** setShadowDrawableLeft(...);
   *** setShadowDrawableRight(...);
   *** setShadowResource(...);
   *** setShadowResourceLeft(...);
   *** setShadowResourceRight(...);
   *** smoothSlideClosed(...);
   *** smoothSlideOpen(...);
}

# ACW for Xamarin.AndroidX.SwipeRefreshLayout
-keep class androidx.swiperefreshlayout.widget.CircularProgressDrawable$ProgressDrawableSize
-keepclassmembers class androidx.swiperefreshlayout.widget.CircularProgressDrawable$ProgressDrawableSize {
}

-keep class androidx.swiperefreshlayout.widget.CircularProgressDrawable
-keepclassmembers class androidx.swiperefreshlayout.widget.CircularProgressDrawable {
   <init>(...);
   *** getArrowEnabled(...);
   *** setArrowEnabled(...);
   *** getArrowHeight(...);
   *** getArrowScale(...);
   *** setArrowScale(...);
   *** getArrowWidth(...);
   *** getBackgroundColor(...);
   *** setBackgroundColor(...);
   *** getCenterRadius(...);
   *** setCenterRadius(...);
   *** getEndTrim(...);
   *** isRunning(...);
   *** getOpacity(...);
   *** getProgressRotation(...);
   *** setProgressRotation(...);
   *** getStartTrim(...);
   *** getStrokeCap(...);
   *** setStrokeCap(...);
   *** getStrokeWidth(...);
   *** setStrokeWidth(...);
   *** draw(...);
   *** getColorSchemeColors(...);
   *** setAlpha(...);
   *** setArrowDimensions(...);
   *** setColorFilter(...);
   *** setColorSchemeColors(...);
   *** setStartEndTrim(...);
   *** setStyle(...);
   *** start(...);
   *** stop(...);
}

-keep class androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback
-keepclassmembers class androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback {
}

-keep class androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener
-keepclassmembers class androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener {
}

-keep class mono.androidx.swiperefreshlayout.widget.SwipeRefreshLayout_OnRefreshListenerImplementor
-keepclassmembers class mono.androidx.swiperefreshlayout.widget.SwipeRefreshLayout_OnRefreshListenerImplementor {
}

-keep class androidx.swiperefreshlayout.widget.SwipeRefreshLayout
-keepclassmembers class androidx.swiperefreshlayout.widget.SwipeRefreshLayout {
   <init>(...);
   <init>(...);
   *** getProgressCircleDiameter(...);
   *** getProgressViewEndOffset(...);
   *** getProgressViewStartOffset(...);
   *** isRefreshing(...);
   *** setRefreshing(...);
   *** canChildScrollUp(...);
   *** onLayout(...);
   *** onMeasure(...);
   *** setColorScheme(...);
   *** setColorSchemeColors(...);
   *** setColorSchemeResources(...);
   *** setDistanceToTriggerSync(...);
   *** setOnChildScrollUpCallback(...);
   *** setOnRefreshListener(...);
   *** setProgressBackgroundColor(...);
   *** setProgressBackgroundColorSchemeColor(...);
   *** setProgressBackgroundColorSchemeResource(...);
   *** setProgressViewEndTarget(...);
   *** setProgressViewOffset(...);
   *** setSize(...);
   *** setSlingshotDistance(...);
}

# ACW for Xamarin.AndroidX.Tracing.Tracing
-keep class androidx.tracing.Trace
-keepclassmembers class androidx.tracing.Trace {
   *** isEnabled(...);
   *** beginAsyncSection(...);
   *** beginSection(...);
   *** endAsyncSection(...);
   *** endSection(...);
   *** setCounter(...);
}

# ACW for Xamarin.AndroidX.Transition
-keep class androidx.transition.FragmentTransitionSupport
-keepclassmembers class androidx.transition.FragmentTransitionSupport {
   *** addTargets(...);
   *** scheduleRemoveTargets(...);
   *** swapSharedElementTargets(...);
   *** scheduleHideFragmentView(...);
   *** setSharedElementTargets(...);
   *** replaceTargets(...);
   <init>(...);
   *** addTarget(...);
   *** beginDelayedTransition(...);
   *** canHandle(...);
   *** cloneTransition(...);
   *** mergeTransitionsInSequence(...);
   *** mergeTransitionsTogether(...);
   *** removeTarget(...);
   *** setEpicenter(...);
   *** setEpicenter(...);
   *** wrapTransitionInSet(...);
}

-keep class androidx.transition.ArcMotion
-keepclassmembers class androidx.transition.ArcMotion {
   <init>(...);
   <init>(...);
   *** getMaximumAngle(...);
   *** setMaximumAngle(...);
   *** getMinimumHorizontalAngle(...);
   *** setMinimumHorizontalAngle(...);
   *** getMinimumVerticalAngle(...);
   *** setMinimumVerticalAngle(...);
   *** getPath(...);
}

-keep class androidx.transition.AutoTransition
-keepclassmembers class androidx.transition.AutoTransition {
   <init>(...);
   <init>(...);
}

-keep class androidx.transition.ChangeBounds
-keepclassmembers class androidx.transition.ChangeBounds {
   <init>(...);
   <init>(...);
   *** getResizeClip(...);
   *** setResizeClip(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
}

-keep class androidx.transition.ChangeClipBounds
-keepclassmembers class androidx.transition.ChangeClipBounds {
   <init>(...);
   <init>(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
}

-keep class androidx.transition.ChangeImageTransform
-keepclassmembers class androidx.transition.ChangeImageTransform {
   <init>(...);
   <init>(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
}

-keep class androidx.transition.ChangeScroll
-keepclassmembers class androidx.transition.ChangeScroll {
   <init>(...);
   <init>(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
}

-keep class androidx.transition.ChangeTransform
-keepclassmembers class androidx.transition.ChangeTransform {
   <init>(...);
   <init>(...);
   *** getReparent(...);
   *** setReparent(...);
   *** getReparentWithOverlay(...);
   *** setReparentWithOverlay(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
}

-keep class androidx.transition.CircularPropagation
-keepclassmembers class androidx.transition.CircularPropagation {
   <init>(...);
   *** getStartDelay(...);
   *** setPropagationSpeed(...);
}

-keep class androidx.transition.Explode
-keepclassmembers class androidx.transition.Explode {
   <init>(...);
   <init>(...);
}

-keep class androidx.transition.Fade
-keepclassmembers class androidx.transition.Fade {
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class androidx.transition.PathMotion
-keepclassmembers class androidx.transition.PathMotion {
   <init>(...);
   <init>(...);
   *** getPath(...);
}

-keep class androidx.transition.PathMotion
-keepclassmembers class androidx.transition.PathMotion {
   *** getPath(...);
}

-keep class androidx.transition.PatternPathMotion
-keepclassmembers class androidx.transition.PatternPathMotion {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getPatternPath(...);
   *** setPatternPath(...);
   *** getPath(...);
}

-keep class androidx.transition.Scene
-keepclassmembers class androidx.transition.Scene {
   <init>(...);
   <init>(...);
   *** getSceneRoot(...);
   *** enter(...);
   *** exit(...);
   *** getCurrentScene(...);
   *** getSceneForLayout(...);
   *** setEnterAction(...);
   *** setExitAction(...);
}

-keep class androidx.transition.SidePropagation
-keepclassmembers class androidx.transition.SidePropagation {
   <init>(...);
   *** getStartDelay(...);
   *** setPropagationSpeed(...);
   *** setSide(...);
}

-keep class androidx.transition.Slide$GravityFlag
-keepclassmembers class androidx.transition.Slide$GravityFlag {
}

-keep class androidx.transition.Slide
-keepclassmembers class androidx.transition.Slide {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSlideEdge(...);
   *** setSlideEdge(...);
}

-keep class androidx.transition.Transition$EpicenterCallback
-keepclassmembers class androidx.transition.Transition$EpicenterCallback {
   <init>(...);
   *** onGetEpicenter(...);
}

-keep class androidx.transition.Transition$EpicenterCallback
-keepclassmembers class androidx.transition.Transition$EpicenterCallback {
   *** onGetEpicenter(...);
}

-keep class androidx.transition.Transition$MatchOrder
-keepclassmembers class androidx.transition.Transition$MatchOrder {
}

-keep class androidx.transition.Transition$TransitionListener
-keepclassmembers class androidx.transition.Transition$TransitionListener {
}

-keep class mono.androidx.transition.Transition_TransitionListenerImplementor
-keepclassmembers class mono.androidx.transition.Transition_TransitionListenerImplementor {
}

-keep class androidx.transition.Transition
-keepclassmembers class androidx.transition.Transition {
   <init>(...);
   <init>(...);
   *** getDuration(...);
   *** getEpicenter(...);
   *** getInterpolator(...);
   *** getName(...);
   *** getPathMotion(...);
   *** setPathMotion(...);
   *** getPropagation(...);
   *** setPropagation(...);
   *** getStartDelay(...);
   *** getTargetIds(...);
   *** getTargetNames(...);
   *** getTargetTypes(...);
   *** getTargets(...);
   *** addListener(...);
   *** addTarget(...);
   *** addTarget(...);
   *** addTarget(...);
   *** addTarget(...);
   *** animate(...);
   *** cancel(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
   *** clone(...);
   *** createAnimator(...);
   *** end(...);
   *** excludeChildren(...);
   *** excludeChildren(...);
   *** excludeChildren(...);
   *** excludeTarget(...);
   *** excludeTarget(...);
   *** excludeTarget(...);
   *** excludeTarget(...);
   *** getEpicenterCallback(...);
   *** getTransitionProperties(...);
   *** getTransitionValues(...);
   *** isTransitionRequired(...);
   *** pause(...);
   *** removeListener(...);
   *** removeTarget(...);
   *** removeTarget(...);
   *** removeTarget(...);
   *** removeTarget(...);
   *** resume(...);
   *** runAnimators(...);
   *** setDuration(...);
   *** setEpicenterCallback(...);
   *** setInterpolator(...);
   *** setMatchOrder(...);
   *** setStartDelay(...);
   *** start(...);
}

-keep class androidx.transition.Transition
-keepclassmembers class androidx.transition.Transition {
   *** captureEndValues(...);
   *** captureStartValues(...);
}

-keep class androidx.transition.TransitionInflater
-keepclassmembers class androidx.transition.TransitionInflater {
   *** from(...);
   *** inflateTransition(...);
   *** inflateTransitionManager(...);
}

-keep class androidx.transition.TransitionListenerAdapter
-keepclassmembers class androidx.transition.TransitionListenerAdapter {
   <init>(...);
   *** onTransitionCancel(...);
   *** onTransitionEnd(...);
   *** onTransitionPause(...);
   *** onTransitionResume(...);
   *** onTransitionStart(...);
}

-keep class androidx.transition.TransitionManager
-keepclassmembers class androidx.transition.TransitionManager {
   <init>(...);
   *** beginDelayedTransition(...);
   *** beginDelayedTransition(...);
   *** endTransitions(...);
   *** go(...);
   *** go(...);
   *** setTransition(...);
   *** setTransition(...);
   *** transitionTo(...);
}

-keep class androidx.transition.TransitionPropagation
-keepclassmembers class androidx.transition.TransitionPropagation {
   <init>(...);
   *** captureValues(...);
   *** getPropagationProperties(...);
   *** getStartDelay(...);
}

-keep class androidx.transition.TransitionPropagation
-keepclassmembers class androidx.transition.TransitionPropagation {
   *** captureValues(...);
   *** getPropagationProperties(...);
   *** getStartDelay(...);
}

-keep class androidx.transition.TransitionSet
-keepclassmembers class androidx.transition.TransitionSet {
   <init>(...);
   <init>(...);
   *** getOrdering(...);
   *** getTransitionCount(...);
   *** addTransition(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
   *** getTransitionAt(...);
   *** removeTransition(...);
   *** setOrdering(...);
}

-keep class androidx.transition.TransitionValues
-keepclassmembers class androidx.transition.TransitionValues {
   <init>(...);
   <init>(...);
}

-keep class androidx.transition.Visibility$Mode
-keepclassmembers class androidx.transition.Visibility$Mode {
}

-keep class androidx.transition.Visibility
-keepclassmembers class androidx.transition.Visibility {
   <init>(...);
   <init>(...);
   *** getMode(...);
   *** setMode(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
   *** isVisible(...);
   *** onAppear(...);
   *** onAppear(...);
   *** onDisappear(...);
   *** onDisappear(...);
}

-keep class androidx.transition.Visibility
-keepclassmembers class androidx.transition.Visibility {
}

-keep class androidx.transition.VisibilityPropagation
-keepclassmembers class androidx.transition.VisibilityPropagation {
   <init>(...);
   *** captureValues(...);
   *** getPropagationProperties(...);
   *** getViewVisibility(...);
   *** getViewX(...);
   *** getViewY(...);
}

-keep class androidx.transition.VisibilityPropagation
-keepclassmembers class androidx.transition.VisibilityPropagation {
   *** getStartDelay(...);
}

# ACW for Xamarin.AndroidX.VectorDrawable.Animated
-keep class androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat
-keepclassmembers class androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat {
   *** isRunning(...);
   *** getOpacity(...);
   *** clearAnimationCallbacks(...);
   *** clearAnimationCallbacks(...);
   *** create(...);
   *** createFromXmlInner(...);
   *** draw(...);
   *** registerAnimationCallback(...);
   *** registerAnimationCallback(...);
   *** setAlpha(...);
   *** setColorFilter(...);
   *** start(...);
   *** stop(...);
   *** unregisterAnimationCallback(...);
   *** unregisterAnimationCallback(...);
}

-keep class androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat
-keepclassmembers class androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat {
   *** loadInterpolator(...);
}

-keep class androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat
-keepclassmembers class androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat {
   *** loadAnimator(...);
   *** loadAnimator(...);
   *** loadAnimator(...);
}

-keep class androidx.vectordrawable.graphics.drawable.ArgbEvaluator
-keepclassmembers class androidx.vectordrawable.graphics.drawable.ArgbEvaluator {
   <init>(...);
   *** getInstance(...);
   *** evaluate(...);
}

-keep class androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback
-keepclassmembers class androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback {
   <init>(...);
   *** onAnimationEnd(...);
   *** onAnimationStart(...);
}

-keep class androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback
-keepclassmembers class androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback {
}

-keep class androidx.vectordrawable.graphics.drawable.Animatable2Compat
-keepclassmembers class androidx.vectordrawable.graphics.drawable.Animatable2Compat {
}

-keep class androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat
-keepclassmembers class androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat {
   <init>(...);
   <init>(...);
   *** getInterpolation(...);
}

# ACW for Xamarin.AndroidX.VectorDrawable
-keep class androidx.vectordrawable.graphics.drawable.VectorDrawableCommon
-keepclassmembers class androidx.vectordrawable.graphics.drawable.VectorDrawableCommon {
}

-keep class androidx.vectordrawable.graphics.drawable.VectorDrawableCommon
-keepclassmembers class androidx.vectordrawable.graphics.drawable.VectorDrawableCommon {
   *** getOpacity(...);
   *** draw(...);
   *** setAlpha(...);
   *** setColorFilter(...);
}

-keep class androidx.vectordrawable.graphics.drawable.VectorDrawableCompat
-keepclassmembers class androidx.vectordrawable.graphics.drawable.VectorDrawableCompat {
   *** getCurrent(...);
   *** getMinimumHeight(...);
   *** getMinimumWidth(...);
   *** getOpacity(...);
   *** getPixelSize(...);
   *** getTransparentRegion(...);
   *** applyTheme(...);
   *** clearColorFilter(...);
   *** create(...);
   *** createFromXmlInner(...);
   *** draw(...);
   *** getPadding(...);
   *** getState(...);
   *** jumpToCurrentState(...);
   *** onBoundsChange(...);
   *** setAlpha(...);
   *** setColorFilter(...);
   *** setFilterBitmap(...);
   *** setHotspot(...);
   *** setHotspotBounds(...);
   *** setState(...);
}

# ACW for Xamarin.AndroidX.VersionedParcelable
-keep class androidx.versionedparcelable.CustomVersionedParcelable
-keepclassmembers class androidx.versionedparcelable.CustomVersionedParcelable {
   <init>(...);
   *** onPostParceling(...);
   *** onPreParceling(...);
}

-keep class androidx.versionedparcelable.CustomVersionedParcelable
-keepclassmembers class androidx.versionedparcelable.CustomVersionedParcelable {
}

-keep class androidx.versionedparcelable.VersionedParcelable
-keepclassmembers class androidx.versionedparcelable.VersionedParcelable {
}

# ACW for Xamarin.AndroidX.ViewPager
-keep class androidx.viewpager.widget.PagerAdapter
-keepclassmembers class androidx.viewpager.widget.PagerAdapter {
   <init>(...);
   *** getCount(...);
   *** destroyItem(...);
   *** destroyItem(...);
   *** finishUpdate(...);
   *** finishUpdate(...);
   *** getItemPosition(...);
   *** getPageTitle(...);
   *** getPageWidth(...);
   *** instantiateItem(...);
   *** instantiateItem(...);
   *** isViewFromObject(...);
   *** notifyDataSetChanged(...);
   *** registerDataSetObserver(...);
   *** restoreState(...);
   *** saveState(...);
   *** setPrimaryItem(...);
   *** setPrimaryItem(...);
   *** startUpdate(...);
   *** startUpdate(...);
   *** unregisterDataSetObserver(...);
}

-keep class androidx.viewpager.widget.PagerAdapter
-keepclassmembers class androidx.viewpager.widget.PagerAdapter {
   *** getCount(...);
   *** isViewFromObject(...);
}

-keep class androidx.viewpager.widget.PagerTabStrip
-keepclassmembers class androidx.viewpager.widget.PagerTabStrip {
   <init>(...);
   <init>(...);
   *** getDrawFullUnderline(...);
   *** setDrawFullUnderline(...);
   *** getTabIndicatorColor(...);
   *** setTabIndicatorColor(...);
   *** setTabIndicatorColorResource(...);
}

-keep class androidx.viewpager.widget.PagerTitleStrip
-keepclassmembers class androidx.viewpager.widget.PagerTitleStrip {
   <init>(...);
   <init>(...);
   *** getTextSpacing(...);
   *** setTextSpacing(...);
   *** onLayout(...);
   *** setGravity(...);
   *** setNonPrimaryAlpha(...);
   *** setTextColor(...);
   *** setTextSize(...);
}

-keep class androidx.viewpager.widget.ViewPager$DecorView
-keepclassmembers class androidx.viewpager.widget.ViewPager$DecorView {
}

-keep class androidx.viewpager.widget.ViewPager$LayoutParams
-keepclassmembers class androidx.viewpager.widget.ViewPager$LayoutParams {
   <init>(...);
   <init>(...);
}

-keep class androidx.viewpager.widget.ViewPager$OnAdapterChangeListener
-keepclassmembers class androidx.viewpager.widget.ViewPager$OnAdapterChangeListener {
}

-keep class mono.androidx.viewpager.widget.ViewPager_OnAdapterChangeListenerImplementor
-keepclassmembers class mono.androidx.viewpager.widget.ViewPager_OnAdapterChangeListenerImplementor {
}

-keep class androidx.viewpager.widget.ViewPager$OnPageChangeListener
-keepclassmembers class androidx.viewpager.widget.ViewPager$OnPageChangeListener {
}

-keep class mono.androidx.viewpager.widget.ViewPager_OnPageChangeListenerImplementor
-keepclassmembers class mono.androidx.viewpager.widget.ViewPager_OnPageChangeListenerImplementor {
}

-keep class androidx.viewpager.widget.ViewPager$PageTransformer
-keepclassmembers class androidx.viewpager.widget.ViewPager$PageTransformer {
}

-keep class androidx.viewpager.widget.ViewPager$SavedState
-keepclassmembers class androidx.viewpager.widget.ViewPager$SavedState {
   <init>(...);
}

-keep class androidx.viewpager.widget.ViewPager$SimpleOnPageChangeListener
-keepclassmembers class androidx.viewpager.widget.ViewPager$SimpleOnPageChangeListener {
   <init>(...);
   *** onPageScrollStateChanged(...);
   *** onPageScrolled(...);
   *** onPageSelected(...);
}

-keep class androidx.viewpager.widget.ViewPager
-keepclassmembers class androidx.viewpager.widget.ViewPager {
   <init>(...);
   <init>(...);
   *** getAdapter(...);
   *** setAdapter(...);
   *** getCurrentItem(...);
   *** setCurrentItem(...);
   *** isFakeDragging(...);
   *** getOffscreenPageLimit(...);
   *** setOffscreenPageLimit(...);
   *** getPageMargin(...);
   *** setPageMargin(...);
   *** addFocusables(...);
   *** addOnAdapterChangeListener(...);
   *** addOnPageChangeListener(...);
   *** addTouchables(...);
   *** arrowScroll(...);
   *** beginFakeDrag(...);
   *** canScroll(...);
   *** clearOnPageChangeListeners(...);
   *** endFakeDrag(...);
   *** executeKeyEvent(...);
   *** fakeDragBy(...);
   *** onLayout(...);
   *** onPageScrolled(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** removeOnAdapterChangeListener(...);
   *** removeOnPageChangeListener(...);
   *** setCurrentItem(...);
   *** setOnPageChangeListener(...);
   *** setPageMarginDrawable(...);
   *** setPageMarginDrawable(...);
   *** setPageTransformer(...);
   *** setPageTransformer(...);
}

# ACW for Xamarin.Essentials
# ACW for Xamarin.Google.Android.Material
-keep class com.google.android.material.resources.TextAppearance
-keepclassmembers class com.google.android.material.resources.TextAppearance {
   <init>(...);
   *** getFont(...);
   *** getFontAsync(...);
   *** updateDrawState(...);
   *** updateMeasureState(...);
   *** updateTextPaintMeasureState(...);
}

-keep class com.google.android.material.navigation.NavigationView$OnNavigationItemSelectedListener
-keepclassmembers class com.google.android.material.navigation.NavigationView$OnNavigationItemSelectedListener {
}

-keep class mono.com.google.android.material.navigation.NavigationView_OnNavigationItemSelectedListenerImplementor
-keepclassmembers class mono.com.google.android.material.navigation.NavigationView_OnNavigationItemSelectedListenerImplementor {
}

-keep class com.google.android.material.navigation.NavigationView
-keepclassmembers class com.google.android.material.navigation.NavigationView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCheckedItem(...);
   *** setCheckedItem(...);
   *** getHeaderCount(...);
   *** getItemBackground(...);
   *** setItemBackground(...);
   *** getItemHorizontalPadding(...);
   *** setItemHorizontalPadding(...);
   *** getItemIconPadding(...);
   *** setItemIconPadding(...);
   *** getItemIconTintList(...);
   *** setItemIconTintList(...);
   *** getItemTextColor(...);
   *** setItemTextColor(...);
   *** getMenu(...);
   *** addHeaderView(...);
   *** getHeaderView(...);
   *** inflateHeaderView(...);
   *** inflateMenu(...);
   *** removeHeaderView(...);
   *** setCheckedItem(...);
   *** setItemBackgroundResource(...);
   *** setItemHorizontalPaddingResource(...);
   *** setItemIconPaddingResource(...);
   *** setItemTextAppearance(...);
   *** setNavigationItemSelectedListener(...);
}

-keep class com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener
-keepclassmembers class com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener {
   <init>(...);
   *** onHidden(...);
   *** onShown(...);
}

-keep class com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener
-keepclassmembers class com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener {
}

-keep class com.google.android.material.floatingactionbutton.FloatingActionButton
-keepclassmembers class com.google.android.material.floatingactionbutton.FloatingActionButton {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCompatElevation(...);
   *** setCompatElevation(...);
   *** getCompatHoveredFocusedTranslationZ(...);
   *** setCompatHoveredFocusedTranslationZ(...);
   *** getCompatPressedTranslationZ(...);
   *** setCompatPressedTranslationZ(...);
   *** getContentBackground(...);
   *** getCustomSize(...);
   *** setCustomSize(...);
   *** getExpandedComponentIdHint(...);
   *** setExpandedComponentIdHint(...);
   *** getHideMotionSpec(...);
   *** setHideMotionSpec(...);
   *** isExpanded(...);
   *** isOrWillBeHidden(...);
   *** isOrWillBeShown(...);
   *** getRippleColor(...);
   *** setRippleColor(...);
   *** getRippleColorStateList(...);
   *** getShowMotionSpec(...);
   *** setShowMotionSpec(...);
   *** getSize(...);
   *** setSize(...);
   *** getSupportBackgroundTintList(...);
   *** setSupportBackgroundTintList(...);
   *** getSupportBackgroundTintMode(...);
   *** setSupportBackgroundTintMode(...);
   *** getSupportImageTintList(...);
   *** setSupportImageTintList(...);
   *** getSupportImageTintMode(...);
   *** setSupportImageTintMode(...);
   *** getUseCompatPadding(...);
   *** setUseCompatPadding(...);
   *** addOnHideAnimationListener(...);
   *** addOnShowAnimationListener(...);
   *** clearCustomSize(...);
   *** getContentRect(...);
   *** getMeasuredContentRect(...);
   *** hide(...);
   *** hide(...);
   *** removeOnHideAnimationListener(...);
   *** removeOnShowAnimationListener(...);
   *** setCompatElevationResource(...);
   *** setCompatHoveredFocusedTranslationZResource(...);
   *** setCompatPressedTranslationZResource(...);
   *** setExpanded(...);
   *** setHideMotionSpecResource(...);
   *** setRippleColor(...);
   *** setShowMotionSpecResource(...);
   *** show(...);
   *** show(...);
}

-keep class com.google.android.material.expandable.ExpandableTransformationWidget
-keepclassmembers class com.google.android.material.expandable.ExpandableTransformationWidget {
}

-keep class com.google.android.material.expandable.ExpandableWidget
-keepclassmembers class com.google.android.material.expandable.ExpandableWidget {
}

-keep class com.google.android.material.chip.Chip
-keepclassmembers class com.google.android.material.chip.Chip {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isCheckable(...);
   *** setCheckable(...);
   *** getCheckedIcon(...);
   *** setCheckedIcon(...);
   *** isCheckedIconEnabled(...);
   *** setCheckedIconEnabled(...);
   *** isCheckedIconVisible(...);
   *** setCheckedIconVisible(...);
   *** getChipBackgroundColor(...);
   *** setChipBackgroundColor(...);
   *** getChipCornerRadius(...);
   *** setChipCornerRadius(...);
   *** getChipDrawable(...);
   *** getChipEndPadding(...);
   *** setChipEndPadding(...);
   *** getChipIcon(...);
   *** setChipIcon(...);
   *** isChipIconEnabled(...);
   *** setChipIconEnabled(...);
   *** getChipIconSize(...);
   *** setChipIconSize(...);
   *** getChipIconTint(...);
   *** setChipIconTint(...);
   *** isChipIconVisible(...);
   *** setChipIconVisible(...);
   *** getChipMinHeight(...);
   *** setChipMinHeight(...);
   *** getChipStartPadding(...);
   *** setChipStartPadding(...);
   *** getChipStrokeColor(...);
   *** setChipStrokeColor(...);
   *** getChipStrokeWidth(...);
   *** setChipStrokeWidth(...);
   *** getChipText(...);
   *** setChipText(...);
   *** getCloseIcon(...);
   *** setCloseIcon(...);
   *** getCloseIconContentDescription(...);
   *** setCloseIconContentDescription(...);
   *** isCloseIconEnabled(...);
   *** setCloseIconEnabled(...);
   *** getCloseIconEndPadding(...);
   *** setCloseIconEndPadding(...);
   *** getCloseIconSize(...);
   *** setCloseIconSize(...);
   *** getCloseIconStartPadding(...);
   *** setCloseIconStartPadding(...);
   *** getCloseIconTint(...);
   *** setCloseIconTint(...);
   *** isCloseIconVisible(...);
   *** setCloseIconVisible(...);
   *** getHideMotionSpec(...);
   *** setHideMotionSpec(...);
   *** getIconEndPadding(...);
   *** setIconEndPadding(...);
   *** getIconStartPadding(...);
   *** setIconStartPadding(...);
   *** getRippleColor(...);
   *** setRippleColor(...);
   *** getShowMotionSpec(...);
   *** setShowMotionSpec(...);
   *** getTextEndPadding(...);
   *** setTextEndPadding(...);
   *** getTextStartPadding(...);
   *** setTextStartPadding(...);
   *** onChipDrawableSizeChange(...);
   *** performCloseIconClick(...);
   *** setCheckableResource(...);
   *** setCheckedIconEnabledResource(...);
   *** setCheckedIconResource(...);
   *** setCheckedIconVisible(...);
   *** setChipBackgroundColorResource(...);
   *** setChipCornerRadiusResource(...);
   *** setChipDrawable(...);
   *** setChipEndPaddingResource(...);
   *** setChipIconEnabledResource(...);
   *** setChipIconResource(...);
   *** setChipIconSizeResource(...);
   *** setChipIconTintResource(...);
   *** setChipIconVisible(...);
   *** setChipMinHeightResource(...);
   *** setChipStartPaddingResource(...);
   *** setChipStrokeColorResource(...);
   *** setChipStrokeWidthResource(...);
   *** setChipTextResource(...);
   *** setCloseIconEnabledResource(...);
   *** setCloseIconEndPaddingResource(...);
   *** setCloseIconResource(...);
   *** setCloseIconSizeResource(...);
   *** setCloseIconStartPaddingResource(...);
   *** setCloseIconTintResource(...);
   *** setCloseIconVisible(...);
   *** setHideMotionSpecResource(...);
   *** setIconEndPaddingResource(...);
   *** setIconStartPaddingResource(...);
   *** setOnCloseIconClickListener(...);
   *** setRippleColorResource(...);
   *** setShowMotionSpecResource(...);
   *** setTextAppearance(...);
   *** setTextAppearanceResource(...);
   *** setTextEndPaddingResource(...);
   *** setTextStartPaddingResource(...);
}

-keep class com.google.android.material.chip.ChipDrawable$Delegate
-keepclassmembers class com.google.android.material.chip.ChipDrawable$Delegate {
}

-keep class com.google.android.material.chip.ChipDrawable
-keepclassmembers class com.google.android.material.chip.ChipDrawable {
   *** isCheckable(...);
   *** setCheckable(...);
   *** getCheckedIcon(...);
   *** setCheckedIcon(...);
   *** isCheckedIconEnabled(...);
   *** setCheckedIconEnabled(...);
   *** isCheckedIconVisible(...);
   *** setCheckedIconVisible(...);
   *** getChipBackgroundColor(...);
   *** setChipBackgroundColor(...);
   *** getChipCornerRadius(...);
   *** setChipCornerRadius(...);
   *** getChipEndPadding(...);
   *** setChipEndPadding(...);
   *** getChipIcon(...);
   *** setChipIcon(...);
   *** isChipIconEnabled(...);
   *** setChipIconEnabled(...);
   *** getChipIconSize(...);
   *** setChipIconSize(...);
   *** getChipIconTint(...);
   *** setChipIconTint(...);
   *** isChipIconVisible(...);
   *** setChipIconVisible(...);
   *** getChipMinHeight(...);
   *** setChipMinHeight(...);
   *** getChipStartPadding(...);
   *** setChipStartPadding(...);
   *** getChipStrokeColor(...);
   *** setChipStrokeColor(...);
   *** getChipStrokeWidth(...);
   *** setChipStrokeWidth(...);
   *** getCloseIcon(...);
   *** setCloseIcon(...);
   *** getCloseIconContentDescription(...);
   *** setCloseIconContentDescription(...);
   *** isCloseIconEnabled(...);
   *** setCloseIconEnabled(...);
   *** getCloseIconEndPadding(...);
   *** setCloseIconEndPadding(...);
   *** getCloseIconSize(...);
   *** setCloseIconSize(...);
   *** getCloseIconStartPadding(...);
   *** setCloseIconStartPadding(...);
   *** getCloseIconTint(...);
   *** setCloseIconTint(...);
   *** isCloseIconVisible(...);
   *** setCloseIconVisible(...);
   *** getEllipsize(...);
   *** setEllipsize(...);
   *** getHideMotionSpec(...);
   *** setHideMotionSpec(...);
   *** getIconEndPadding(...);
   *** setIconEndPadding(...);
   *** getIconStartPadding(...);
   *** setIconStartPadding(...);
   *** isCloseIconStateful(...);
   *** getMaxWidth(...);
   *** setMaxWidth(...);
   *** getOpacity(...);
   *** getRippleColor(...);
   *** setRippleColor(...);
   *** getShowMotionSpec(...);
   *** setShowMotionSpec(...);
   *** getText(...);
   *** setText(...);
   *** getTextAppearance(...);
   *** setTextAppearance(...);
   *** getTextEndPadding(...);
   *** setTextEndPadding(...);
   *** getTextStartPadding(...);
   *** setTextStartPadding(...);
   *** getUseCompatRipple(...);
   *** setUseCompatRipple(...);
   *** createFromAttributes(...);
   *** createFromResource(...);
   *** draw(...);
   *** getChipTouchBounds(...);
   *** getCloseIconState(...);
   *** getCloseIconTouchBounds(...);
   *** invalidateDrawable(...);
   *** onSizeChange(...);
   *** scheduleDrawable(...);
   *** setAlpha(...);
   *** setCheckableResource(...);
   *** setCheckedIconEnabledResource(...);
   *** setCheckedIconResource(...);
   *** setCheckedIconVisible(...);
   *** setChipBackgroundColorResource(...);
   *** setChipCornerRadiusResource(...);
   *** setChipEndPaddingResource(...);
   *** setChipIconEnabledResource(...);
   *** setChipIconResource(...);
   *** setChipIconSizeResource(...);
   *** setChipIconTintResource(...);
   *** setChipIconVisible(...);
   *** setChipMinHeightResource(...);
   *** setChipStartPaddingResource(...);
   *** setChipStrokeColorResource(...);
   *** setChipStrokeWidthResource(...);
   *** setCloseIconEnabledResource(...);
   *** setCloseIconEndPaddingResource(...);
   *** setCloseIconResource(...);
   *** setCloseIconSizeResource(...);
   *** setCloseIconStartPaddingResource(...);
   *** setCloseIconState(...);
   *** setCloseIconTintResource(...);
   *** setCloseIconVisible(...);
   *** setColorFilter(...);
   *** setDelegate(...);
   *** setHideMotionSpecResource(...);
   *** setIconEndPaddingResource(...);
   *** setIconStartPaddingResource(...);
   *** setRippleColorResource(...);
   *** setShowMotionSpecResource(...);
   *** setTextAppearanceResource(...);
   *** setTextEndPaddingResource(...);
   *** setTextResource(...);
   *** setTextStartPaddingResource(...);
   *** unscheduleDrawable(...);
}

-keep class com.google.android.material.chip.ChipGroup$OnCheckedChangeListener
-keepclassmembers class com.google.android.material.chip.ChipGroup$OnCheckedChangeListener {
}

-keep class mono.com.google.android.material.chip.ChipGroup_OnCheckedChangeListenerImplementor
-keepclassmembers class mono.com.google.android.material.chip.ChipGroup_OnCheckedChangeListenerImplementor {
}

-keep class com.google.android.material.chip.ChipGroup
-keepclassmembers class com.google.android.material.chip.ChipGroup {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCheckedChipId(...);
   *** getChipSpacingHorizontal(...);
   *** setChipSpacingHorizontal(...);
   *** getChipSpacingVertical(...);
   *** setChipSpacingVertical(...);
   *** isSingleSelection(...);
   *** setSingleSelection(...);
   *** check(...);
   *** clearCheck(...);
   *** setChipSpacing(...);
   *** setChipSpacingHorizontalResource(...);
   *** setChipSpacingResource(...);
   *** setChipSpacingVerticalResource(...);
   *** setDividerDrawableHorizontal(...);
   *** setDividerDrawableVertical(...);
   *** setFlexWrap(...);
   *** setOnCheckedChangeListener(...);
   *** setShowDividerHorizontal(...);
   *** setShowDividerVertical(...);
   *** setSingleLine(...);
   *** setSingleSelection(...);
}

-keep class com.google.android.material.internal.VisibilityAwareImageButton
-keepclassmembers class com.google.android.material.internal.VisibilityAwareImageButton {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getUserSetVisibility(...);
   *** internalSetVisibility(...);
}

-keep class com.google.android.material.internal.FlowLayout
-keepclassmembers class com.google.android.material.internal.FlowLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** isSingleLine(...);
   *** getItemSpacing(...);
   *** setItemSpacing(...);
   *** getLineSpacing(...);
   *** setLineSpacing(...);
   *** onLayout(...);
   *** setSingleLine(...);
}

-keep class com.google.android.material.internal.ScrimInsetsFrameLayout
-keepclassmembers class com.google.android.material.internal.ScrimInsetsFrameLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** onInsetsChanged(...);
}

-keep class com.google.android.material.animation.MotionSpec
-keepclassmembers class com.google.android.material.animation.MotionSpec {
   <init>(...);
   *** getTotalDuration(...);
   *** createFromAttribute(...);
   *** createFromResource(...);
   *** getTiming(...);
   *** hasTiming(...);
   *** setTiming(...);
}

-keep class com.google.android.material.animation.MotionTiming
-keepclassmembers class com.google.android.material.animation.MotionTiming {
   <init>(...);
   <init>(...);
   *** getDelay(...);
   *** getDuration(...);
   *** getInterpolator(...);
   *** getRepeatCount(...);
   *** getRepeatMode(...);
   *** apply(...);
}

# ACW for Xamarin.Google.Guava.ListenableFuture
-keep class com.google.common.util.concurrent.ListenableFuture
-keepclassmembers class com.google.common.util.concurrent.ListenableFuture {
}

# ACW for Xamarin.GooglePlayServices.Base
-keep class com.google.android.gms.common.api.internal.ApiKey
-keepclassmembers class com.google.android.gms.common.api.internal.ApiKey {
   *** equals(...);
   *** getSharedApiKey(...);
   *** hashCode(...);
   *** zaa(...);
}

-keep class com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl
-keepclassmembers class com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl {
   <init>(...);
   <init>(...);
   *** getApi(...);
   *** getClientKey(...);
   *** doExecute(...);
   *** onSetFailedResult(...);
   *** run(...);
   *** setFailedResult(...);
}

-keep class com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl
-keepclassmembers class com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl {
   *** doExecute(...);
}

-keep class com.google.android.gms.common.api.internal.BaseImplementation$ResultHolder
-keepclassmembers class com.google.android.gms.common.api.internal.BaseImplementation$ResultHolder {
}

-keep class com.google.android.gms.common.api.internal.BaseImplementation
-keepclassmembers class com.google.android.gms.common.api.internal.BaseImplementation {
   <init>(...);
}

-keep class com.google.android.gms.common.api.internal.BasePendingResult
-keepclassmembers class com.google.android.gms.common.api.internal.BasePendingResult {
   <init>(...);
   <init>(...);
   *** isCanceled(...);
   *** isReady(...);
   *** addStatusListener(...);
   *** await(...);
   *** await(...);
   *** cancel(...);
   *** createFailedResult(...);
   *** forceFailureUnlessReady(...);
   *** setCancelToken(...);
   *** setResult(...);
   *** setResultCallback(...);
   *** setResultCallback(...);
   *** then(...);
   *** zak(...);
   *** zal(...);
   *** zam(...);
}

-keep class com.google.android.gms.common.api.internal.BasePendingResult
-keepclassmembers class com.google.android.gms.common.api.internal.BasePendingResult {
}

-keep class com.google.android.gms.common.api.internal.GoogleApiManager
-keepclassmembers class com.google.android.gms.common.api.internal.GoogleApiManager {
   *** handleMessage(...);
   *** reportSignOut(...);
   *** zaA(...);
   *** zaB(...);
   *** zaC(...);
   *** zaa(...);
   *** zal(...);
   *** zam(...);
   *** zao(...);
   *** zap(...);
   *** zaq(...);
   *** zar(...);
   *** zaw(...);
   *** zax(...);
   *** zaz(...);
}

-keep class com.google.android.gms.common.api.internal.ConnectionCallbacks
-keepclassmembers class com.google.android.gms.common.api.internal.ConnectionCallbacks {
}

-keep class com.google.android.gms.common.api.internal.OnConnectionFailedListener
-keepclassmembers class com.google.android.gms.common.api.internal.OnConnectionFailedListener {
}

-keep class com.google.android.gms.common.api.internal.RemoteCall
-keepclassmembers class com.google.android.gms.common.api.internal.RemoteCall {
}

-keep class com.google.android.gms.common.api.internal.SignInConnectionListener
-keepclassmembers class com.google.android.gms.common.api.internal.SignInConnectionListener {
}

-keep class com.google.android.gms.common.api.internal.zau
-keepclassmembers class com.google.android.gms.common.api.internal.zau {
}

-keep class com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey
-keepclassmembers class com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey {
   *** toIdString(...);
}

-keep class com.google.android.gms.common.api.internal.ListenerHolder$Notifier
-keepclassmembers class com.google.android.gms.common.api.internal.ListenerHolder$Notifier {
}

-keep class com.google.android.gms.common.api.internal.ListenerHolder
-keepclassmembers class com.google.android.gms.common.api.internal.ListenerHolder {
   *** hasListener(...);
   *** clear(...);
   *** getListenerKey(...);
   *** notifyListener(...);
}

-keep class com.google.android.gms.common.api.internal.RegisterListenerMethod
-keepclassmembers class com.google.android.gms.common.api.internal.RegisterListenerMethod {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getListenerKey(...);
   *** clearListener(...);
   *** getRequiredFeatures(...);
   *** registerListener(...);
   *** zaa(...);
   *** zab(...);
}

-keep class com.google.android.gms.common.api.internal.RegisterListenerMethod
-keepclassmembers class com.google.android.gms.common.api.internal.RegisterListenerMethod {
   *** registerListener(...);
}

-keep class com.google.android.gms.common.api.internal.RegistrationMethods$Builder
-keepclassmembers class com.google.android.gms.common.api.internal.RegistrationMethods$Builder {
   *** build(...);
   *** onConnectionSuspended(...);
   *** register(...);
   *** setAutoResolveMissingFeatures(...);
   *** setFeatures(...);
   *** setMethodKey(...);
   *** unregister(...);
   *** withHolder(...);
}

-keep class com.google.android.gms.common.api.internal.RegistrationMethods
-keepclassmembers class com.google.android.gms.common.api.internal.RegistrationMethods {
   *** builder(...);
}

-keep class com.google.android.gms.common.api.internal.TaskApiCall$Builder
-keepclassmembers class com.google.android.gms.common.api.internal.TaskApiCall$Builder {
   *** build(...);
   *** execute(...);
   *** run(...);
   *** setAutoResolveMissingFeatures(...);
   *** setFeatures(...);
   *** setMethodKey(...);
}

-keep class com.google.android.gms.common.api.internal.TaskApiCall
-keepclassmembers class com.google.android.gms.common.api.internal.TaskApiCall {
   <init>(...);
   <init>(...);
   *** builder(...);
   *** doExecute(...);
   *** shouldAutoResolveMissingFeatures(...);
   *** zaa(...);
   *** zab(...);
}

-keep class com.google.android.gms.common.api.internal.TaskApiCall
-keepclassmembers class com.google.android.gms.common.api.internal.TaskApiCall {
   *** doExecute(...);
}

-keep class com.google.android.gms.common.api.internal.UnregisterListenerMethod
-keepclassmembers class com.google.android.gms.common.api.internal.UnregisterListenerMethod {
   <init>(...);
   *** getListenerKey(...);
   *** unregisterListener(...);
}

-keep class com.google.android.gms.common.api.internal.UnregisterListenerMethod
-keepclassmembers class com.google.android.gms.common.api.internal.UnregisterListenerMethod {
   *** unregisterListener(...);
}

-keep class com.google.android.gms.common.api.internal.zaad
-keepclassmembers class com.google.android.gms.common.api.internal.zaad {
   <init>(...);
   *** zaf(...);
}

-keep class com.google.android.gms.common.api.internal.zaae
-keepclassmembers class com.google.android.gms.common.api.internal.zaae {
   *** onResume(...);
   *** onStart(...);
   *** onStop(...);
   *** zab(...);
   *** zac(...);
   *** zad(...);
}

-keep class com.google.android.gms.common.api.internal.zabq
-keepclassmembers class com.google.android.gms.common.api.internal.zabq {
   <init>(...);
   *** onConnected(...);
   *** onConnectionFailed(...);
   *** onConnectionSuspended(...);
   *** zaA(...);
   *** zaa(...);
   *** zab(...);
   *** zad(...);
   *** zaf(...);
   *** zah(...);
   *** zan(...);
   *** zao(...);
   *** zap(...);
   *** zar(...);
   *** zas(...);
   *** zat(...);
   *** zau(...);
   *** zav(...);
   *** zaw(...);
   *** zaz(...);
}

-keep class com.google.android.gms.common.api.internal.zai
-keepclassmembers class com.google.android.gms.common.api.internal.zai {
   <init>(...);
   *** zad(...);
   *** zae(...);
   *** zaf(...);
   *** zag(...);
}

-keep class com.google.android.gms.common.api.internal.zai
-keepclassmembers class com.google.android.gms.common.api.internal.zai {
   *** zad(...);
   *** zae(...);
   *** zaf(...);
   *** zag(...);
}

-keep class com.google.android.gms.common.api.internal.zal
-keepclassmembers class com.google.android.gms.common.api.internal.zal {
   <init>(...);
   *** zaa(...);
   *** zab(...);
   *** zac(...);
}

-keep class com.google.android.gms.common.api.internal.zap
-keepclassmembers class com.google.android.gms.common.api.internal.zap {
   *** onActivityResult(...);
   *** onCancel(...);
   *** onCreate(...);
   *** onSaveInstanceState(...);
   *** zab(...);
   *** zac(...);
   *** zah(...);
}

-keep class com.google.android.gms.common.api.internal.zap
-keepclassmembers class com.google.android.gms.common.api.internal.zap {
   *** zab(...);
   *** zac(...);
}

-keep class com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks
-keepclassmembers class com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks {
}

-keep class com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener
-keepclassmembers class com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener {
}

-keep class com.google.android.gms.common.api.GoogleApiClient
-keepclassmembers class com.google.android.gms.common.api.GoogleApiClient {
   <init>(...);
   *** getAllClients(...);
   *** getContext(...);
   *** isConnected(...);
   *** isConnecting(...);
   *** getLooper(...);
   *** blockingConnect(...);
   *** blockingConnect(...);
   *** clearDefaultAccountAndReconnect(...);
   *** connect(...);
   *** connect(...);
   *** disconnect(...);
   *** dump(...);
   *** dumpAll(...);
   *** enqueue(...);
   *** execute(...);
   *** getClient(...);
   *** getConnectionResult(...);
   *** hasApi(...);
   *** hasConnectedApi(...);
   *** isConnectionCallbacksRegistered(...);
   *** isConnectionFailedListenerRegistered(...);
   *** maybeSignIn(...);
   *** maybeSignOut(...);
   *** reconnect(...);
   *** registerConnectionCallbacks(...);
   *** registerConnectionFailedListener(...);
   *** registerListener(...);
   *** stopAutoManage(...);
   *** unregisterConnectionCallbacks(...);
   *** unregisterConnectionFailedListener(...);
}

-keep class com.google.android.gms.common.api.Api$AbstractClientBuilder
-keepclassmembers class com.google.android.gms.common.api.Api$AbstractClientBuilder {
   <init>(...);
}

-keep class com.google.android.gms.common.api.Api$AbstractClientBuilder
-keepclassmembers class com.google.android.gms.common.api.Api$AbstractClientBuilder {
}

-keep class com.google.android.gms.common.api.Api$AnyClient
-keepclassmembers class com.google.android.gms.common.api.Api$AnyClient {
}

-keep class com.google.android.gms.common.api.Api$AnyClientKey
-keepclassmembers class com.google.android.gms.common.api.Api$AnyClientKey {
   <init>(...);
}

-keep class com.google.android.gms.common.api.Api$BaseClientBuilder
-keepclassmembers class com.google.android.gms.common.api.Api$BaseClientBuilder {
   <init>(...);
   *** getPriority(...);
   *** getImpliedScopes(...);
}

-keep class com.google.android.gms.common.api.Api$BaseClientBuilder
-keepclassmembers class com.google.android.gms.common.api.Api$BaseClientBuilder {
}

-keep class com.google.android.gms.common.api.Api$Client
-keepclassmembers class com.google.android.gms.common.api.Api$Client {
}

-keep class com.google.android.gms.common.api.Api$ClientKey
-keepclassmembers class com.google.android.gms.common.api.Api$ClientKey {
   <init>(...);
}

-keep class com.google.android.gms.common.api.Api
-keepclassmembers class com.google.android.gms.common.api.Api {
   <init>(...);
   *** zaa(...);
   *** zab(...);
   *** zac(...);
   *** zad(...);
}

-keep class com.google.android.gms.common.api.GoogleApi$Settings
-keepclassmembers class com.google.android.gms.common.api.GoogleApi$Settings {
}

-keep class com.google.android.gms.common.api.GoogleApi
-keepclassmembers class com.google.android.gms.common.api.GoogleApi {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getApiKey(...);
   *** getApiOptions(...);
   *** getApplicationContext(...);
   *** getContextAttributionTag(...);
   *** getContextFeatureId(...);
   *** getLooper(...);
   *** asGoogleApiClient(...);
   *** disconnectService(...);
   *** doBestEffortWrite(...);
   *** doBestEffortWrite(...);
   *** doRead(...);
   *** doRead(...);
   *** doRegisterEventListener(...);
   *** doRegisterEventListener(...);
   *** doUnregisterEventListener(...);
   *** doUnregisterEventListener(...);
   *** doWrite(...);
   *** doWrite(...);
   *** registerListener(...);
   *** zaa(...);
   *** zab(...);
}

-keep class com.google.android.gms.common.api.GoogleApi
-keepclassmembers class com.google.android.gms.common.api.GoogleApi {
}

-keep class com.google.android.gms.common.api.GoogleApiClient
-keepclassmembers class com.google.android.gms.common.api.GoogleApiClient {
   *** isConnected(...);
   *** isConnecting(...);
   *** blockingConnect(...);
   *** blockingConnect(...);
   *** clearDefaultAccountAndReconnect(...);
   *** connect(...);
   *** disconnect(...);
   *** dump(...);
   *** getConnectionResult(...);
   *** hasConnectedApi(...);
   *** isConnectionCallbacksRegistered(...);
   *** isConnectionFailedListenerRegistered(...);
   *** reconnect(...);
   *** registerConnectionCallbacks(...);
   *** registerConnectionFailedListener(...);
   *** stopAutoManage(...);
   *** unregisterConnectionCallbacks(...);
   *** unregisterConnectionFailedListener(...);
}

-keep class com.google.android.gms.common.api.HasApiKey
-keepclassmembers class com.google.android.gms.common.api.HasApiKey {
}

-keep class com.google.android.gms.common.api.PendingResult$StatusListener
-keepclassmembers class com.google.android.gms.common.api.PendingResult$StatusListener {
}

-keep class mono.com.google.android.gms.common.api.PendingResult_StatusListenerImplementor
-keepclassmembers class mono.com.google.android.gms.common.api.PendingResult_StatusListenerImplementor {
}

-keep class com.google.android.gms.common.api.PendingResult
-keepclassmembers class com.google.android.gms.common.api.PendingResult {
   <init>(...);
   *** isCanceled(...);
   *** addStatusListener(...);
   *** await(...);
   *** await(...);
   *** cancel(...);
   *** setResultCallback(...);
   *** setResultCallback(...);
   *** then(...);
}

-keep class com.google.android.gms.common.api.PendingResult
-keepclassmembers class com.google.android.gms.common.api.PendingResult {
   *** isCanceled(...);
   *** await(...);
   *** await(...);
   *** cancel(...);
   *** setResultCallback(...);
   *** setResultCallback(...);
}

-keep class com.google.android.gms.common.api.ResultTransform
-keepclassmembers class com.google.android.gms.common.api.ResultTransform {
   <init>(...);
   *** createFailedResult(...);
   *** onFailure(...);
   *** onSuccess(...);
}

-keep class com.google.android.gms.common.api.ResultTransform
-keepclassmembers class com.google.android.gms.common.api.ResultTransform {
   *** onSuccess(...);
}

-keep class com.google.android.gms.common.api.TransformedResult
-keepclassmembers class com.google.android.gms.common.api.TransformedResult {
   <init>(...);
   *** andFinally(...);
   *** then(...);
}

-keep class com.google.android.gms.common.api.TransformedResult
-keepclassmembers class com.google.android.gms.common.api.TransformedResult {
   *** andFinally(...);
   *** then(...);
}

# ACW for Xamarin.GooglePlayServices.Basement
-keep class com.google.android.gms.common.ConnectionResult
-keepclassmembers class com.google.android.gms.common.ConnectionResult {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getErrorCode(...);
   *** getErrorMessage(...);
   *** hasResolution(...);
   *** isSuccess(...);
   *** getResolution(...);
   *** startResolutionForResult(...);
   *** writeToParcel(...);
}

-keep class com.google.android.gms.common.Feature
-keepclassmembers class com.google.android.gms.common.Feature {
   <init>(...);
   <init>(...);
   *** getName(...);
   *** getVersion(...);
   *** equals(...);
   *** hashCode(...);
   *** toString(...);
   *** writeToParcel(...);
}

-keep class com.google.android.gms.common.util.BiConsumer
-keepclassmembers class com.google.android.gms.common.util.BiConsumer {
}

-keep class com.google.android.gms.common.internal.IAccountAccessor
-keepclassmembers class com.google.android.gms.common.internal.IAccountAccessor {
}

-keep class com.google.android.gms.common.internal.ICancelToken
-keepclassmembers class com.google.android.gms.common.internal.ICancelToken {
}

-keep class com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable
-keepclassmembers class com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable {
   <init>(...);
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable
-keepclassmembers class com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable {
   *** writeToParcel(...);
}

-keep class com.google.android.gms.common.internal.safeparcel.SafeParcelable
-keepclassmembers class com.google.android.gms.common.internal.safeparcel.SafeParcelable {
}

-keep class com.google.android.gms.common.api.Result
-keepclassmembers class com.google.android.gms.common.api.Result {
}

-keep class com.google.android.gms.common.api.ResultCallback
-keepclassmembers class com.google.android.gms.common.api.ResultCallback {
}

-keep class com.google.android.gms.common.api.Response
-keepclassmembers class com.google.android.gms.common.api.Response {
   <init>(...);
   <init>(...);
   *** getResult(...);
   *** setResult(...);
}

-keep class com.google.android.gms.common.api.ResultCallbacks
-keepclassmembers class com.google.android.gms.common.api.ResultCallbacks {
   <init>(...);
   *** onFailure(...);
   *** onResult(...);
   *** onSuccess(...);
}

-keep class com.google.android.gms.common.api.ResultCallbacks
-keepclassmembers class com.google.android.gms.common.api.ResultCallbacks {
   *** onFailure(...);
   *** onSuccess(...);
}

-keep class com.google.android.gms.common.api.Scope
-keepclassmembers class com.google.android.gms.common.api.Scope {
   <init>(...);
   *** getScopeUri(...);
   *** writeToParcel(...);
}

-keep class com.google.android.gms.common.api.Status
-keepclassmembers class com.google.android.gms.common.api.Status {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getConnectionResult(...);
   *** hasResolution(...);
   *** isCanceled(...);
   *** isInterrupted(...);
   *** isSuccess(...);
   *** getResolution(...);
   *** getStatus(...);
   *** getStatusCode(...);
   *** getStatusMessage(...);
   *** startResolutionForResult(...);
   *** writeToParcel(...);
}

-keep class com.google.android.gms.common.api.internal.LifecycleFragment
-keepclassmembers class com.google.android.gms.common.api.internal.LifecycleFragment {
}

-keep class com.google.android.gms.common.api.internal.StatusExceptionMapper
-keepclassmembers class com.google.android.gms.common.api.internal.StatusExceptionMapper {
}

-keep class com.google.android.gms.common.api.internal.LifecycleActivity
-keepclassmembers class com.google.android.gms.common.api.internal.LifecycleActivity {
   <init>(...);
   <init>(...);
}

-keep class com.google.android.gms.common.api.internal.LifecycleCallback
-keepclassmembers class com.google.android.gms.common.api.internal.LifecycleCallback {
   <init>(...);
   *** getActivity(...);
   *** dump(...);
   *** getFragment(...);
   *** getFragment(...);
   *** getFragment(...);
   *** onActivityResult(...);
   *** onCreate(...);
   *** onDestroy(...);
   *** onResume(...);
   *** onSaveInstanceState(...);
   *** onStart(...);
   *** onStop(...);
}

# ACW for Xamarin.GooglePlayServices.Location
-keep class com.google.android.gms.location.LocationServices
-keepclassmembers class com.google.android.gms.location.LocationServices {
   *** getFusedLocationProviderClient(...);
   *** getFusedLocationProviderClient(...);
   *** getGeofencingClient(...);
   *** getGeofencingClient(...);
   *** getSettingsClient(...);
   *** getSettingsClient(...);
}

-keep class com.google.android.gms.location.FusedLocationProviderClient
-keepclassmembers class com.google.android.gms.location.FusedLocationProviderClient {
   <init>(...);
   <init>(...);
   *** flushLocations(...);
   *** getCurrentLocation(...);
   *** getCurrentLocation(...);
   *** getLastLocation(...);
   *** getLastLocation(...);
   *** getLocationAvailability(...);
   *** removeLocationUpdates(...);
   *** removeLocationUpdates(...);
   *** requestLocationUpdates(...);
   *** requestLocationUpdates(...);
   *** requestLocationUpdates(...);
   *** setMockLocation(...);
   *** setMockMode(...);
}

-keep class com.google.android.gms.location.GeofencingClient
-keepclassmembers class com.google.android.gms.location.GeofencingClient {
   <init>(...);
   <init>(...);
   *** addGeofences(...);
   *** removeGeofences(...);
   *** removeGeofences(...);
}

-keep class com.google.android.gms.location.SettingsClient
-keepclassmembers class com.google.android.gms.location.SettingsClient {
   <init>(...);
   <init>(...);
   *** checkLocationSettings(...);
}

-keep class com.google.android.gms.location.CurrentLocationRequest
-keepclassmembers class com.google.android.gms.location.CurrentLocationRequest {
   *** getDurationMillis(...);
   *** getGranularity(...);
   *** getMaxUpdateAgeMillis(...);
   *** getPriority(...);
   *** writeToParcel(...);
}

-keep class com.google.android.gms.location.GeofencingRequest$Builder
-keepclassmembers class com.google.android.gms.location.GeofencingRequest$Builder {
   <init>(...);
   *** addGeofence(...);
   *** addGeofences(...);
   *** build(...);
   *** setInitialTrigger(...);
}

-keep class com.google.android.gms.location.GeofencingRequest
-keepclassmembers class com.google.android.gms.location.GeofencingRequest {
   *** getGeofences(...);
   *** getInitialTrigger(...);
   *** writeToParcel(...);
}

-keep class com.google.android.gms.location.FusedLocationProviderApi
-keepclassmembers class com.google.android.gms.location.FusedLocationProviderApi {
}

-keep class com.google.android.gms.location.Geofence$Builder
-keepclassmembers class com.google.android.gms.location.Geofence$Builder {
   <init>(...);
   *** build(...);
   *** setCircularRegion(...);
   *** setExpirationDuration(...);
   *** setLoiteringDelay(...);
   *** setNotificationResponsiveness(...);
   *** setRequestId(...);
   *** setTransitionTypes(...);
}

-keep class com.google.android.gms.location.Geofence
-keepclassmembers class com.google.android.gms.location.Geofence {
}

-keep class com.google.android.gms.location.GeofencingApi
-keepclassmembers class com.google.android.gms.location.GeofencingApi {
}

-keep class com.google.android.gms.location.LocationListener
-keepclassmembers class com.google.android.gms.location.LocationListener {
}

-keep class com.google.android.gms.location.SettingsApi
-keepclassmembers class com.google.android.gms.location.SettingsApi {
}

-keep class com.google.android.gms.location.LastLocationRequest
-keepclassmembers class com.google.android.gms.location.LastLocationRequest {
   *** getGranularity(...);
   *** getMaxUpdateAgeMillis(...);
   *** writeToParcel(...);
}

-keep class com.google.android.gms.location.LocationAvailability
-keepclassmembers class com.google.android.gms.location.LocationAvailability {
   *** isLocationAvailable(...);
   *** extractLocationAvailability(...);
   *** hasLocationAvailability(...);
   *** writeToParcel(...);
}

-keep class com.google.android.gms.location.LocationCallback
-keepclassmembers class com.google.android.gms.location.LocationCallback {
   <init>(...);
   *** onLocationAvailability(...);
   *** onLocationResult(...);
}

-keep class com.google.android.gms.location.LocationCallback
-keepclassmembers class com.google.android.gms.location.LocationCallback {
}

-keep class com.google.android.gms.location.LocationRequest
-keepclassmembers class com.google.android.gms.location.LocationRequest {
   <init>(...);
   *** getExpirationTime(...);
   *** getFastestInterval(...);
   *** getInterval(...);
   *** isFastestIntervalExplicitlySet(...);
   *** isWaitForAccurateLocation(...);
   *** getMaxWaitTime(...);
   *** getNumUpdates(...);
   *** getPriority(...);
   *** getSmallestDisplacement(...);
   *** create(...);
   *** setExpirationDuration(...);
   *** setExpirationTime(...);
   *** setFastestInterval(...);
   *** setInterval(...);
   *** setMaxWaitTime(...);
   *** setNumUpdates(...);
   *** setPriority(...);
   *** setSmallestDisplacement(...);
   *** setWaitForAccurateLocation(...);
   *** writeToParcel(...);
}

-keep class com.google.android.gms.location.LocationResult
-keepclassmembers class com.google.android.gms.location.LocationResult {
   *** getLastLocation(...);
   *** getLocations(...);
   *** create(...);
   *** extractResult(...);
   *** hasResult(...);
   *** writeToParcel(...);
}

-keep class com.google.android.gms.location.LocationSettingsRequest
-keepclassmembers class com.google.android.gms.location.LocationSettingsRequest {
   *** writeToParcel(...);
}

-keep class com.google.android.gms.location.LocationSettingsResponse
-keepclassmembers class com.google.android.gms.location.LocationSettingsResponse {
   <init>(...);
   <init>(...);
   *** getLocationSettingsStates(...);
}

-keep class com.google.android.gms.location.LocationSettingsResult
-keepclassmembers class com.google.android.gms.location.LocationSettingsResult {
   <init>(...);
   *** getLocationSettingsStates(...);
   *** getStatus(...);
   *** writeToParcel(...);
}

-keep class com.google.android.gms.location.LocationSettingsStates
-keepclassmembers class com.google.android.gms.location.LocationSettingsStates {
   <init>(...);
   *** isBlePresent(...);
   *** isBleUsable(...);
   *** isGpsPresent(...);
   *** isGpsUsable(...);
   *** isLocationPresent(...);
   *** isLocationUsable(...);
   *** isNetworkLocationPresent(...);
   *** isNetworkLocationUsable(...);
   *** fromIntent(...);
   *** writeToParcel(...);
}

# ACW for Xamarin.GooglePlayServices.Tasks
-keep class com.google.android.gms.tasks.Task
-keepclassmembers class com.google.android.gms.tasks.Task {
   <init>(...);
   *** getException(...);
   *** isCanceled(...);
   *** isComplete(...);
   *** isSuccessful(...);
   *** getResult(...);
   *** addOnCanceledListener(...);
   *** addOnCanceledListener(...);
   *** addOnCanceledListener(...);
   *** addOnCompleteListener(...);
   *** addOnCompleteListener(...);
   *** addOnCompleteListener(...);
   *** addOnFailureListener(...);
   *** addOnFailureListener(...);
   *** addOnFailureListener(...);
   *** addOnSuccessListener(...);
   *** addOnSuccessListener(...);
   *** addOnSuccessListener(...);
   *** continueWith(...);
   *** continueWith(...);
   *** continueWithTask(...);
   *** continueWithTask(...);
   *** getResult(...);
   *** onSuccessTask(...);
   *** onSuccessTask(...);
}

-keep class com.google.android.gms.tasks.TaskCompletionSource
-keepclassmembers class com.google.android.gms.tasks.TaskCompletionSource {
   <init>(...);
   <init>(...);
   *** getTask(...);
   *** setException(...);
   *** setResult(...);
   *** trySetException(...);
   *** trySetResult(...);
}

-keep class com.google.android.gms.tasks.CancellationToken
-keepclassmembers class com.google.android.gms.tasks.CancellationToken {
   <init>(...);
   *** isCancellationRequested(...);
   *** onCanceledRequested(...);
}

-keep class com.google.android.gms.tasks.CancellationToken
-keepclassmembers class com.google.android.gms.tasks.CancellationToken {
   *** isCancellationRequested(...);
   *** onCanceledRequested(...);
}

-keep class com.google.android.gms.tasks.Continuation
-keepclassmembers class com.google.android.gms.tasks.Continuation {
}

-keep class com.google.android.gms.tasks.OnCanceledListener
-keepclassmembers class com.google.android.gms.tasks.OnCanceledListener {
}

-keep class com.google.android.gms.tasks.OnCompleteListener
-keepclassmembers class com.google.android.gms.tasks.OnCompleteListener {
}

-keep class com.google.android.gms.tasks.OnFailureListener
-keepclassmembers class com.google.android.gms.tasks.OnFailureListener {
}

-keep class com.google.android.gms.tasks.OnSuccessListener
-keepclassmembers class com.google.android.gms.tasks.OnSuccessListener {
}

-keep class com.google.android.gms.tasks.OnTokenCanceledListener
-keepclassmembers class com.google.android.gms.tasks.OnTokenCanceledListener {
}

-keep class com.google.android.gms.tasks.SuccessContinuation
-keepclassmembers class com.google.android.gms.tasks.SuccessContinuation {
}

-keep class com.google.android.gms.tasks.Task
-keepclassmembers class com.google.android.gms.tasks.Task {
   *** getException(...);
   *** isCanceled(...);
   *** isComplete(...);
   *** isSuccessful(...);
   *** getResult(...);
   *** addOnFailureListener(...);
   *** addOnFailureListener(...);
   *** addOnFailureListener(...);
   *** addOnSuccessListener(...);
   *** addOnSuccessListener(...);
   *** addOnSuccessListener(...);
   *** getResult(...);
}

# ACW for Xamarin.Jetbrains.Annotations
-keep class org.jetbrains.annotations.ApiStatus$AvailableSince
-keepclassmembers class org.jetbrains.annotations.ApiStatus$AvailableSince {
}

-keep class org.jetbrains.annotations.ApiStatus$Experimental
-keepclassmembers class org.jetbrains.annotations.ApiStatus$Experimental {
}

-keep class org.jetbrains.annotations.ApiStatus$Internal
-keepclassmembers class org.jetbrains.annotations.ApiStatus$Internal {
}

-keep class org.jetbrains.annotations.ApiStatus$NonExtendable
-keepclassmembers class org.jetbrains.annotations.ApiStatus$NonExtendable {
}

-keep class org.jetbrains.annotations.ApiStatus$OverrideOnly
-keepclassmembers class org.jetbrains.annotations.ApiStatus$OverrideOnly {
}

-keep class org.jetbrains.annotations.ApiStatus$ScheduledForRemoval
-keepclassmembers class org.jetbrains.annotations.ApiStatus$ScheduledForRemoval {
}

-keep class org.jetbrains.annotations.ApiStatus
-keepclassmembers class org.jetbrains.annotations.ApiStatus {
}

-keep class org.jetbrains.annotations.Async$Execute
-keepclassmembers class org.jetbrains.annotations.Async$Execute {
}

-keep class org.jetbrains.annotations.Async$Schedule
-keepclassmembers class org.jetbrains.annotations.Async$Schedule {
}

-keep class org.jetbrains.annotations.Async
-keepclassmembers class org.jetbrains.annotations.Async {
}

-keep class org.jetbrains.annotations.Debug$Renderer
-keepclassmembers class org.jetbrains.annotations.Debug$Renderer {
}

-keep class org.jetbrains.annotations.Debug
-keepclassmembers class org.jetbrains.annotations.Debug {
}

-keep class org.jetbrains.annotations.Blocking
-keepclassmembers class org.jetbrains.annotations.Blocking {
}

-keep class org.jetbrains.annotations.BlockingExecutor
-keepclassmembers class org.jetbrains.annotations.BlockingExecutor {
}

-keep class org.jetbrains.annotations.Contract
-keepclassmembers class org.jetbrains.annotations.Contract {
}

-keep class org.jetbrains.annotations.MustBeInvokedByOverriders
-keepclassmembers class org.jetbrains.annotations.MustBeInvokedByOverriders {
}

-keep class org.jetbrains.annotations.Nls$Capitalization
-keepclassmembers class org.jetbrains.annotations.Nls$Capitalization {
   *** valueOf(...);
   *** values(...);
}

-keep class org.jetbrains.annotations.Nls
-keepclassmembers class org.jetbrains.annotations.Nls {
}

-keep class org.jetbrains.annotations.NonBlocking
-keepclassmembers class org.jetbrains.annotations.NonBlocking {
}

-keep class org.jetbrains.annotations.NonBlockingExecutor
-keepclassmembers class org.jetbrains.annotations.NonBlockingExecutor {
}

-keep class org.jetbrains.annotations.NonNls
-keepclassmembers class org.jetbrains.annotations.NonNls {
}

-keep class org.jetbrains.annotations.NotNull
-keepclassmembers class org.jetbrains.annotations.NotNull {
}

-keep class org.jetbrains.annotations.Nullable
-keepclassmembers class org.jetbrains.annotations.Nullable {
}

-keep class org.jetbrains.annotations.PropertyKey
-keepclassmembers class org.jetbrains.annotations.PropertyKey {
}

-keep class org.jetbrains.annotations.Range
-keepclassmembers class org.jetbrains.annotations.Range {
}

-keep class org.jetbrains.annotations.TestOnly
-keepclassmembers class org.jetbrains.annotations.TestOnly {
}

-keep class org.jetbrains.annotations.UnknownNullability
-keepclassmembers class org.jetbrains.annotations.UnknownNullability {
}

-keep class org.jetbrains.annotations.Unmodifiable
-keepclassmembers class org.jetbrains.annotations.Unmodifiable {
}

-keep class org.jetbrains.annotations.UnmodifiableView
-keepclassmembers class org.jetbrains.annotations.UnmodifiableView {
}

-keep class org.jetbrains.annotations.VisibleForTesting
-keepclassmembers class org.jetbrains.annotations.VisibleForTesting {
}

-keep class org.intellij.lang.annotations.Flow
-keepclassmembers class org.intellij.lang.annotations.Flow {
}

-keep class org.intellij.lang.annotations.Flow
-keepclassmembers class org.intellij.lang.annotations.Flow {
}

-keep class org.intellij.lang.annotations.Flow
-keepclassmembers class org.intellij.lang.annotations.Flow {
}

-keep class org.intellij.lang.annotations.Identifier
-keepclassmembers class org.intellij.lang.annotations.Identifier {
}

-keep class org.intellij.lang.annotations.Language
-keepclassmembers class org.intellij.lang.annotations.Language {
}

-keep class org.intellij.lang.annotations.MagicConstant
-keepclassmembers class org.intellij.lang.annotations.MagicConstant {
}

-keep class org.intellij.lang.annotations.Pattern
-keepclassmembers class org.intellij.lang.annotations.Pattern {
}

-keep class org.intellij.lang.annotations.PrintFormat
-keepclassmembers class org.intellij.lang.annotations.PrintFormat {
}

-keep class org.intellij.lang.annotations.RegExp
-keepclassmembers class org.intellij.lang.annotations.RegExp {
}

-keep class org.intellij.lang.annotations.Subst
-keepclassmembers class org.intellij.lang.annotations.Subst {
}

-keep class org.intellij.lang.annotations.JdkConstants$AdjustableOrientation
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$AdjustableOrientation {
}

-keep class org.intellij.lang.annotations.JdkConstants$BoxLayoutAxis
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$BoxLayoutAxis {
}

-keep class org.intellij.lang.annotations.JdkConstants$CalendarMonth
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$CalendarMonth {
}

-keep class org.intellij.lang.annotations.JdkConstants$CursorType
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$CursorType {
}

-keep class org.intellij.lang.annotations.JdkConstants$FlowLayoutAlignment
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$FlowLayoutAlignment {
}

-keep class org.intellij.lang.annotations.JdkConstants$FontStyle
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$FontStyle {
}

-keep class org.intellij.lang.annotations.JdkConstants$HorizontalAlignment
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$HorizontalAlignment {
}

-keep class org.intellij.lang.annotations.JdkConstants$HorizontalScrollBarPolicy
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$HorizontalScrollBarPolicy {
}

-keep class org.intellij.lang.annotations.JdkConstants$InputEventMask
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$InputEventMask {
}

-keep class org.intellij.lang.annotations.JdkConstants$ListSelectionMode
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$ListSelectionMode {
}

-keep class org.intellij.lang.annotations.JdkConstants$PatternFlags
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$PatternFlags {
}

-keep class org.intellij.lang.annotations.JdkConstants$TabLayoutPolicy
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$TabLayoutPolicy {
}

-keep class org.intellij.lang.annotations.JdkConstants$TabPlacement
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$TabPlacement {
}

-keep class org.intellij.lang.annotations.JdkConstants$TitledBorderJustification
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$TitledBorderJustification {
}

-keep class org.intellij.lang.annotations.JdkConstants$TitledBorderTitlePosition
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$TitledBorderTitlePosition {
}

-keep class org.intellij.lang.annotations.JdkConstants$TreeSelectionMode
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$TreeSelectionMode {
}

-keep class org.intellij.lang.annotations.JdkConstants$VerticalScrollBarPolicy
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$VerticalScrollBarPolicy {
}

-keep class org.intellij.lang.annotations.JdkConstants
-keepclassmembers class org.intellij.lang.annotations.JdkConstants {
}

# ACW for Xamarin.Kotlin.StdLib
-keep class kotlin.ArrayIntrinsicsKt
-keepclassmembers class kotlin.ArrayIntrinsicsKt {
}

-keep class kotlin.CharCodeJVMKt
-keepclassmembers class kotlin.CharCodeJVMKt {
}

-keep class kotlin.CharCodeKt
-keepclassmembers class kotlin.CharCodeKt {
}

-keep class kotlin.CompareToKt
-keepclassmembers class kotlin.CompareToKt {
}

-keep class kotlin.DeepRecursiveFunction
-keepclassmembers class kotlin.DeepRecursiveFunction {
   <init>(...);
}

-keep class kotlin.DeepRecursiveKt
-keepclassmembers class kotlin.DeepRecursiveKt {
   *** invoke(...);
}

-keep class kotlin.DeepRecursiveScope
-keepclassmembers class kotlin.DeepRecursiveScope {
   <init>(...);
   *** callRecursive(...);
   *** callRecursive(...);
   *** invoke(...);
}

-keep class kotlin.DeepRecursiveScope
-keepclassmembers class kotlin.DeepRecursiveScope {
   *** callRecursive(...);
   *** callRecursive(...);
}

-keep class kotlin.DeprecationLevel
-keepclassmembers class kotlin.DeprecationLevel {
   *** valueOf(...);
   *** values(...);
}

-keep class kotlin.ExceptionsKt
-keepclassmembers class kotlin.ExceptionsKt {
   *** addSuppressed(...);
   *** getStackTrace(...);
   *** getSuppressedExceptions(...);
   *** stackTraceToString(...);
}

-keep class kotlin.HashCodeKt
-keepclassmembers class kotlin.HashCodeKt {
}

-keep class kotlin.BuilderInference
-keepclassmembers class kotlin.BuilderInference {
}

-keep class kotlin.ContextFunctionTypeParams
-keepclassmembers class kotlin.ContextFunctionTypeParams {
}

-keep class kotlin.Deprecated
-keepclassmembers class kotlin.Deprecated {
}

-keep class kotlin.DeprecatedSinceKotlin
-keepclassmembers class kotlin.DeprecatedSinceKotlin {
}

-keep class kotlin.DslMarker
-keepclassmembers class kotlin.DslMarker {
}

-keep class kotlin.Experimental$Level
-keepclassmembers class kotlin.Experimental$Level {
   *** valueOf(...);
   *** values(...);
}

-keep class kotlin.Experimental
-keepclassmembers class kotlin.Experimental {
}

-keep class kotlin.ExperimentalMultiplatform
-keepclassmembers class kotlin.ExperimentalMultiplatform {
}

-keep class kotlin.ExperimentalStdlibApi
-keepclassmembers class kotlin.ExperimentalStdlibApi {
}

-keep class kotlin.ExperimentalUnsignedTypes
-keepclassmembers class kotlin.ExperimentalUnsignedTypes {
}

-keep class kotlin.ExtensionFunctionType
-keepclassmembers class kotlin.ExtensionFunctionType {
}

-keep class kotlin.Function
-keepclassmembers class kotlin.Function {
}

-keep class kotlin.Lazy
-keepclassmembers class kotlin.Lazy {
}

-keep class kotlin.Metadata$DefaultImpls
-keepclassmembers class kotlin.Metadata$DefaultImpls {
}

-keep class kotlin.Metadata
-keepclassmembers class kotlin.Metadata {
}

-keep class kotlin.OptIn
-keepclassmembers class kotlin.OptIn {
}

-keep class kotlin.OptionalExpectation
-keepclassmembers class kotlin.OptionalExpectation {
}

-keep class kotlin.OverloadResolutionByLambdaReturnType
-keepclassmembers class kotlin.OverloadResolutionByLambdaReturnType {
}

-keep class kotlin.ParameterName
-keepclassmembers class kotlin.ParameterName {
}

-keep class kotlin.PublishedApi
-keepclassmembers class kotlin.PublishedApi {
}

-keep class kotlin.ReplaceWith
-keepclassmembers class kotlin.ReplaceWith {
}

-keep class kotlin.RequiresOptIn$Level
-keepclassmembers class kotlin.RequiresOptIn$Level {
   *** valueOf(...);
   *** values(...);
}

-keep class kotlin.RequiresOptIn
-keepclassmembers class kotlin.RequiresOptIn {
}

-keep class kotlin.SinceKotlin
-keepclassmembers class kotlin.SinceKotlin {
}

-keep class kotlin.Suppress
-keepclassmembers class kotlin.Suppress {
}

-keep class kotlin.UnsafeVariance
-keepclassmembers class kotlin.UnsafeVariance {
}

-keep class kotlin.UseExperimental
-keepclassmembers class kotlin.UseExperimental {
}

-keep class kotlin.KotlinNullPointerException
-keepclassmembers class kotlin.KotlinNullPointerException {
   <init>(...);
   <init>(...);
}

-keep class kotlin.KotlinVersion
-keepclassmembers class kotlin.KotlinVersion {
   <init>(...);
   <init>(...);
   *** getMajor(...);
   *** getMinor(...);
   *** getPatch(...);
   *** compareTo(...);
   *** isAtLeast(...);
   *** isAtLeast(...);
}

-keep class kotlin.LateinitKt
-keepclassmembers class kotlin.LateinitKt {
}

-keep class kotlin.LazyKt
-keepclassmembers class kotlin.LazyKt {
   *** lazyOf(...);
   *** lazy(...);
   *** lazy(...);
   *** lazy(...);
}

-keep class kotlin.LazyThreadSafetyMode
-keepclassmembers class kotlin.LazyThreadSafetyMode {
   *** valueOf(...);
   *** values(...);
}

-keep class kotlin.NotImplementedError
-keepclassmembers class kotlin.NotImplementedError {
   <init>(...);
   <init>(...);
}

-keep class kotlin.NoWhenBranchMatchedException
-keepclassmembers class kotlin.NoWhenBranchMatchedException {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class kotlin.NumbersKt
-keepclassmembers class kotlin.NumbersKt {
   *** rotateLeft(...);
   *** rotateLeft(...);
   *** rotateRight(...);
   *** rotateRight(...);
}

-keep class kotlin.Pair
-keepclassmembers class kotlin.Pair {
   <init>(...);
   *** getFirst(...);
   *** getSecond(...);
   *** component1(...);
   *** component2(...);
   *** copy(...);
}

-keep class kotlin.PreconditionsKt
-keepclassmembers class kotlin.PreconditionsKt {
}

-keep class kotlin.PropertyReferenceDelegatesKt
-keepclassmembers class kotlin.PropertyReferenceDelegatesKt {
}

-keep class kotlin.Result
-keepclassmembers class kotlin.Result {
}

-keep class kotlin.ResultKt
-keepclassmembers class kotlin.ResultKt {
}

-keep class kotlin.StandardKt
-keepclassmembers class kotlin.StandardKt {
}

-keep class kotlin.SuspendKt
-keepclassmembers class kotlin.SuspendKt {
}

-keep class kotlin.ThrowsKt
-keepclassmembers class kotlin.ThrowsKt {
}

-keep class kotlin.Triple
-keepclassmembers class kotlin.Triple {
   <init>(...);
   *** getFirst(...);
   *** getSecond(...);
   *** getThird(...);
   *** component1(...);
   *** component2(...);
   *** component3(...);
   *** copy(...);
}

-keep class kotlin.TuplesKt
-keepclassmembers class kotlin.TuplesKt {
   *** to(...);
   *** toList(...);
   *** toList(...);
}

-keep class kotlin.TypeAliasesKt
-keepclassmembers class kotlin.TypeAliasesKt {
}

-keep class kotlin.TypeCastException
-keepclassmembers class kotlin.TypeCastException {
   <init>(...);
   <init>(...);
}

-keep class kotlin.UByte
-keepclassmembers class kotlin.UByte {
   *** compareTo(...);
}

-keep class kotlin.UByteArray
-keepclassmembers class kotlin.UByteArray {
   *** isEmpty(...);
   *** getSize(...);
   *** add-7apg3OU(...);
   *** addAll(...);
   *** clear(...);
   *** contains(...);
   *** contains-7apg3OU(...);
   *** contains-7apg3OU(...);
   *** containsAll(...);
   *** get-w2LRezQ(...);
   *** iterator(...);
   *** remove(...);
   *** removeAll(...);
   *** retainAll(...);
   *** set-VurrAj0(...);
   *** toArray(...);
   *** toArray(...);
   *** size(...);
}

-keep class kotlin.UByteArrayKt
-keepclassmembers class kotlin.UByteArrayKt {
}

-keep class kotlin.UByteKt
-keepclassmembers class kotlin.UByteKt {
}

-keep class kotlin.UInt
-keepclassmembers class kotlin.UInt {
   *** compareTo(...);
}

-keep class kotlin.UIntArray
-keepclassmembers class kotlin.UIntArray {
   *** isEmpty(...);
   *** getSize(...);
   *** add-WZ4Q5Ns(...);
   *** addAll(...);
   *** clear(...);
   *** contains(...);
   *** contains-WZ4Q5Ns(...);
   *** contains-WZ4Q5Ns(...);
   *** containsAll(...);
   *** get-pVg5ArA(...);
   *** iterator(...);
   *** remove(...);
   *** removeAll(...);
   *** retainAll(...);
   *** set-VXSXFK8(...);
   *** toArray(...);
   *** toArray(...);
   *** size(...);
}

-keep class kotlin.UIntArrayKt
-keepclassmembers class kotlin.UIntArrayKt {
}

-keep class kotlin.UIntKt
-keepclassmembers class kotlin.UIntKt {
}

-keep class kotlin.ULong
-keepclassmembers class kotlin.ULong {
   *** compareTo(...);
}

-keep class kotlin.ULongArray
-keepclassmembers class kotlin.ULongArray {
   *** isEmpty(...);
   *** getSize(...);
   *** add-VKZWuLQ(...);
   *** addAll(...);
   *** clear(...);
   *** contains(...);
   *** contains-VKZWuLQ(...);
   *** contains-VKZWuLQ(...);
   *** containsAll(...);
   *** get-s-VKNKU(...);
   *** iterator(...);
   *** remove(...);
   *** removeAll(...);
   *** retainAll(...);
   *** set-k8EXiF4(...);
   *** toArray(...);
   *** toArray(...);
   *** size(...);
}

-keep class kotlin.ULongArrayKt
-keepclassmembers class kotlin.ULongArrayKt {
}

-keep class kotlin.ULongKt
-keepclassmembers class kotlin.ULongKt {
}

-keep class kotlin.UninitializedPropertyAccessException
-keepclassmembers class kotlin.UninitializedPropertyAccessException {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class kotlin.Unit
-keepclassmembers class kotlin.Unit {
}

-keep class kotlin.UnsignedKt
-keepclassmembers class kotlin.UnsignedKt {
}

-keep class kotlin.UNumbersKt
-keepclassmembers class kotlin.UNumbersKt {
}

-keep class kotlin.UShort
-keepclassmembers class kotlin.UShort {
   *** compareTo(...);
}

-keep class kotlin.UShortArray
-keepclassmembers class kotlin.UShortArray {
   *** isEmpty(...);
   *** getSize(...);
   *** add-xj2QHRw(...);
   *** addAll(...);
   *** clear(...);
   *** contains(...);
   *** contains-xj2QHRw(...);
   *** contains-xj2QHRw(...);
   *** containsAll(...);
   *** get-Mh2AYeg(...);
   *** iterator(...);
   *** remove(...);
   *** removeAll(...);
   *** retainAll(...);
   *** set-01HTLdE(...);
   *** toArray(...);
   *** toArray(...);
   *** size(...);
}

-keep class kotlin.UShortArrayKt
-keepclassmembers class kotlin.UShortArrayKt {
}

-keep class kotlin.UShortKt
-keepclassmembers class kotlin.UShortKt {
}

-keep class kotlin.time.AbstractDoubleTimeSource
-keepclassmembers class kotlin.time.AbstractDoubleTimeSource {
   <init>(...);
   *** getUnit(...);
   *** markNow(...);
   *** read(...);
}

-keep class kotlin.time.AbstractDoubleTimeSource
-keepclassmembers class kotlin.time.AbstractDoubleTimeSource {
   *** read(...);
}

-keep class kotlin.time.AbstractLongTimeSource
-keepclassmembers class kotlin.time.AbstractLongTimeSource {
   <init>(...);
   *** getUnit(...);
   *** markNow(...);
   *** read(...);
}

-keep class kotlin.time.AbstractLongTimeSource
-keepclassmembers class kotlin.time.AbstractLongTimeSource {
   *** read(...);
}

-keep class kotlin.time.Duration$Companion
-keepclassmembers class kotlin.time.Duration$Companion {
   <init>(...);
   *** getINFINITE-UwyO8pc(...);
   *** getZERO-UwyO8pc(...);
   *** convert(...);
   *** days-UwyO8pc(...);
   *** days-UwyO8pc(...);
   *** days-UwyO8pc(...);
   *** hours-UwyO8pc(...);
   *** hours-UwyO8pc(...);
   *** hours-UwyO8pc(...);
   *** microseconds-UwyO8pc(...);
   *** microseconds-UwyO8pc(...);
   *** microseconds-UwyO8pc(...);
   *** milliseconds-UwyO8pc(...);
   *** milliseconds-UwyO8pc(...);
   *** milliseconds-UwyO8pc(...);
   *** minutes-UwyO8pc(...);
   *** minutes-UwyO8pc(...);
   *** minutes-UwyO8pc(...);
   *** nanoseconds-UwyO8pc(...);
   *** nanoseconds-UwyO8pc(...);
   *** nanoseconds-UwyO8pc(...);
   *** parse-UwyO8pc(...);
   *** parseIsoString-UwyO8pc(...);
   *** parseIsoStringOrNull-FghU774(...);
   *** parseOrNull-FghU774(...);
   *** seconds-UwyO8pc(...);
   *** seconds-UwyO8pc(...);
   *** seconds-UwyO8pc(...);
}

-keep class kotlin.time.Duration
-keepclassmembers class kotlin.time.Duration {
   *** compareTo-LRDsOJo(...);
   *** compareTo-LRDsOJo(...);
   *** div-LRDsOJo(...);
   *** div-UwyO8pc(...);
   *** div-UwyO8pc(...);
   *** getAbsoluteValue-UwyO8pc(...);
   *** minus-LRDsOJo(...);
   *** plus-LRDsOJo(...);
   *** times-UwyO8pc(...);
   *** times-UwyO8pc(...);
   *** unaryMinus-UwyO8pc(...);
   *** compareTo(...);
}

-keep class kotlin.time.DurationJvmKt
-keepclassmembers class kotlin.time.DurationJvmKt {
}

-keep class kotlin.time.DurationKt
-keepclassmembers class kotlin.time.DurationKt {
   *** getDays(...);
   *** getDays(...);
   *** getDays(...);
   *** getHours(...);
   *** getHours(...);
   *** getHours(...);
   *** getMicroseconds(...);
   *** getMicroseconds(...);
   *** getMicroseconds(...);
   *** getMilliseconds(...);
   *** getMilliseconds(...);
   *** getMilliseconds(...);
   *** getMinutes(...);
   *** getMinutes(...);
   *** getMinutes(...);
   *** getNanoseconds(...);
   *** getNanoseconds(...);
   *** getNanoseconds(...);
   *** getSeconds(...);
   *** getSeconds(...);
   *** getSeconds(...);
   *** toDuration(...);
   *** toDuration(...);
   *** toDuration(...);
}

-keep class kotlin.time.DurationUnit
-keepclassmembers class kotlin.time.DurationUnit {
   *** valueOf(...);
   *** values(...);
}

-keep class kotlin.time.DurationUnitKt
-keepclassmembers class kotlin.time.DurationUnitKt {
   *** durationUnitByIsoChar(...);
   *** durationUnitByShortName(...);
   *** shortName(...);
   *** convertDurationUnit(...);
   *** convertDurationUnit(...);
   *** convertDurationUnitOverflow(...);
   *** toDurationUnit(...);
   *** toTimeUnit(...);
}

-keep class kotlin.time.ExperimentalTime
-keepclassmembers class kotlin.time.ExperimentalTime {
}

-keep class kotlin.time.TimeMark$DefaultImpls
-keepclassmembers class kotlin.time.TimeMark$DefaultImpls {
   *** hasNotPassedNow(...);
   *** hasPassedNow(...);
   *** minus-LRDsOJo(...);
   *** plus-LRDsOJo(...);
}

-keep class kotlin.time.TimeMark
-keepclassmembers class kotlin.time.TimeMark {
}

-keep class kotlin.time.TimeSource$Monotonic$ValueTimeMark
-keepclassmembers class kotlin.time.TimeSource$Monotonic$ValueTimeMark {
   *** hasNotPassedNow(...);
   *** hasPassedNow(...);
   *** minus-LRDsOJo(...);
   *** minus-LRDsOJo(...);
   *** plus-LRDsOJo(...);
   *** plus-LRDsOJo(...);
}

-keep class kotlin.time.TimeSource$Monotonic
-keepclassmembers class kotlin.time.TimeSource$Monotonic {
   *** markNow-z9LOYto(...);
}

-keep class kotlin.time.TimeSource
-keepclassmembers class kotlin.time.TimeSource {
}

-keep class kotlin.time.LongSaturatedMathKt
-keepclassmembers class kotlin.time.LongSaturatedMathKt {
}

-keep class kotlin.time.MeasureTimeKt
-keepclassmembers class kotlin.time.MeasureTimeKt {
   *** measureTime(...);
   *** measureTime(...);
   *** measureTime(...);
   *** measureTimedValue(...);
   *** measureTimedValue(...);
   *** measureTimedValue(...);
}

-keep class kotlin.time.MonoTimeSourceKt
-keepclassmembers class kotlin.time.MonoTimeSourceKt {
}

-keep class kotlin.time.TestTimeSource
-keepclassmembers class kotlin.time.TestTimeSource {
   <init>(...);
   *** plusAssign-LRDsOJo(...);
   *** read(...);
}

-keep class kotlin.time.TimedValue
-keepclassmembers class kotlin.time.TimedValue {
   <init>(...);
   *** getDuration-UwyO8pc(...);
   *** getValue(...);
   *** component1(...);
   *** component2-UwyO8pc(...);
   *** copy-RFiDyg4(...);
}

-keep class kotlin.time.TimeSourceKt
-keepclassmembers class kotlin.time.TimeSourceKt {
}

-keep class kotlin.text.CharCategory$Companion
-keepclassmembers class kotlin.text.CharCategory$Companion {
   <init>(...);
   *** valueOf(...);
}

-keep class kotlin.text.CharCategory
-keepclassmembers class kotlin.text.CharCategory {
   *** getCode(...);
   *** getValue(...);
   *** contains(...);
   *** valueOf(...);
   *** values(...);
}

-keep class kotlin.text.CharDirectionality$Companion
-keepclassmembers class kotlin.text.CharDirectionality$Companion {
   <init>(...);
   *** valueOf(...);
}

-keep class kotlin.text.CharDirectionality
-keepclassmembers class kotlin.text.CharDirectionality {
   *** getValue(...);
   *** valueOf(...);
   *** values(...);
}

-keep class kotlin.text.Charsets
-keepclassmembers class kotlin.text.Charsets {
   *** UTF32(...);
   *** UTF32_BE(...);
   *** UTF32_LE(...);
}

-keep class kotlin.text.CharsetsKt
-keepclassmembers class kotlin.text.CharsetsKt {
}

-keep class kotlin.text.CharsKt
-keepclassmembers class kotlin.text.CharsKt {
   *** digitToChar(...);
   *** digitToChar(...);
   *** digitToInt(...);
   *** digitToInt(...);
   *** digitToIntOrNull(...);
   *** digitToIntOrNull(...);
   *** equals(...);
   *** isSurrogate(...);
   *** titlecase(...);
   *** checkRadix(...);
   *** digitOf(...);
   *** getCategory(...);
   *** getDirectionality(...);
   *** isWhitespace(...);
   *** lowercase(...);
   *** titlecase(...);
   *** uppercase(...);
}

-keep class kotlin.text.MatchGroupCollection
-keepclassmembers class kotlin.text.MatchGroupCollection {
}

-keep class kotlin.text.MatchNamedGroupCollection
-keepclassmembers class kotlin.text.MatchNamedGroupCollection {
}

-keep class kotlin.text.MatchResult$DefaultImpls
-keepclassmembers class kotlin.text.MatchResult$DefaultImpls {
   *** getDestructured(...);
}

-keep class kotlin.text.MatchResult$Destructured
-keepclassmembers class kotlin.text.MatchResult$Destructured {
   *** getMatch(...);
   *** toList(...);
}

-keep class kotlin.text.MatchResult
-keepclassmembers class kotlin.text.MatchResult {
}

-keep class kotlin.text.MatchGroup
-keepclassmembers class kotlin.text.MatchGroup {
   <init>(...);
   *** getRange(...);
   *** getValue(...);
   *** component1(...);
   *** component2(...);
   *** copy(...);
}

-keep class kotlin.text.Regex$Companion
-keepclassmembers class kotlin.text.Regex$Companion {
   <init>(...);
   *** escape(...);
   *** escapeReplacement(...);
   *** fromLiteral(...);
}

-keep class kotlin.text.Regex
-keepclassmembers class kotlin.text.Regex {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getOptions(...);
   *** getPattern(...);
   *** containsMatchIn(...);
   *** find(...);
   *** findAll(...);
   *** matchAt(...);
   *** matchEntire(...);
   *** matches(...);
   *** matchesAt(...);
   *** replace(...);
   *** replace(...);
   *** replaceFirst(...);
   *** split(...);
   *** splitToSequence(...);
   *** toPattern(...);
}

-keep class kotlin.text.RegexKt
-keepclassmembers class kotlin.text.RegexKt {
}

-keep class kotlin.text.RegexOption
-keepclassmembers class kotlin.text.RegexOption {
   *** getMask(...);
   *** getValue(...);
   *** valueOf(...);
   *** values(...);
}

-keep class kotlin.text.StringsKt
-keepclassmembers class kotlin.text.StringsKt {
   *** all(...);
   *** any(...);
   *** any(...);
   *** asIterable(...);
   *** asSequence(...);
   *** associate(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateTo(...);
   *** associateWith(...);
   *** associateWithTo(...);
   *** chunked(...);
   *** chunked(...);
   *** chunkedSequence(...);
   *** chunkedSequence(...);
   *** count(...);
   *** drop(...);
   *** dropLast(...);
   *** dropLastWhile(...);
   *** dropWhile(...);
   *** filter(...);
   *** filterIndexed(...);
   *** filterIndexedTo(...);
   *** filterNot(...);
   *** filterNotTo(...);
   *** filterTo(...);
   *** first(...);
   *** first(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** flatMap(...);
   *** flatMapTo(...);
   *** fold(...);
   *** foldIndexed(...);
   *** foldRight(...);
   *** foldRightIndexed(...);
   *** forEach(...);
   *** forEachIndexed(...);
   *** getOrNull(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupingBy(...);
   *** indexOfFirst(...);
   *** indexOfLast(...);
   *** last(...);
   *** last(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** map(...);
   *** mapIndexed(...);
   *** mapIndexedNotNull(...);
   *** mapIndexedNotNullTo(...);
   *** mapIndexedTo(...);
   *** mapNotNull(...);
   *** mapNotNullTo(...);
   *** mapTo(...);
   *** maxByOrNull(...);
   *** maxByOrThrow(...);
   *** maxOrNull(...);
   *** maxOrThrow(...);
   *** maxWithOrNull(...);
   *** maxWithOrThrow(...);
   *** minByOrNull(...);
   *** minByOrThrow(...);
   *** minOrNull(...);
   *** minOrThrow(...);
   *** minWithOrNull(...);
   *** minWithOrThrow(...);
   *** none(...);
   *** none(...);
   *** partition(...);
   *** partition(...);
   *** random(...);
   *** randomOrNull(...);
   *** reduce(...);
   *** reduceIndexed(...);
   *** reduceIndexedOrNull(...);
   *** reduceOrNull(...);
   *** reduceRight(...);
   *** reduceRightIndexed(...);
   *** reduceRightIndexedOrNull(...);
   *** reduceRightOrNull(...);
   *** reversed(...);
   *** runningFold(...);
   *** runningFoldIndexed(...);
   *** runningReduce(...);
   *** runningReduceIndexed(...);
   *** scan(...);
   *** scanIndexed(...);
   *** single(...);
   *** single(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** slice(...);
   *** slice(...);
   *** sumBy(...);
   *** sumByDouble(...);
   *** take(...);
   *** takeLast(...);
   *** takeLastWhile(...);
   *** takeWhile(...);
   *** toCollection(...);
   *** toHashSet(...);
   *** toList(...);
   *** toMutableList(...);
   *** toSet(...);
   *** windowed(...);
   *** windowed(...);
   *** windowedSequence(...);
   *** windowedSequence(...);
   *** withIndex(...);
   *** zip(...);
   *** zip(...);
   *** zipWithNext(...);
   *** zipWithNext(...);
   *** toSortedSet(...);
   *** commonPrefixWith(...);
   *** commonSuffixWith(...);
   *** contains(...);
   *** contains(...);
   *** contentEqualsIgnoreCaseImpl(...);
   *** contentEqualsImpl(...);
   *** endsWith(...);
   *** endsWith(...);
   *** findAnyOf(...);
   *** findLastAnyOf(...);
   *** getIndices(...);
   *** getLastIndex(...);
   *** hasSurrogatePairAt(...);
   *** indexOf(...);
   *** indexOf(...);
   *** indexOfAny(...);
   *** indexOfAny(...);
   *** iterator(...);
   *** lastIndexOf(...);
   *** lastIndexOf(...);
   *** lastIndexOfAny(...);
   *** lastIndexOfAny(...);
   *** lineSequence(...);
   *** lines(...);
   *** padEnd(...);
   *** padStart(...);
   *** regionMatchesImpl(...);
   *** removePrefix(...);
   *** removeRange(...);
   *** removeRange(...);
   *** removeSuffix(...);
   *** removeSurrounding(...);
   *** removeSurrounding(...);
   *** replaceAfter(...);
   *** replaceAfter(...);
   *** replaceAfterLast(...);
   *** replaceAfterLast(...);
   *** replaceBefore(...);
   *** replaceBefore(...);
   *** replaceBeforeLast(...);
   *** replaceBeforeLast(...);
   *** replaceRange(...);
   *** replaceRange(...);
   *** requireNonNegativeLimit(...);
   *** split(...);
   *** split(...);
   *** splitToSequence(...);
   *** splitToSequence(...);
   *** startsWith(...);
   *** startsWith(...);
   *** startsWith(...);
   *** subSequence(...);
   *** substring(...);
   *** substring(...);
   *** substringAfter(...);
   *** substringAfter(...);
   *** substringAfterLast(...);
   *** substringAfterLast(...);
   *** substringBefore(...);
   *** substringBefore(...);
   *** substringBeforeLast(...);
   *** substringBeforeLast(...);
   *** toBooleanStrict(...);
   *** toBooleanStrictOrNull(...);
   *** trim(...);
   *** trim(...);
   *** trim(...);
   *** trimEnd(...);
   *** trimEnd(...);
   *** trimEnd(...);
   *** trimStart(...);
   *** trimStart(...);
   *** trimStart(...);
   *** capitalize(...);
   *** capitalize(...);
   *** compareTo(...);
   *** concatToString(...);
   *** concatToString(...);
   *** contentEquals(...);
   *** contentEquals(...);
   *** decapitalize(...);
   *** decapitalize(...);
   *** decodeToString(...);
   *** decodeToString(...);
   *** encodeToByteArray(...);
   *** encodeToByteArray(...);
   *** endsWith(...);
   *** equals(...);
   *** getCASE_INSENSITIVE_ORDER(...);
   *** isBlank(...);
   *** regionMatches(...);
   *** regionMatches(...);
   *** repeat(...);
   *** replace(...);
   *** replace(...);
   *** replaceFirst(...);
   *** replaceFirst(...);
   *** split(...);
   *** startsWith(...);
   *** startsWith(...);
   *** toCharArray(...);
   *** numberFormatError(...);
   *** toByteOrNull(...);
   *** toByteOrNull(...);
   *** toIntOrNull(...);
   *** toIntOrNull(...);
   *** toLongOrNull(...);
   *** toLongOrNull(...);
   *** toShortOrNull(...);
   *** toShortOrNull(...);
   *** toBigDecimalOrNull(...);
   *** toBigDecimalOrNull(...);
   *** toBigIntegerOrNull(...);
   *** toBigIntegerOrNull(...);
   *** toDoubleOrNull(...);
   *** toFloatOrNull(...);
   *** append(...);
   *** append(...);
   *** appendln(...);
   *** appendln(...);
   *** clear(...);
   *** prependIndent(...);
   *** replaceIndent(...);
   *** replaceIndentByMargin(...);
   *** trimIndent(...);
   *** trimMargin(...);
   *** append(...);
   *** appendElement(...);
   *** appendRange(...);
}

-keep class kotlin.text.TypeAliasesKt
-keepclassmembers class kotlin.text.TypeAliasesKt {
}

-keep class kotlin.text.Typography
-keepclassmembers class kotlin.text.Typography {
}

-keep class kotlin.text.UStringsKt
-keepclassmembers class kotlin.text.UStringsKt {
   *** toString-JSWoG40(...);
   *** toString-LxnNnR4(...);
   *** toString-V7xB4Y4(...);
   *** toString-olVBNx4(...);
   *** toUByte(...);
   *** toUByte(...);
   *** toUByteOrNull(...);
   *** toUByteOrNull(...);
   *** toUInt(...);
   *** toUInt(...);
   *** toUIntOrNull(...);
   *** toUIntOrNull(...);
   *** toULong(...);
   *** toULong(...);
   *** toULongOrNull(...);
   *** toULongOrNull(...);
   *** toUShort(...);
   *** toUShort(...);
   *** toUShortOrNull(...);
   *** toUShortOrNull(...);
}

-keep class kotlin.text._OneToManyTitlecaseMappingsKt
-keepclassmembers class kotlin.text._OneToManyTitlecaseMappingsKt {
}

-keep class kotlin.system.ProcessKt
-keepclassmembers class kotlin.system.ProcessKt {
}

-keep class kotlin.system.TimingKt
-keepclassmembers class kotlin.system.TimingKt {
   *** measureNanoTime(...);
   *** measureTimeMillis(...);
}

-keep class kotlin.sequences.Sequence
-keepclassmembers class kotlin.sequences.Sequence {
}

-keep class kotlin.sequences.SequenceScope
-keepclassmembers class kotlin.sequences.SequenceScope {
   *** yield(...);
   *** yieldAll(...);
   *** yieldAll(...);
   *** yieldAll(...);
}

-keep class kotlin.sequences.SequenceScope
-keepclassmembers class kotlin.sequences.SequenceScope {
   *** yield(...);
   *** yieldAll(...);
}

-keep class kotlin.sequences.SequencesKt
-keepclassmembers class kotlin.sequences.SequencesKt {
   *** all(...);
   *** any(...);
   *** any(...);
   *** asIterable(...);
   *** associate(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateTo(...);
   *** associateWith(...);
   *** associateWithTo(...);
   *** averageOfByte(...);
   *** averageOfDouble(...);
   *** averageOfFloat(...);
   *** averageOfInt(...);
   *** averageOfLong(...);
   *** averageOfShort(...);
   *** chunked(...);
   *** chunked(...);
   *** contains(...);
   *** count(...);
   *** count(...);
   *** distinct(...);
   *** distinctBy(...);
   *** drop(...);
   *** dropWhile(...);
   *** elementAt(...);
   *** elementAtOrElse(...);
   *** elementAtOrNull(...);
   *** filter(...);
   *** filterIndexed(...);
   *** filterIndexedTo(...);
   *** filterNot(...);
   *** filterNotNull(...);
   *** filterNotNullTo(...);
   *** filterNotTo(...);
   *** filterTo(...);
   *** first(...);
   *** first(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** flatMap(...);
   *** flatMapIndexedIterable(...);
   *** flatMapIndexedSequence(...);
   *** flatMapIterable(...);
   *** flatMapIterableTo(...);
   *** flatMapTo(...);
   *** fold(...);
   *** foldIndexed(...);
   *** forEach(...);
   *** forEachIndexed(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupingBy(...);
   *** indexOf(...);
   *** indexOfFirst(...);
   *** indexOfLast(...);
   *** joinTo(...);
   *** joinToString(...);
   *** last(...);
   *** last(...);
   *** lastIndexOf(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** map(...);
   *** mapIndexed(...);
   *** mapIndexedNotNull(...);
   *** mapIndexedNotNullTo(...);
   *** mapIndexedTo(...);
   *** mapNotNull(...);
   *** mapNotNullTo(...);
   *** mapTo(...);
   *** maxByOrNull(...);
   *** maxByOrThrow(...);
   *** maxOrNull(...);
   *** maxOrNull(...);
   *** maxOrNull(...);
   *** maxOrThrow(...);
   *** maxOrThrow(...);
   *** maxOrThrow(...);
   *** maxWithOrNull(...);
   *** maxWithOrThrow(...);
   *** minByOrNull(...);
   *** minByOrThrow(...);
   *** minOrNull(...);
   *** minOrNull(...);
   *** minOrNull(...);
   *** minOrThrow(...);
   *** minOrThrow(...);
   *** minOrThrow(...);
   *** minWithOrNull(...);
   *** minWithOrThrow(...);
   *** minus(...);
   *** minus(...);
   *** minus(...);
   *** minus(...);
   *** none(...);
   *** none(...);
   *** onEach(...);
   *** onEachIndexed(...);
   *** partition(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** reduce(...);
   *** reduceIndexed(...);
   *** reduceIndexedOrNull(...);
   *** reduceOrNull(...);
   *** requireNoNulls(...);
   *** runningFold(...);
   *** runningFoldIndexed(...);
   *** runningReduce(...);
   *** runningReduceIndexed(...);
   *** scan(...);
   *** scanIndexed(...);
   *** single(...);
   *** single(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** sorted(...);
   *** sortedBy(...);
   *** sortedByDescending(...);
   *** sortedDescending(...);
   *** sortedWith(...);
   *** sumBy(...);
   *** sumByDouble(...);
   *** sumOfByte(...);
   *** sumOfDouble(...);
   *** sumOfFloat(...);
   *** sumOfInt(...);
   *** sumOfLong(...);
   *** sumOfShort(...);
   *** take(...);
   *** takeWhile(...);
   *** toCollection(...);
   *** toHashSet(...);
   *** toList(...);
   *** toMutableList(...);
   *** toMutableSet(...);
   *** toSet(...);
   *** windowed(...);
   *** windowed(...);
   *** withIndex(...);
   *** zip(...);
   *** zip(...);
   *** zipWithNext(...);
   *** zipWithNext(...);
   *** filterIsInstance(...);
   *** filterIsInstanceTo(...);
   *** toSortedSet(...);
   *** toSortedSet(...);
   *** asSequence(...);
   *** constrainOnce(...);
   *** emptySequence(...);
   *** flatMapIndexed(...);
   *** flatten(...);
   *** flattenSequenceOfIterable(...);
   *** generateSequence(...);
   *** generateSequence(...);
   *** generateSequence(...);
   *** ifEmpty(...);
   *** sequenceOf(...);
   *** shuffled(...);
   *** shuffled(...);
   *** unzip(...);
   *** iterator(...);
   *** sequence(...);
}

-keep class kotlin.sequences.USequencesKt
-keepclassmembers class kotlin.sequences.USequencesKt {
   *** sumOfUByte(...);
   *** sumOfUInt(...);
   *** sumOfULong(...);
   *** sumOfUShort(...);
}

-keep class kotlin.reflect.KAnnotatedElement
-keepclassmembers class kotlin.reflect.KAnnotatedElement {
}

-keep class kotlin.reflect.KCallable$DefaultImpls
-keepclassmembers class kotlin.reflect.KCallable$DefaultImpls {
}

-keep class kotlin.reflect.KCallable
-keepclassmembers class kotlin.reflect.KCallable {
}

-keep class kotlin.reflect.KClass$DefaultImpls
-keepclassmembers class kotlin.reflect.KClass$DefaultImpls {
}

-keep class kotlin.reflect.KClass
-keepclassmembers class kotlin.reflect.KClass {
}

-keep class kotlin.reflect.KClassifier
-keepclassmembers class kotlin.reflect.KClassifier {
}

-keep class kotlin.reflect.KDeclarationContainer
-keepclassmembers class kotlin.reflect.KDeclarationContainer {
}

-keep class kotlin.reflect.KFunction$DefaultImpls
-keepclassmembers class kotlin.reflect.KFunction$DefaultImpls {
}

-keep class kotlin.reflect.KFunction
-keepclassmembers class kotlin.reflect.KFunction {
}

-keep class kotlin.reflect.KMutableProperty$Setter
-keepclassmembers class kotlin.reflect.KMutableProperty$Setter {
}

-keep class kotlin.reflect.KMutableProperty
-keepclassmembers class kotlin.reflect.KMutableProperty {
}

-keep class kotlin.reflect.KMutableProperty0$Setter
-keepclassmembers class kotlin.reflect.KMutableProperty0$Setter {
}

-keep class kotlin.reflect.KMutableProperty0
-keepclassmembers class kotlin.reflect.KMutableProperty0 {
}

-keep class kotlin.reflect.KMutableProperty1$Setter
-keepclassmembers class kotlin.reflect.KMutableProperty1$Setter {
}

-keep class kotlin.reflect.KMutableProperty1
-keepclassmembers class kotlin.reflect.KMutableProperty1 {
}

-keep class kotlin.reflect.KMutableProperty2$Setter
-keepclassmembers class kotlin.reflect.KMutableProperty2$Setter {
}

-keep class kotlin.reflect.KMutableProperty2
-keepclassmembers class kotlin.reflect.KMutableProperty2 {
}

-keep class kotlin.reflect.KParameter$DefaultImpls
-keepclassmembers class kotlin.reflect.KParameter$DefaultImpls {
}

-keep class kotlin.reflect.KParameter$Kind
-keepclassmembers class kotlin.reflect.KParameter$Kind {
   *** valueOf(...);
   *** values(...);
}

-keep class kotlin.reflect.KParameter
-keepclassmembers class kotlin.reflect.KParameter {
}

-keep class kotlin.reflect.KProperty$Accessor
-keepclassmembers class kotlin.reflect.KProperty$Accessor {
}

-keep class kotlin.reflect.KProperty$DefaultImpls
-keepclassmembers class kotlin.reflect.KProperty$DefaultImpls {
}

-keep class kotlin.reflect.KProperty$Getter
-keepclassmembers class kotlin.reflect.KProperty$Getter {
}

-keep class kotlin.reflect.KProperty
-keepclassmembers class kotlin.reflect.KProperty {
}

-keep class kotlin.reflect.KProperty0$Getter
-keepclassmembers class kotlin.reflect.KProperty0$Getter {
}

-keep class kotlin.reflect.KProperty0
-keepclassmembers class kotlin.reflect.KProperty0 {
}

-keep class kotlin.reflect.KProperty1$Getter
-keepclassmembers class kotlin.reflect.KProperty1$Getter {
}

-keep class kotlin.reflect.KProperty1
-keepclassmembers class kotlin.reflect.KProperty1 {
}

-keep class kotlin.reflect.KProperty2$Getter
-keepclassmembers class kotlin.reflect.KProperty2$Getter {
}

-keep class kotlin.reflect.KProperty2
-keepclassmembers class kotlin.reflect.KProperty2 {
}

-keep class kotlin.reflect.KType$DefaultImpls
-keepclassmembers class kotlin.reflect.KType$DefaultImpls {
}

-keep class kotlin.reflect.KType
-keepclassmembers class kotlin.reflect.KType {
}

-keep class kotlin.reflect.KTypeParameter
-keepclassmembers class kotlin.reflect.KTypeParameter {
}

-keep class kotlin.reflect.KClasses
-keepclassmembers class kotlin.reflect.KClasses {
   *** cast(...);
   *** safeCast(...);
}

-keep class kotlin.reflect.KClassesImplKt
-keepclassmembers class kotlin.reflect.KClassesImplKt {
   *** getQualifiedOrSimpleName(...);
}

-keep class kotlin.reflect.KTypeProjection$Companion
-keepclassmembers class kotlin.reflect.KTypeProjection$Companion {
   <init>(...);
   *** contravariant(...);
   *** covariant(...);
   *** invariant(...);
}

-keep class kotlin.reflect.KTypeProjection$WhenMappings
-keepclassmembers class kotlin.reflect.KTypeProjection$WhenMappings {
}

-keep class kotlin.reflect.KTypeProjection
-keepclassmembers class kotlin.reflect.KTypeProjection {
   <init>(...);
   *** getType(...);
   *** getVariance(...);
   *** component1(...);
   *** component2(...);
   *** contravariant(...);
   *** copy(...);
   *** covariant(...);
   *** invariant(...);
}

-keep class kotlin.reflect.KVariance
-keepclassmembers class kotlin.reflect.KVariance {
   *** valueOf(...);
   *** values(...);
}

-keep class kotlin.reflect.KVisibility
-keepclassmembers class kotlin.reflect.KVisibility {
   *** valueOf(...);
   *** values(...);
}

-keep class kotlin.reflect.TypeOfKt
-keepclassmembers class kotlin.reflect.TypeOfKt {
}

-keep class kotlin.reflect.TypesJVMKt$WhenMappings
-keepclassmembers class kotlin.reflect.TypesJVMKt$WhenMappings {
}

-keep class kotlin.reflect.TypesJVMKt
-keepclassmembers class kotlin.reflect.TypesJVMKt {
   *** getJavaType(...);
}

-keep class kotlin.random.PlatformRandomKt
-keepclassmembers class kotlin.random.PlatformRandomKt {
   *** asJavaRandom(...);
   *** asKotlinRandom(...);
}

-keep class kotlin.random.Random$Default
-keepclassmembers class kotlin.random.Random$Default {
   <init>(...);
   *** nextBits(...);
}

-keep class kotlin.random.Random
-keepclassmembers class kotlin.random.Random {
   <init>(...);
   *** nextBits(...);
   *** nextBoolean(...);
   *** nextBytes(...);
   *** nextBytes(...);
   *** nextBytes(...);
   *** nextDouble(...);
   *** nextDouble(...);
   *** nextDouble(...);
   *** nextFloat(...);
   *** nextInt(...);
   *** nextInt(...);
   *** nextInt(...);
   *** nextLong(...);
   *** nextLong(...);
   *** nextLong(...);
}

-keep class kotlin.random.Random
-keepclassmembers class kotlin.random.Random {
   *** nextBits(...);
}

-keep class kotlin.random.RandomKt
-keepclassmembers class kotlin.random.RandomKt {
   *** Random(...);
   *** Random(...);
   *** nextInt(...);
   *** nextLong(...);
}

-keep class kotlin.random.URandomKt
-keepclassmembers class kotlin.random.URandomKt {
   *** nextUBytes(...);
   *** nextUBytes-EVgfTAA(...);
   *** nextUBytes-Wvrt4B4(...);
   *** nextUInt(...);
   *** nextUInt(...);
   *** nextUInt-a8DCA5k(...);
   *** nextUInt-qCasIEU(...);
   *** nextULong(...);
   *** nextULong(...);
   *** nextULong-V1Xi4fY(...);
   *** nextULong-jmpaW-c(...);
}

-keep class kotlin.properties.Delegates
-keepclassmembers class kotlin.properties.Delegates {
   *** notNull(...);
   *** observable(...);
   *** vetoable(...);
}

-keep class kotlin.properties.PropertyDelegateProvider
-keepclassmembers class kotlin.properties.PropertyDelegateProvider {
}

-keep class kotlin.properties.ReadOnlyProperty
-keepclassmembers class kotlin.properties.ReadOnlyProperty {
}

-keep class kotlin.properties.ReadWriteProperty
-keepclassmembers class kotlin.properties.ReadWriteProperty {
}

-keep class kotlin.properties.ObservableProperty
-keepclassmembers class kotlin.properties.ObservableProperty {
   <init>(...);
   *** afterChange(...);
   *** beforeChange(...);
   *** getValue(...);
   *** setValue(...);
}

-keep class kotlin.properties.ObservableProperty
-keepclassmembers class kotlin.properties.ObservableProperty {
}

-keep class kotlin.math.MathKt
-keepclassmembers class kotlin.math.MathKt {
   *** acosh(...);
   *** asinh(...);
   *** atanh(...);
   *** getSign(...);
   *** getSign(...);
   *** log(...);
   *** log(...);
   *** log2(...);
   *** log2(...);
   *** roundToInt(...);
   *** roundToInt(...);
   *** roundToLong(...);
   *** roundToLong(...);
   *** truncate(...);
   *** truncate(...);
}

-keep class kotlin.math.UMathKt
-keepclassmembers class kotlin.math.UMathKt {
}

-keep class kotlin.jvm.JvmDefault
-keepclassmembers class kotlin.jvm.JvmDefault {
}

-keep class kotlin.jvm.JvmDefaultWithCompatibility
-keepclassmembers class kotlin.jvm.JvmDefaultWithCompatibility {
}

-keep class kotlin.jvm.JvmDefaultWithoutCompatibility
-keepclassmembers class kotlin.jvm.JvmDefaultWithoutCompatibility {
}

-keep class kotlin.jvm.JvmField
-keepclassmembers class kotlin.jvm.JvmField {
}

-keep class kotlin.jvm.JvmInline
-keepclassmembers class kotlin.jvm.JvmInline {
}

-keep class kotlin.jvm.JvmMultifileClass
-keepclassmembers class kotlin.jvm.JvmMultifileClass {
}

-keep class kotlin.jvm.JvmName
-keepclassmembers class kotlin.jvm.JvmName {
}

-keep class kotlin.jvm.JvmOverloads
-keepclassmembers class kotlin.jvm.JvmOverloads {
}

-keep class kotlin.jvm.JvmRecord
-keepclassmembers class kotlin.jvm.JvmRecord {
}

-keep class kotlin.jvm.JvmStatic
-keepclassmembers class kotlin.jvm.JvmStatic {
}

-keep class kotlin.jvm.JvmSuppressWildcards
-keepclassmembers class kotlin.jvm.JvmSuppressWildcards {
}

-keep class kotlin.jvm.JvmSynthetic
-keepclassmembers class kotlin.jvm.JvmSynthetic {
}

-keep class kotlin.jvm.JvmWildcard
-keepclassmembers class kotlin.jvm.JvmWildcard {
}

-keep class kotlin.jvm.PurelyImplements
-keepclassmembers class kotlin.jvm.PurelyImplements {
}

-keep class kotlin.jvm.Strictfp
-keepclassmembers class kotlin.jvm.Strictfp {
}

-keep class kotlin.jvm.Synchronized
-keepclassmembers class kotlin.jvm.Synchronized {
}

-keep class kotlin.jvm.Throws
-keepclassmembers class kotlin.jvm.Throws {
}

-keep class kotlin.jvm.Transient
-keepclassmembers class kotlin.jvm.Transient {
}

-keep class kotlin.jvm.Volatile
-keepclassmembers class kotlin.jvm.Volatile {
}

-keep class kotlin.jvm.JvmClassMappingKt
-keepclassmembers class kotlin.jvm.JvmClassMappingKt {
   *** getAnnotationClass(...);
   *** getJavaClass(...);
   *** getJavaClass(...);
   *** getJavaObjectType(...);
   *** getJavaPrimitiveType(...);
   *** getKotlinClass(...);
   *** getRuntimeClassOfKClassInstance(...);
}

-keep class kotlin.jvm.KotlinReflectionNotSupportedError
-keepclassmembers class kotlin.jvm.KotlinReflectionNotSupportedError {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class kotlin.jvm.internal.AdaptedFunctionReference
-keepclassmembers class kotlin.jvm.internal.AdaptedFunctionReference {
   <init>(...);
   <init>(...);
   *** getArity(...);
   *** getOwner(...);
}

-keep class kotlin.jvm.internal.ArrayIteratorKt
-keepclassmembers class kotlin.jvm.internal.ArrayIteratorKt {
   *** iterator(...);
}

-keep class kotlin.jvm.internal.ArrayIteratorsKt
-keepclassmembers class kotlin.jvm.internal.ArrayIteratorsKt {
   *** iterator(...);
   *** iterator(...);
   *** iterator(...);
   *** iterator(...);
   *** iterator(...);
   *** iterator(...);
   *** iterator(...);
   *** iterator(...);
}

-keep class kotlin.jvm.internal.BooleanSpreadBuilder
-keepclassmembers class kotlin.jvm.internal.BooleanSpreadBuilder {
   <init>(...);
   *** add(...);
   *** getSize(...);
   *** toArray(...);
}

-keep class kotlin.jvm.internal.ByteSpreadBuilder
-keepclassmembers class kotlin.jvm.internal.ByteSpreadBuilder {
   <init>(...);
   *** add(...);
   *** getSize(...);
   *** toArray(...);
}

-keep class kotlin.jvm.internal.CallableReference
-keepclassmembers class kotlin.jvm.internal.CallableReference {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getAnnotations(...);
   *** getBoundReceiver(...);
   *** isAbstract(...);
   *** isFinal(...);
   *** isOpen(...);
   *** isSuspend(...);
   *** getName(...);
   *** getOwner(...);
   *** getParameters(...);
   *** getReflected(...);
   *** getReturnType(...);
   *** getSignature(...);
   *** getTypeParameters(...);
   *** getVisibility(...);
   *** call(...);
   *** callBy(...);
   *** compute(...);
   *** computeReflected(...);
}

-keep class kotlin.jvm.internal.CallableReference
-keepclassmembers class kotlin.jvm.internal.CallableReference {
   *** computeReflected(...);
}

-keep class kotlin.jvm.internal.CharSpreadBuilder
-keepclassmembers class kotlin.jvm.internal.CharSpreadBuilder {
   <init>(...);
   *** add(...);
   *** getSize(...);
   *** toArray(...);
}

-keep class kotlin.jvm.internal.ClassReference$Companion
-keepclassmembers class kotlin.jvm.internal.ClassReference$Companion {
   <init>(...);
   *** getClassQualifiedName(...);
   *** getClassSimpleName(...);
   *** isInstance(...);
}

-keep class kotlin.jvm.internal.ClassReference
-keepclassmembers class kotlin.jvm.internal.ClassReference {
   <init>(...);
   *** getAnnotations(...);
   *** getConstructors(...);
   *** isAbstract(...);
   *** isCompanion(...);
   *** isData(...);
   *** isFinal(...);
   *** isFun(...);
   *** isInner(...);
   *** isOpen(...);
   *** isSealed(...);
   *** isValue(...);
   *** getJClass(...);
   *** getMembers(...);
   *** getNestedClasses(...);
   *** getObjectInstance(...);
   *** getQualifiedName(...);
   *** getSealedSubclasses(...);
   *** getSimpleName(...);
   *** getSupertypes(...);
   *** getTypeParameters(...);
   *** getVisibility(...);
   *** isInstance(...);
}

-keep class kotlin.jvm.internal.CollectionToArray
-keepclassmembers class kotlin.jvm.internal.CollectionToArray {
   *** toArray(...);
   *** toArray(...);
}

-keep class kotlin.jvm.internal.DefaultConstructorMarker
-keepclassmembers class kotlin.jvm.internal.DefaultConstructorMarker {
}

-keep class kotlin.jvm.internal.DoubleSpreadBuilder
-keepclassmembers class kotlin.jvm.internal.DoubleSpreadBuilder {
   <init>(...);
   *** add(...);
   *** getSize(...);
   *** toArray(...);
}

-keep class kotlin.jvm.internal.FloatSpreadBuilder
-keepclassmembers class kotlin.jvm.internal.FloatSpreadBuilder {
   <init>(...);
   *** add(...);
   *** getSize(...);
   *** toArray(...);
}

-keep class kotlin.jvm.internal.FunctionReference
-keepclassmembers class kotlin.jvm.internal.FunctionReference {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getArity(...);
   *** isExternal(...);
   *** isInfix(...);
   *** isInline(...);
   *** isOperator(...);
   *** computeReflected(...);
}

-keep class kotlin.jvm.internal.FunInterfaceConstructorReference
-keepclassmembers class kotlin.jvm.internal.FunInterfaceConstructorReference {
   <init>(...);
}

-keep class kotlin.jvm.internal.ClassBasedDeclarationContainer
-keepclassmembers class kotlin.jvm.internal.ClassBasedDeclarationContainer {
}

-keep class kotlin.jvm.internal.FunctionAdapter
-keepclassmembers class kotlin.jvm.internal.FunctionAdapter {
}

-keep class kotlin.jvm.internal.FunctionBase
-keepclassmembers class kotlin.jvm.internal.FunctionBase {
}

-keep class kotlin.jvm.internal.KTypeBase
-keepclassmembers class kotlin.jvm.internal.KTypeBase {
}

-keep class kotlin.jvm.internal.InlineMarker
-keepclassmembers class kotlin.jvm.internal.InlineMarker {
   <init>(...);
   *** afterInlineCall(...);
   *** beforeInlineCall(...);
   *** finallyEnd(...);
   *** finallyStart(...);
   *** mark(...);
   *** mark(...);
}

-keep class kotlin.jvm.internal.Intrinsics$Kotlin
-keepclassmembers class kotlin.jvm.internal.Intrinsics$Kotlin {
}

-keep class kotlin.jvm.internal.Intrinsics
-keepclassmembers class kotlin.jvm.internal.Intrinsics {
   *** areEqual(...);
   *** areEqual(...);
   *** areEqual(...);
   *** areEqual(...);
   *** areEqual(...);
   *** areEqual(...);
   *** areEqual(...);
   *** checkExpressionValueIsNotNull(...);
   *** checkFieldIsNotNull(...);
   *** checkFieldIsNotNull(...);
   *** checkHasClass(...);
   *** checkHasClass(...);
   *** checkNotNull(...);
   *** checkNotNull(...);
   *** checkNotNullExpressionValue(...);
   *** checkNotNullParameter(...);
   *** checkParameterIsNotNull(...);
   *** checkReturnedValueIsNotNull(...);
   *** checkReturnedValueIsNotNull(...);
   *** compare(...);
   *** compare(...);
   *** needClassReification(...);
   *** needClassReification(...);
   *** reifiedOperationMarker(...);
   *** reifiedOperationMarker(...);
   *** stringPlus(...);
   *** throwAssert(...);
   *** throwAssert(...);
   *** throwIllegalArgument(...);
   *** throwIllegalArgument(...);
   *** throwIllegalState(...);
   *** throwIllegalState(...);
   *** throwJavaNpe(...);
   *** throwJavaNpe(...);
   *** throwNpe(...);
   *** throwNpe(...);
   *** throwUndefinedForReified(...);
   *** throwUndefinedForReified(...);
   *** throwUninitializedProperty(...);
   *** throwUninitializedPropertyAccessException(...);
}

-keep class kotlin.jvm.internal.IntSpreadBuilder
-keepclassmembers class kotlin.jvm.internal.IntSpreadBuilder {
   <init>(...);
   *** add(...);
   *** getSize(...);
   *** toArray(...);
}

-keep class kotlin.jvm.internal.RepeatableContainer
-keepclassmembers class kotlin.jvm.internal.RepeatableContainer {
}

-keep class kotlin.jvm.internal.SerializedIr
-keepclassmembers class kotlin.jvm.internal.SerializedIr {
}

-keep class kotlin.jvm.internal.Lambda
-keepclassmembers class kotlin.jvm.internal.Lambda {
   <init>(...);
   *** getArity(...);
}

-keep class kotlin.jvm.internal.Lambda
-keepclassmembers class kotlin.jvm.internal.Lambda {
}

-keep class kotlin.jvm.internal.LocalVariableReference
-keepclassmembers class kotlin.jvm.internal.LocalVariableReference {
   <init>(...);
   *** get(...);
}

-keep class kotlin.jvm.internal.LocalVariableReferencesKt
-keepclassmembers class kotlin.jvm.internal.LocalVariableReferencesKt {
}

-keep class kotlin.jvm.internal.LongSpreadBuilder
-keepclassmembers class kotlin.jvm.internal.LongSpreadBuilder {
   <init>(...);
   *** add(...);
   *** getSize(...);
   *** toArray(...);
}

-keep class kotlin.jvm.internal.MagicApiIntrinsics
-keepclassmembers class kotlin.jvm.internal.MagicApiIntrinsics {
   <init>(...);
   *** anyMagicApiCall(...);
   *** anyMagicApiCall(...);
   *** anyMagicApiCall(...);
   *** anyMagicApiCall(...);
   *** anyMagicApiCall(...);
   *** anyMagicApiCall(...);
   *** intMagicApiCall(...);
   *** intMagicApiCall(...);
   *** intMagicApiCall(...);
   *** intMagicApiCall(...);
   *** intMagicApiCall(...);
   *** intMagicApiCall(...);
   *** voidMagicApiCall(...);
   *** voidMagicApiCall(...);
}

-keep class kotlin.jvm.internal.MutableLocalVariableReference
-keepclassmembers class kotlin.jvm.internal.MutableLocalVariableReference {
   <init>(...);
   *** get(...);
   *** set(...);
}

-keep class kotlin.jvm.internal.MutablePropertyReference
-keepclassmembers class kotlin.jvm.internal.MutablePropertyReference {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSetter(...);
}

-keep class kotlin.jvm.internal.MutablePropertyReference
-keepclassmembers class kotlin.jvm.internal.MutablePropertyReference {
   *** getSetter(...);
   *** getGetter(...);
   *** computeReflected(...);
}

-keep class kotlin.jvm.internal.MutablePropertyReference0
-keepclassmembers class kotlin.jvm.internal.MutablePropertyReference0 {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDelegate(...);
   *** getGetter(...);
   *** getSetter(...);
   *** computeReflected(...);
   *** invoke(...);
   *** get(...);
   *** set(...);
}

-keep class kotlin.jvm.internal.MutablePropertyReference0
-keepclassmembers class kotlin.jvm.internal.MutablePropertyReference0 {
}

-keep class kotlin.jvm.internal.MutablePropertyReference1
-keepclassmembers class kotlin.jvm.internal.MutablePropertyReference1 {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getGetter(...);
   *** getSetter(...);
   *** computeReflected(...);
   *** getDelegate(...);
   *** invoke(...);
   *** get(...);
   *** set(...);
}

-keep class kotlin.jvm.internal.MutablePropertyReference1
-keepclassmembers class kotlin.jvm.internal.MutablePropertyReference1 {
}

-keep class kotlin.jvm.internal.MutablePropertyReference2
-keepclassmembers class kotlin.jvm.internal.MutablePropertyReference2 {
   <init>(...);
   <init>(...);
   *** getGetter(...);
   *** getSetter(...);
   *** computeReflected(...);
   *** getDelegate(...);
   *** invoke(...);
   *** get(...);
   *** set(...);
}

-keep class kotlin.jvm.internal.MutablePropertyReference2
-keepclassmembers class kotlin.jvm.internal.MutablePropertyReference2 {
}

-keep class kotlin.jvm.internal.PackageReference
-keepclassmembers class kotlin.jvm.internal.PackageReference {
   <init>(...);
   *** getJClass(...);
   *** getMembers(...);
}

-keep class kotlin.jvm.internal.PrimitiveSpreadBuilder
-keepclassmembers class kotlin.jvm.internal.PrimitiveSpreadBuilder {
   <init>(...);
   *** getPosition(...);
   *** setPosition(...);
   *** addSpread(...);
   *** getSize(...);
   *** size(...);
   *** toArray(...);
}

-keep class kotlin.jvm.internal.PrimitiveSpreadBuilder
-keepclassmembers class kotlin.jvm.internal.PrimitiveSpreadBuilder {
   *** getSize(...);
}

-keep class kotlin.jvm.internal.PropertyReference
-keepclassmembers class kotlin.jvm.internal.PropertyReference {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getGetter(...);
   *** isConst(...);
   *** isLateinit(...);
}

-keep class kotlin.jvm.internal.PropertyReference
-keepclassmembers class kotlin.jvm.internal.PropertyReference {
   *** getGetter(...);
   *** computeReflected(...);
}

-keep class kotlin.jvm.internal.PropertyReference0
-keepclassmembers class kotlin.jvm.internal.PropertyReference0 {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDelegate(...);
   *** getGetter(...);
   *** computeReflected(...);
   *** invoke(...);
   *** get(...);
}

-keep class kotlin.jvm.internal.PropertyReference0
-keepclassmembers class kotlin.jvm.internal.PropertyReference0 {
}

-keep class kotlin.jvm.internal.PropertyReference1
-keepclassmembers class kotlin.jvm.internal.PropertyReference1 {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getGetter(...);
   *** computeReflected(...);
   *** getDelegate(...);
   *** invoke(...);
   *** get(...);
}

-keep class kotlin.jvm.internal.PropertyReference1
-keepclassmembers class kotlin.jvm.internal.PropertyReference1 {
}

-keep class kotlin.jvm.internal.PropertyReference2
-keepclassmembers class kotlin.jvm.internal.PropertyReference2 {
   <init>(...);
   <init>(...);
   *** getGetter(...);
   *** computeReflected(...);
   *** getDelegate(...);
   *** invoke(...);
   *** get(...);
}

-keep class kotlin.jvm.internal.PropertyReference2
-keepclassmembers class kotlin.jvm.internal.PropertyReference2 {
}

-keep class kotlin.jvm.internal.Ref$BooleanRef
-keepclassmembers class kotlin.jvm.internal.Ref$BooleanRef {
   <init>(...);
}

-keep class kotlin.jvm.internal.Ref$ByteRef
-keepclassmembers class kotlin.jvm.internal.Ref$ByteRef {
   <init>(...);
}

-keep class kotlin.jvm.internal.Ref$CharRef
-keepclassmembers class kotlin.jvm.internal.Ref$CharRef {
   <init>(...);
}

-keep class kotlin.jvm.internal.Ref$DoubleRef
-keepclassmembers class kotlin.jvm.internal.Ref$DoubleRef {
   <init>(...);
}

-keep class kotlin.jvm.internal.Ref$FloatRef
-keepclassmembers class kotlin.jvm.internal.Ref$FloatRef {
   <init>(...);
}

-keep class kotlin.jvm.internal.Ref$IntRef
-keepclassmembers class kotlin.jvm.internal.Ref$IntRef {
   <init>(...);
}

-keep class kotlin.jvm.internal.Ref$LongRef
-keepclassmembers class kotlin.jvm.internal.Ref$LongRef {
   <init>(...);
}

-keep class kotlin.jvm.internal.Ref$ObjectRef
-keepclassmembers class kotlin.jvm.internal.Ref$ObjectRef {
   <init>(...);
}

-keep class kotlin.jvm.internal.Ref$ShortRef
-keepclassmembers class kotlin.jvm.internal.Ref$ShortRef {
   <init>(...);
}

-keep class kotlin.jvm.internal.Ref
-keepclassmembers class kotlin.jvm.internal.Ref {
}

-keep class kotlin.jvm.internal.Reflection
-keepclassmembers class kotlin.jvm.internal.Reflection {
   <init>(...);
   *** createKotlinClass(...);
   *** createKotlinClass(...);
   *** function(...);
   *** getOrCreateKotlinClass(...);
   *** getOrCreateKotlinClass(...);
   *** getOrCreateKotlinClasses(...);
   *** getOrCreateKotlinPackage(...);
   *** getOrCreateKotlinPackage(...);
   *** mutableCollectionType(...);
   *** mutableProperty0(...);
   *** mutableProperty1(...);
   *** mutableProperty2(...);
   *** nothingType(...);
   *** nullableTypeOf(...);
   *** nullableTypeOf(...);
   *** nullableTypeOf(...);
   *** nullableTypeOf(...);
   *** nullableTypeOf(...);
   *** platformType(...);
   *** property0(...);
   *** property1(...);
   *** property2(...);
   *** renderLambdaToString(...);
   *** renderLambdaToString(...);
   *** setUpperBounds(...);
   *** setUpperBounds(...);
   *** typeOf(...);
   *** typeOf(...);
   *** typeOf(...);
   *** typeOf(...);
   *** typeOf(...);
   *** typeParameter(...);
}

-keep class kotlin.jvm.internal.ReflectionFactory
-keepclassmembers class kotlin.jvm.internal.ReflectionFactory {
   <init>(...);
   *** createKotlinClass(...);
   *** createKotlinClass(...);
   *** function(...);
   *** getOrCreateKotlinClass(...);
   *** getOrCreateKotlinClass(...);
   *** getOrCreateKotlinPackage(...);
   *** mutableCollectionType(...);
   *** mutableProperty0(...);
   *** mutableProperty1(...);
   *** mutableProperty2(...);
   *** nothingType(...);
   *** platformType(...);
   *** property0(...);
   *** property1(...);
   *** property2(...);
   *** renderLambdaToString(...);
   *** renderLambdaToString(...);
   *** setUpperBounds(...);
   *** typeOf(...);
   *** typeParameter(...);
}

-keep class kotlin.jvm.internal.ShortSpreadBuilder
-keepclassmembers class kotlin.jvm.internal.ShortSpreadBuilder {
   <init>(...);
   *** add(...);
   *** getSize(...);
   *** toArray(...);
}

-keep class kotlin.jvm.internal.SpreadBuilder
-keepclassmembers class kotlin.jvm.internal.SpreadBuilder {
   <init>(...);
   *** add(...);
   *** addSpread(...);
   *** size(...);
   *** toArray(...);
}

-keep class kotlin.jvm.internal.TypeIntrinsics
-keepclassmembers class kotlin.jvm.internal.TypeIntrinsics {
   <init>(...);
   *** asMutableCollection(...);
   *** asMutableCollection(...);
   *** asMutableIterable(...);
   *** asMutableIterable(...);
   *** asMutableIterator(...);
   *** asMutableIterator(...);
   *** asMutableList(...);
   *** asMutableList(...);
   *** asMutableListIterator(...);
   *** asMutableListIterator(...);
   *** asMutableMap(...);
   *** asMutableMap(...);
   *** asMutableMapEntry(...);
   *** asMutableMapEntry(...);
   *** asMutableSet(...);
   *** asMutableSet(...);
   *** beforeCheckcastToFunctionOfArity(...);
   *** beforeCheckcastToFunctionOfArity(...);
   *** castToCollection(...);
   *** castToIterable(...);
   *** castToIterator(...);
   *** castToList(...);
   *** castToListIterator(...);
   *** castToMap(...);
   *** castToMapEntry(...);
   *** castToSet(...);
   *** getFunctionArity(...);
   *** isFunctionOfArity(...);
   *** isMutableCollection(...);
   *** isMutableIterable(...);
   *** isMutableIterator(...);
   *** isMutableList(...);
   *** isMutableListIterator(...);
   *** isMutableMap(...);
   *** isMutableMapEntry(...);
   *** isMutableSet(...);
   *** throwCce(...);
   *** throwCce(...);
   *** throwCce(...);
}

-keep class kotlin.jvm.internal.TypeParameterReference$Companion$WhenMappings
-keepclassmembers class kotlin.jvm.internal.TypeParameterReference$Companion$WhenMappings {
}

-keep class kotlin.jvm.internal.TypeParameterReference$Companion
-keepclassmembers class kotlin.jvm.internal.TypeParameterReference$Companion {
   <init>(...);
   *** toString(...);
}

-keep class kotlin.jvm.internal.TypeParameterReference
-keepclassmembers class kotlin.jvm.internal.TypeParameterReference {
   <init>(...);
   *** isReified(...);
   *** getName(...);
   *** getUpperBounds(...);
   *** setUpperBounds(...);
   *** getVariance(...);
}

-keep class kotlin.jvm.internal.TypeReference$WhenMappings
-keepclassmembers class kotlin.jvm.internal.TypeReference$WhenMappings {
}

-keep class kotlin.jvm.internal.TypeReference
-keepclassmembers class kotlin.jvm.internal.TypeReference {
   <init>(...);
   <init>(...);
   *** getAnnotations(...);
   *** getArguments(...);
   *** getClassifier(...);
   *** isMarkedNullable(...);
}

-keep class kotlin.jvm.internal.unsafe.MonitorKt
-keepclassmembers class kotlin.jvm.internal.unsafe.MonitorKt {
}

-keep class kotlin.jvm.internal.markers.KMappedMarker
-keepclassmembers class kotlin.jvm.internal.markers.KMappedMarker {
}

-keep class kotlin.jvm.internal.markers.KMutableCollection
-keepclassmembers class kotlin.jvm.internal.markers.KMutableCollection {
}

-keep class kotlin.jvm.internal.markers.KMutableIterable
-keepclassmembers class kotlin.jvm.internal.markers.KMutableIterable {
}

-keep class kotlin.jvm.internal.markers.KMutableIterator
-keepclassmembers class kotlin.jvm.internal.markers.KMutableIterator {
}

-keep class kotlin.jvm.internal.markers.KMutableList
-keepclassmembers class kotlin.jvm.internal.markers.KMutableList {
}

-keep class kotlin.jvm.internal.markers.KMutableListIterator
-keepclassmembers class kotlin.jvm.internal.markers.KMutableListIterator {
}

-keep class kotlin.jvm.internal.markers.KMutableMap$Entry
-keepclassmembers class kotlin.jvm.internal.markers.KMutableMap$Entry {
}

-keep class kotlin.jvm.internal.markers.KMutableMap
-keepclassmembers class kotlin.jvm.internal.markers.KMutableMap {
}

-keep class kotlin.jvm.internal.markers.KMutableSet
-keepclassmembers class kotlin.jvm.internal.markers.KMutableSet {
}

-keep class kotlin.jvm.functions.Function0
-keepclassmembers class kotlin.jvm.functions.Function0 {
}

-keep class kotlin.jvm.functions.Function1
-keepclassmembers class kotlin.jvm.functions.Function1 {
}

-keep class kotlin.jvm.functions.Function10
-keepclassmembers class kotlin.jvm.functions.Function10 {
}

-keep class kotlin.jvm.functions.Function11
-keepclassmembers class kotlin.jvm.functions.Function11 {
}

-keep class kotlin.jvm.functions.Function12
-keepclassmembers class kotlin.jvm.functions.Function12 {
}

-keep class kotlin.jvm.functions.Function13
-keepclassmembers class kotlin.jvm.functions.Function13 {
}

-keep class kotlin.jvm.functions.Function14
-keepclassmembers class kotlin.jvm.functions.Function14 {
}

-keep class kotlin.jvm.functions.Function15
-keepclassmembers class kotlin.jvm.functions.Function15 {
}

-keep class kotlin.jvm.functions.Function16
-keepclassmembers class kotlin.jvm.functions.Function16 {
}

-keep class kotlin.jvm.functions.Function17
-keepclassmembers class kotlin.jvm.functions.Function17 {
}

-keep class kotlin.jvm.functions.Function18
-keepclassmembers class kotlin.jvm.functions.Function18 {
}

-keep class kotlin.jvm.functions.Function19
-keepclassmembers class kotlin.jvm.functions.Function19 {
}

-keep class kotlin.jvm.functions.Function2
-keepclassmembers class kotlin.jvm.functions.Function2 {
}

-keep class kotlin.jvm.functions.Function20
-keepclassmembers class kotlin.jvm.functions.Function20 {
}

-keep class kotlin.jvm.functions.Function21
-keepclassmembers class kotlin.jvm.functions.Function21 {
}

-keep class kotlin.jvm.functions.Function22
-keepclassmembers class kotlin.jvm.functions.Function22 {
}

-keep class kotlin.jvm.functions.Function3
-keepclassmembers class kotlin.jvm.functions.Function3 {
}

-keep class kotlin.jvm.functions.Function4
-keepclassmembers class kotlin.jvm.functions.Function4 {
}

-keep class kotlin.jvm.functions.Function5
-keepclassmembers class kotlin.jvm.functions.Function5 {
}

-keep class kotlin.jvm.functions.Function6
-keepclassmembers class kotlin.jvm.functions.Function6 {
}

-keep class kotlin.jvm.functions.Function7
-keepclassmembers class kotlin.jvm.functions.Function7 {
}

-keep class kotlin.jvm.functions.Function8
-keepclassmembers class kotlin.jvm.functions.Function8 {
}

-keep class kotlin.jvm.functions.Function9
-keepclassmembers class kotlin.jvm.functions.Function9 {
}

-keep class kotlin.jvm.functions.FunctionN
-keepclassmembers class kotlin.jvm.functions.FunctionN {
}

-keep class kotlin.js.ExperimentalJsExport
-keepclassmembers class kotlin.js.ExperimentalJsExport {
}

-keep class kotlin.io.AccessDeniedException
-keepclassmembers class kotlin.io.AccessDeniedException {
   <init>(...);
}

-keep class kotlin.io.ByteStreamsKt
-keepclassmembers class kotlin.io.ByteStreamsKt {
   *** copyTo(...);
   *** iterator(...);
   *** readBytes(...);
   *** readBytes(...);
}

-keep class kotlin.io.CloseableKt
-keepclassmembers class kotlin.io.CloseableKt {
}

-keep class kotlin.io.ConsoleKt
-keepclassmembers class kotlin.io.ConsoleKt {
   *** readLine(...);
   *** readln(...);
   *** readlnOrNull(...);
}

-keep class kotlin.io.ConstantsKt
-keepclassmembers class kotlin.io.ConstantsKt {
}

-keep class kotlin.io.ExceptionsKt
-keepclassmembers class kotlin.io.ExceptionsKt {
}

-keep class kotlin.io.FileAlreadyExistsException
-keepclassmembers class kotlin.io.FileAlreadyExistsException {
   <init>(...);
}

-keep class kotlin.io.FilesKt
-keepclassmembers class kotlin.io.FilesKt {
   *** copyRecursively(...);
   *** copyTo(...);
   *** createTempDir(...);
   *** createTempFile(...);
   *** deleteRecursively(...);
   *** endsWith(...);
   *** endsWith(...);
   *** getExtension(...);
   *** getInvariantSeparatorsPath(...);
   *** getNameWithoutExtension(...);
   *** normalize(...);
   *** relativeTo(...);
   *** relativeToOrNull(...);
   *** relativeToOrSelf(...);
   *** resolve(...);
   *** resolve(...);
   *** resolveSibling(...);
   *** resolveSibling(...);
   *** startsWith(...);
   *** startsWith(...);
   *** toRelativeString(...);
   *** walk(...);
   *** walkBottomUp(...);
   *** walkTopDown(...);
   *** appendBytes(...);
   *** appendText(...);
   *** forEachBlock(...);
   *** forEachBlock(...);
   *** forEachLine(...);
   *** readBytes(...);
   *** readLines(...);
   *** readText(...);
   *** useLines(...);
   *** writeBytes(...);
   *** writeText(...);
   *** getRoot(...);
   *** getRootName(...);
   *** isRooted(...);
   *** subPath(...);
   *** toComponents(...);
}

-keep class kotlin.io.FileSystemException
-keepclassmembers class kotlin.io.FileSystemException {
   <init>(...);
   *** getFile(...);
   *** getOther(...);
   *** getReason(...);
}

-keep class kotlin.io.FileTreeWalk
-keepclassmembers class kotlin.io.FileTreeWalk {
   *** iterator(...);
   *** maxDepth(...);
   *** onEnter(...);
   *** onFail(...);
   *** onLeave(...);
}

-keep class kotlin.io.FileWalkDirection
-keepclassmembers class kotlin.io.FileWalkDirection {
   *** valueOf(...);
   *** values(...);
}

-keep class kotlin.io.NoSuchFileException
-keepclassmembers class kotlin.io.NoSuchFileException {
   <init>(...);
}

-keep class kotlin.io.OnErrorAction
-keepclassmembers class kotlin.io.OnErrorAction {
   *** valueOf(...);
   *** values(...);
}

-keep class kotlin.io.SerializableKt
-keepclassmembers class kotlin.io.SerializableKt {
}

-keep class kotlin.io.TextStreamsKt
-keepclassmembers class kotlin.io.TextStreamsKt {
   *** copyTo(...);
   *** forEachLine(...);
   *** lineSequence(...);
   *** readBytes(...);
   *** readLines(...);
   *** readText(...);
   *** useLines(...);
}

-keep class kotlin.internal.PlatformImplementationsKt
-keepclassmembers class kotlin.internal.PlatformImplementationsKt {
}

-keep class kotlin.internal.ProgressionUtilKt
-keepclassmembers class kotlin.internal.ProgressionUtilKt {
}

-keep class kotlin.internal.UProgressionUtilKt
-keepclassmembers class kotlin.internal.UProgressionUtilKt {
}

-keep class kotlin.experimental.BitwiseOperationsKt
-keepclassmembers class kotlin.experimental.BitwiseOperationsKt {
}

-keep class kotlin.experimental.ExperimentalTypeInference
-keepclassmembers class kotlin.experimental.ExperimentalTypeInference {
}

-keep class kotlin.coroutines.AbstractCoroutineContextElement
-keepclassmembers class kotlin.coroutines.AbstractCoroutineContextElement {
   <init>(...);
   *** getKey(...);
   *** fold(...);
   *** get(...);
   *** minusKey(...);
   *** plus(...);
}

-keep class kotlin.coroutines.AbstractCoroutineContextElement
-keepclassmembers class kotlin.coroutines.AbstractCoroutineContextElement {
}

-keep class kotlin.coroutines.ContinuationKt
-keepclassmembers class kotlin.coroutines.ContinuationKt {
   *** createCoroutine(...);
   *** createCoroutine(...);
   *** startCoroutine(...);
   *** startCoroutine(...);
}

-keep class kotlin.coroutines.CoroutineContextImplKt
-keepclassmembers class kotlin.coroutines.CoroutineContextImplKt {
   *** getPolymorphicElement(...);
   *** minusPolymorphicKey(...);
}

-keep class kotlin.coroutines.EmptyCoroutineContext
-keepclassmembers class kotlin.coroutines.EmptyCoroutineContext {
   *** fold(...);
   *** get(...);
   *** minusKey(...);
   *** plus(...);
}

-keep class kotlin.coroutines.Continuation
-keepclassmembers class kotlin.coroutines.Continuation {
}

-keep class kotlin.coroutines.ContinuationInterceptor$DefaultImpls
-keepclassmembers class kotlin.coroutines.ContinuationInterceptor$DefaultImpls {
   *** fold(...);
   *** get(...);
   *** minusKey(...);
   *** plus(...);
   *** releaseInterceptedContinuation(...);
}

-keep class kotlin.coroutines.ContinuationInterceptor$Key
-keepclassmembers class kotlin.coroutines.ContinuationInterceptor$Key {
}

-keep class kotlin.coroutines.ContinuationInterceptor
-keepclassmembers class kotlin.coroutines.ContinuationInterceptor {
}

-keep class kotlin.coroutines.ContinuationInterceptor
-keepclassmembers class kotlin.coroutines.ContinuationInterceptor {
}

-keep class kotlin.coroutines.ContinuationInterceptor
-keepclassmembers class kotlin.coroutines.ContinuationInterceptor {
}

-keep class kotlin.coroutines.CoroutineContext$DefaultImpls
-keepclassmembers class kotlin.coroutines.CoroutineContext$DefaultImpls {
   *** plus(...);
}

-keep class kotlin.coroutines.CoroutineContext$Element$DefaultImpls
-keepclassmembers class kotlin.coroutines.CoroutineContext$Element$DefaultImpls {
   *** fold(...);
   *** get(...);
   *** minusKey(...);
   *** plus(...);
}

-keep class kotlin.coroutines.CoroutineContext$Element
-keepclassmembers class kotlin.coroutines.CoroutineContext$Element {
}

-keep class kotlin.coroutines.CoroutineContext$Key
-keepclassmembers class kotlin.coroutines.CoroutineContext$Key {
}

-keep class kotlin.coroutines.CoroutineContext
-keepclassmembers class kotlin.coroutines.CoroutineContext {
}

-keep class kotlin.coroutines.RestrictsSuspension
-keepclassmembers class kotlin.coroutines.RestrictsSuspension {
}

-keep class kotlin.coroutines.jvm.internal.Boxing
-keepclassmembers class kotlin.coroutines.jvm.internal.Boxing {
}

-keep class kotlin.coroutines.jvm.internal.DebugMetadataKt
-keepclassmembers class kotlin.coroutines.jvm.internal.DebugMetadataKt {
}

-keep class kotlin.coroutines.jvm.internal.DebugProbesKt
-keepclassmembers class kotlin.coroutines.jvm.internal.DebugProbesKt {
}

-keep class kotlin.coroutines.jvm.internal.CoroutineStackFrame
-keepclassmembers class kotlin.coroutines.jvm.internal.CoroutineStackFrame {
}

-keep class kotlin.coroutines.jvm.internal.RunSuspendKt
-keepclassmembers class kotlin.coroutines.jvm.internal.RunSuspendKt {
}

-keep class kotlin.coroutines.intrinsics.IntrinsicsKt
-keepclassmembers class kotlin.coroutines.intrinsics.IntrinsicsKt {
   *** getCOROUTINE_SUSPENDED(...);
   *** createCoroutineUnintercepted(...);
   *** createCoroutineUnintercepted(...);
   *** intercepted(...);
}

-keep class kotlin.coroutines.cancellation.CancellationExceptionKt
-keepclassmembers class kotlin.coroutines.cancellation.CancellationExceptionKt {
}

-keep class kotlin.contracts.ContractBuilderKt
-keepclassmembers class kotlin.contracts.ContractBuilderKt {
}

-keep class kotlin.contracts.CallsInPlace
-keepclassmembers class kotlin.contracts.CallsInPlace {
}

-keep class kotlin.contracts.ConditionalEffect
-keepclassmembers class kotlin.contracts.ConditionalEffect {
}

-keep class kotlin.contracts.ContractBuilder$DefaultImpls
-keepclassmembers class kotlin.contracts.ContractBuilder$DefaultImpls {
}

-keep class kotlin.contracts.ContractBuilder
-keepclassmembers class kotlin.contracts.ContractBuilder {
}

-keep class kotlin.contracts.Effect
-keepclassmembers class kotlin.contracts.Effect {
}

-keep class kotlin.contracts.ExperimentalContracts
-keepclassmembers class kotlin.contracts.ExperimentalContracts {
}

-keep class kotlin.contracts.InvocationKind
-keepclassmembers class kotlin.contracts.InvocationKind {
   *** valueOf(...);
   *** values(...);
}

-keep class kotlin.contracts.Returns
-keepclassmembers class kotlin.contracts.Returns {
}

-keep class kotlin.contracts.ReturnsNotNull
-keepclassmembers class kotlin.contracts.ReturnsNotNull {
}

-keep class kotlin.contracts.SimpleEffect
-keepclassmembers class kotlin.contracts.SimpleEffect {
}

-keep class kotlin.concurrent.LocksKt
-keepclassmembers class kotlin.concurrent.LocksKt {
}

-keep class kotlin.concurrent.ThreadsKt
-keepclassmembers class kotlin.concurrent.ThreadsKt {
   *** thread(...);
}

-keep class kotlin.concurrent.TimersKt
-keepclassmembers class kotlin.concurrent.TimersKt {
}

-keep class kotlin.comparisons.ComparisonsKt
-keepclassmembers class kotlin.comparisons.ComparisonsKt {
   *** maxOf(...);
   *** maxOf(...);
   *** maxOf(...);
   *** minOf(...);
   *** minOf(...);
   *** minOf(...);
   *** maxOf(...);
   *** maxOf(...);
   *** maxOf(...);
   *** maxOf(...);
   *** maxOf(...);
   *** maxOf(...);
   *** maxOf(...);
   *** maxOf(...);
   *** maxOf(...);
   *** minOf(...);
   *** minOf(...);
   *** minOf(...);
   *** minOf(...);
   *** minOf(...);
   *** minOf(...);
   *** minOf(...);
   *** minOf(...);
   *** minOf(...);
   *** compareBy(...);
   *** compareValues(...);
   *** compareValuesBy(...);
   *** naturalOrder(...);
   *** nullsFirst(...);
   *** nullsLast(...);
   *** reverseOrder(...);
   *** reversed(...);
   *** then(...);
   *** thenDescending(...);
}

-keep class kotlin.comparisons.UComparisonsKt
-keepclassmembers class kotlin.comparisons.UComparisonsKt {
   *** maxOf-5PvTz6A(...);
   *** maxOf-J1ME1BU(...);
   *** maxOf-Kr8caGY(...);
   *** maxOf-Md2H83M(...);
   *** maxOf-R03FKyM(...);
   *** maxOf-Wr6uiD8(...);
   *** maxOf-eb3DHEI(...);
   *** maxOf-t1qELG4(...);
   *** minOf-5PvTz6A(...);
   *** minOf-J1ME1BU(...);
   *** minOf-Kr8caGY(...);
   *** minOf-Md2H83M(...);
   *** minOf-R03FKyM(...);
   *** minOf-Wr6uiD8(...);
   *** minOf-eb3DHEI(...);
   *** minOf-t1qELG4(...);
}

-keep class kotlin.annotation.AnnotationRetention
-keepclassmembers class kotlin.annotation.AnnotationRetention {
   *** valueOf(...);
   *** values(...);
}

-keep class kotlin.annotation.AnnotationTarget
-keepclassmembers class kotlin.annotation.AnnotationTarget {
   *** valueOf(...);
   *** values(...);
}

-keep class kotlin.annotation.MustBeDocumented
-keepclassmembers class kotlin.annotation.MustBeDocumented {
}

-keep class kotlin.annotation.Repeatable
-keepclassmembers class kotlin.annotation.Repeatable {
}

-keep class kotlin.annotation.Retention
-keepclassmembers class kotlin.annotation.Retention {
}

-keep class kotlin.annotation.Target
-keepclassmembers class kotlin.annotation.Target {
}

-keep class kotlin.ranges.ULongRange$Companion
-keepclassmembers class kotlin.ranges.ULongRange$Companion {
   <init>(...);
   *** getEMPTY(...);
}

-keep class kotlin.ranges.ULongRange
-keepclassmembers class kotlin.ranges.ULongRange {
   <init>(...);
   *** getEndExclusive-s-VKNKU(...);
   *** getEndInclusive-s-VKNKU(...);
   *** getStart-s-VKNKU(...);
   *** contains-VKZWuLQ(...);
}

-keep class kotlin.ranges.UIntRange$Companion
-keepclassmembers class kotlin.ranges.UIntRange$Companion {
   <init>(...);
   *** getEMPTY(...);
}

-keep class kotlin.ranges.UIntRange
-keepclassmembers class kotlin.ranges.UIntRange {
   *** getEndExclusive-pVg5ArA(...);
   *** getEndInclusive-pVg5ArA(...);
   *** getStart-pVg5ArA(...);
   *** contains-WZ4Q5Ns(...);
}

-keep class kotlin.ranges.CharProgression$Companion
-keepclassmembers class kotlin.ranges.CharProgression$Companion {
   <init>(...);
   *** fromClosedRange(...);
}

-keep class kotlin.ranges.CharProgression
-keepclassmembers class kotlin.ranges.CharProgression {
   *** getFirst(...);
   *** isEmpty(...);
   *** getLast(...);
   *** getStep(...);
   *** iterator(...);
}

-keep class kotlin.ranges.CharRange$Companion
-keepclassmembers class kotlin.ranges.CharRange$Companion {
   <init>(...);
   *** getEMPTY(...);
}

-keep class kotlin.ranges.CharRange
-keepclassmembers class kotlin.ranges.CharRange {
   <init>(...);
   *** getEndExclusive(...);
   *** getEndInclusive(...);
   *** getStart(...);
   *** contains(...);
   *** getEndInclusive(...);
   *** getStart(...);
   *** getEndExclusive(...);
   *** getStart(...);
}

-keep class kotlin.ranges.ClosedFloatingPointRange$DefaultImpls
-keepclassmembers class kotlin.ranges.ClosedFloatingPointRange$DefaultImpls {
   *** contains(...);
   *** isEmpty(...);
}

-keep class kotlin.ranges.ClosedFloatingPointRange
-keepclassmembers class kotlin.ranges.ClosedFloatingPointRange {
}

-keep class kotlin.ranges.ClosedRange$DefaultImpls
-keepclassmembers class kotlin.ranges.ClosedRange$DefaultImpls {
   *** contains(...);
   *** isEmpty(...);
}

-keep class kotlin.ranges.ClosedRange
-keepclassmembers class kotlin.ranges.ClosedRange {
}

-keep class kotlin.ranges.IntProgression$Companion
-keepclassmembers class kotlin.ranges.IntProgression$Companion {
   <init>(...);
   *** fromClosedRange(...);
}

-keep class kotlin.ranges.IntProgression
-keepclassmembers class kotlin.ranges.IntProgression {
   *** getFirst(...);
   *** isEmpty(...);
   *** getLast(...);
   *** getStep(...);
   *** iterator(...);
}

-keep class kotlin.ranges.IntRange$Companion
-keepclassmembers class kotlin.ranges.IntRange$Companion {
   <init>(...);
   *** getEMPTY(...);
}

-keep class kotlin.ranges.IntRange
-keepclassmembers class kotlin.ranges.IntRange {
   <init>(...);
   *** getEndExclusive(...);
   *** getEndInclusive(...);
   *** getStart(...);
   *** contains(...);
   *** getEndInclusive(...);
   *** getStart(...);
   *** getEndExclusive(...);
   *** getStart(...);
}

-keep class kotlin.ranges.OpenEndRange$DefaultImpls
-keepclassmembers class kotlin.ranges.OpenEndRange$DefaultImpls {
   *** contains(...);
   *** isEmpty(...);
}

-keep class kotlin.ranges.OpenEndRange
-keepclassmembers class kotlin.ranges.OpenEndRange {
}

-keep class kotlin.ranges.LongProgression$Companion
-keepclassmembers class kotlin.ranges.LongProgression$Companion {
   <init>(...);
   *** fromClosedRange(...);
}

-keep class kotlin.ranges.LongProgression
-keepclassmembers class kotlin.ranges.LongProgression {
   *** getFirst(...);
   *** isEmpty(...);
   *** getLast(...);
   *** getStep(...);
   *** iterator(...);
}

-keep class kotlin.ranges.LongRange$Companion
-keepclassmembers class kotlin.ranges.LongRange$Companion {
   <init>(...);
   *** getEMPTY(...);
}

-keep class kotlin.ranges.LongRange
-keepclassmembers class kotlin.ranges.LongRange {
   <init>(...);
   *** getEndExclusive(...);
   *** getEndInclusive(...);
   *** getStart(...);
   *** contains(...);
   *** getEndInclusive(...);
   *** getStart(...);
   *** getEndExclusive(...);
   *** getStart(...);
}

-keep class kotlin.ranges.RangesKt
-keepclassmembers class kotlin.ranges.RangesKt {
   *** byteRangeContains(...);
   *** byteRangeContains(...);
   *** byteRangeContains(...);
   *** byteRangeContains(...);
   *** byteRangeContains(...);
   *** byteRangeContains(...);
   *** coerceAtLeast(...);
   *** coerceAtLeast(...);
   *** coerceAtLeast(...);
   *** coerceAtLeast(...);
   *** coerceAtLeast(...);
   *** coerceAtLeast(...);
   *** coerceAtLeast(...);
   *** coerceAtMost(...);
   *** coerceAtMost(...);
   *** coerceAtMost(...);
   *** coerceAtMost(...);
   *** coerceAtMost(...);
   *** coerceAtMost(...);
   *** coerceAtMost(...);
   *** coerceIn(...);
   *** coerceIn(...);
   *** coerceIn(...);
   *** coerceIn(...);
   *** coerceIn(...);
   *** coerceIn(...);
   *** coerceIn(...);
   *** coerceIn(...);
   *** coerceIn(...);
   *** coerceIn(...);
   *** coerceIn(...);
   *** doubleRangeContains(...);
   *** doubleRangeContains(...);
   *** downTo(...);
   *** downTo(...);
   *** downTo(...);
   *** downTo(...);
   *** downTo(...);
   *** downTo(...);
   *** downTo(...);
   *** downTo(...);
   *** downTo(...);
   *** downTo(...);
   *** downTo(...);
   *** downTo(...);
   *** downTo(...);
   *** downTo(...);
   *** downTo(...);
   *** downTo(...);
   *** downTo(...);
   *** first(...);
   *** first(...);
   *** first(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** floatRangeContains(...);
   *** intRangeContains(...);
   *** intRangeContains(...);
   *** intRangeContains(...);
   *** intRangeContains(...);
   *** intRangeContains(...);
   *** intRangeContains(...);
   *** last(...);
   *** last(...);
   *** last(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** longRangeContains(...);
   *** longRangeContains(...);
   *** longRangeContains(...);
   *** longRangeContains(...);
   *** longRangeContains(...);
   *** longRangeContains(...);
   *** random(...);
   *** random(...);
   *** random(...);
   *** randomOrNull(...);
   *** randomOrNull(...);
   *** randomOrNull(...);
   *** reversed(...);
   *** reversed(...);
   *** reversed(...);
   *** shortRangeContains(...);
   *** shortRangeContains(...);
   *** shortRangeContains(...);
   *** shortRangeContains(...);
   *** shortRangeContains(...);
   *** shortRangeContains(...);
   *** step(...);
   *** step(...);
   *** step(...);
   *** toByteExactOrNull(...);
   *** toByteExactOrNull(...);
   *** toByteExactOrNull(...);
   *** toByteExactOrNull(...);
   *** toByteExactOrNull(...);
   *** toIntExactOrNull(...);
   *** toIntExactOrNull(...);
   *** toIntExactOrNull(...);
   *** toLongExactOrNull(...);
   *** toLongExactOrNull(...);
   *** toShortExactOrNull(...);
   *** toShortExactOrNull(...);
   *** toShortExactOrNull(...);
   *** toShortExactOrNull(...);
   *** until(...);
   *** until(...);
   *** until(...);
   *** until(...);
   *** until(...);
   *** until(...);
   *** until(...);
   *** until(...);
   *** until(...);
   *** until(...);
   *** until(...);
   *** until(...);
   *** until(...);
   *** until(...);
   *** until(...);
   *** until(...);
   *** until(...);
   *** checkStepIsPositive(...);
   *** rangeTo(...);
   *** rangeTo(...);
   *** rangeTo(...);
   *** rangeUntil(...);
   *** rangeUntil(...);
   *** rangeUntil(...);
}

-keep class kotlin.ranges.UIntProgression$Companion
-keepclassmembers class kotlin.ranges.UIntProgression$Companion {
   <init>(...);
   *** fromClosedRange-Nkh28Cs(...);
}

-keep class kotlin.ranges.UIntProgression
-keepclassmembers class kotlin.ranges.UIntProgression {
   *** getFirst-pVg5ArA(...);
   *** isEmpty(...);
   *** getLast-pVg5ArA(...);
   *** getStep(...);
   *** iterator(...);
}

-keep class kotlin.ranges.ULongProgression$Companion
-keepclassmembers class kotlin.ranges.ULongProgression$Companion {
   <init>(...);
   *** fromClosedRange-7ftBX0g(...);
}

-keep class kotlin.ranges.ULongProgression
-keepclassmembers class kotlin.ranges.ULongProgression {
   <init>(...);
   *** getFirst-s-VKNKU(...);
   *** isEmpty(...);
   *** getLast-s-VKNKU(...);
   *** getStep(...);
   *** iterator(...);
}

-keep class kotlin.ranges.URangesKt
-keepclassmembers class kotlin.ranges.URangesKt {
   *** coerceAtLeast-5PvTz6A(...);
   *** coerceAtLeast-J1ME1BU(...);
   *** coerceAtLeast-Kr8caGY(...);
   *** coerceAtLeast-eb3DHEI(...);
   *** coerceAtMost-5PvTz6A(...);
   *** coerceAtMost-J1ME1BU(...);
   *** coerceAtMost-Kr8caGY(...);
   *** coerceAtMost-eb3DHEI(...);
   *** coerceIn-JPwROB0(...);
   *** coerceIn-VKSA0NQ(...);
   *** coerceIn-WZ9TVnA(...);
   *** coerceIn-b33U2AM(...);
   *** coerceIn-sambcqE(...);
   *** coerceIn-wuiCnnA(...);
   *** contains-68kG9v0(...);
   *** contains-Gab390E(...);
   *** contains-ULb-yJY(...);
   *** contains-ZsK3CEQ(...);
   *** contains-fz5IDCE(...);
   *** contains-uhHAxoY(...);
   *** downTo-5PvTz6A(...);
   *** downTo-J1ME1BU(...);
   *** downTo-Kr8caGY(...);
   *** downTo-eb3DHEI(...);
   *** first(...);
   *** first(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** last(...);
   *** last(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** random(...);
   *** random(...);
   *** randomOrNull(...);
   *** randomOrNull(...);
   *** reversed(...);
   *** reversed(...);
   *** step(...);
   *** step(...);
   *** until-5PvTz6A(...);
   *** until-J1ME1BU(...);
   *** until-Kr8caGY(...);
   *** until-eb3DHEI(...);
}

-keep class kotlin.collections.AbstractSet
-keepclassmembers class kotlin.collections.AbstractSet {
   *** getSize(...);
}

-keep class kotlin.collections.AbstractList
-keepclassmembers class kotlin.collections.AbstractList {
   *** get(...);
   *** getSize(...);
}

-keep class kotlin.collections.AbstractCollection
-keepclassmembers class kotlin.collections.AbstractCollection {
   <init>(...);
   *** isEmpty(...);
   *** add(...);
   *** addAll(...);
   *** clear(...);
   *** contains(...);
   *** containsAll(...);
   *** getSize(...);
   *** iterator(...);
   *** remove(...);
   *** removeAll(...);
   *** retainAll(...);
   *** size(...);
   *** toArray(...);
   *** toArray(...);
}

-keep class kotlin.collections.AbstractCollection
-keepclassmembers class kotlin.collections.AbstractCollection {
   *** getSize(...);
   *** iterator(...);
}

-keep class kotlin.collections.AbstractIterator$WhenMappings
-keepclassmembers class kotlin.collections.AbstractIterator$WhenMappings {
}

-keep class kotlin.collections.AbstractIterator
-keepclassmembers class kotlin.collections.AbstractIterator {
   <init>(...);
   *** hasNext(...);
   *** computeNext(...);
   *** done(...);
   *** next(...);
   *** remove(...);
   *** setNext(...);
}

-keep class kotlin.collections.AbstractIterator
-keepclassmembers class kotlin.collections.AbstractIterator {
   *** computeNext(...);
}

-keep class kotlin.collections.AbstractList
-keepclassmembers class kotlin.collections.AbstractList {
   <init>(...);
   *** add(...);
   *** addAll(...);
   *** get(...);
   *** indexOf(...);
   *** iterator(...);
   *** lastIndexOf(...);
   *** listIterator(...);
   *** listIterator(...);
   *** remove(...);
   *** set(...);
   *** subList(...);
}

-keep class kotlin.collections.AbstractMap
-keepclassmembers class kotlin.collections.AbstractMap {
   <init>(...);
   *** getEntries(...);
   *** isEmpty(...);
   *** getKeys(...);
   *** clear(...);
   *** containsKey(...);
   *** containsValue(...);
   *** entrySet(...);
   *** get(...);
   *** keySet(...);
   *** put(...);
   *** putAll(...);
   *** remove(...);
   *** size(...);
   *** values(...);
}

-keep class kotlin.collections.AbstractMap
-keepclassmembers class kotlin.collections.AbstractMap {
   *** getEntries(...);
}

-keep class kotlin.collections.AbstractMutableCollection
-keepclassmembers class kotlin.collections.AbstractMutableCollection {
   <init>(...);
   *** add(...);
   *** getSize(...);
   *** size(...);
}

-keep class kotlin.collections.AbstractMutableCollection
-keepclassmembers class kotlin.collections.AbstractMutableCollection {
   *** add(...);
   *** getSize(...);
   *** iterator(...);
}

-keep class kotlin.collections.AbstractMutableList
-keepclassmembers class kotlin.collections.AbstractMutableList {
   <init>(...);
   *** add(...);
   *** getSize(...);
   *** remove(...);
   *** removeAt(...);
   *** set(...);
   *** size(...);
}

-keep class kotlin.collections.AbstractMutableList
-keepclassmembers class kotlin.collections.AbstractMutableList {
   *** add(...);
   *** getSize(...);
   *** removeAt(...);
   *** set(...);
   *** get(...);
}

-keep class kotlin.collections.AbstractMutableMap
-keepclassmembers class kotlin.collections.AbstractMutableMap {
   <init>(...);
   *** getEntries(...);
   *** getKeys(...);
   *** entrySet(...);
   *** getSize(...);
   *** getValues(...);
   *** keySet(...);
   *** put(...);
   *** size(...);
   *** values(...);
}

-keep class kotlin.collections.AbstractMutableMap
-keepclassmembers class kotlin.collections.AbstractMutableMap {
   *** getEntries(...);
   *** put(...);
}

-keep class kotlin.collections.AbstractMutableSet
-keepclassmembers class kotlin.collections.AbstractMutableSet {
   <init>(...);
   *** add(...);
   *** getSize(...);
   *** size(...);
}

-keep class kotlin.collections.AbstractMutableSet
-keepclassmembers class kotlin.collections.AbstractMutableSet {
   *** add(...);
   *** getSize(...);
   *** iterator(...);
}

-keep class kotlin.collections.AbstractSet
-keepclassmembers class kotlin.collections.AbstractSet {
   <init>(...);
   *** iterator(...);
}

-keep class kotlin.collections.ArrayDeque
-keepclassmembers class kotlin.collections.ArrayDeque {
   <init>(...);
   <init>(...);
   <init>(...);
   *** add(...);
   *** add(...);
   *** addAll(...);
   *** addAll(...);
   *** addFirst(...);
   *** addLast(...);
   *** first(...);
   *** firstOrNull(...);
   *** get(...);
   *** getSize(...);
   *** last(...);
   *** lastOrNull(...);
   *** removeAll(...);
   *** removeAt(...);
   *** removeFirst(...);
   *** removeFirstOrNull(...);
   *** removeLast(...);
   *** removeLastOrNull(...);
   *** retainAll(...);
   *** set(...);
   *** toArray(...);
}

-keep class kotlin.collections.ArraysKt
-keepclassmembers class kotlin.collections.ArraysKt {
   *** all(...);
   *** all(...);
   *** all(...);
   *** all(...);
   *** all(...);
   *** all(...);
   *** all(...);
   *** all(...);
   *** all(...);
   *** any(...);
   *** any(...);
   *** any(...);
   *** any(...);
   *** any(...);
   *** any(...);
   *** any(...);
   *** any(...);
   *** any(...);
   *** any(...);
   *** any(...);
   *** any(...);
   *** any(...);
   *** any(...);
   *** any(...);
   *** any(...);
   *** any(...);
   *** any(...);
   *** asIterable(...);
   *** asIterable(...);
   *** asIterable(...);
   *** asIterable(...);
   *** asIterable(...);
   *** asIterable(...);
   *** asIterable(...);
   *** asIterable(...);
   *** asIterable(...);
   *** asSequence(...);
   *** asSequence(...);
   *** asSequence(...);
   *** asSequence(...);
   *** asSequence(...);
   *** asSequence(...);
   *** asSequence(...);
   *** asSequence(...);
   *** asSequence(...);
   *** associate(...);
   *** associate(...);
   *** associate(...);
   *** associate(...);
   *** associate(...);
   *** associate(...);
   *** associate(...);
   *** associate(...);
   *** associate(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateTo(...);
   *** associateTo(...);
   *** associateTo(...);
   *** associateTo(...);
   *** associateTo(...);
   *** associateTo(...);
   *** associateTo(...);
   *** associateTo(...);
   *** associateTo(...);
   *** associateWith(...);
   *** associateWithTo(...);
   *** average(...);
   *** average(...);
   *** average(...);
   *** average(...);
   *** average(...);
   *** average(...);
   *** averageOfByte(...);
   *** averageOfDouble(...);
   *** averageOfFloat(...);
   *** averageOfInt(...);
   *** averageOfLong(...);
   *** averageOfShort(...);
   *** contains(...);
   *** contains(...);
   *** contains(...);
   *** contains(...);
   *** contains(...);
   *** contains(...);
   *** contains(...);
   *** count(...);
   *** count(...);
   *** count(...);
   *** count(...);
   *** count(...);
   *** count(...);
   *** count(...);
   *** count(...);
   *** count(...);
   *** distinct(...);
   *** distinct(...);
   *** distinct(...);
   *** distinct(...);
   *** distinct(...);
   *** distinct(...);
   *** distinct(...);
   *** distinct(...);
   *** distinct(...);
   *** distinctBy(...);
   *** distinctBy(...);
   *** distinctBy(...);
   *** distinctBy(...);
   *** distinctBy(...);
   *** distinctBy(...);
   *** distinctBy(...);
   *** distinctBy(...);
   *** distinctBy(...);
   *** drop(...);
   *** drop(...);
   *** drop(...);
   *** drop(...);
   *** drop(...);
   *** drop(...);
   *** drop(...);
   *** drop(...);
   *** drop(...);
   *** dropLast(...);
   *** dropLast(...);
   *** dropLast(...);
   *** dropLast(...);
   *** dropLast(...);
   *** dropLast(...);
   *** dropLast(...);
   *** dropLast(...);
   *** dropLast(...);
   *** dropLastWhile(...);
   *** dropLastWhile(...);
   *** dropLastWhile(...);
   *** dropLastWhile(...);
   *** dropLastWhile(...);
   *** dropLastWhile(...);
   *** dropLastWhile(...);
   *** dropLastWhile(...);
   *** dropLastWhile(...);
   *** dropWhile(...);
   *** dropWhile(...);
   *** dropWhile(...);
   *** dropWhile(...);
   *** dropWhile(...);
   *** dropWhile(...);
   *** dropWhile(...);
   *** dropWhile(...);
   *** dropWhile(...);
   *** filter(...);
   *** filter(...);
   *** filter(...);
   *** filter(...);
   *** filter(...);
   *** filter(...);
   *** filter(...);
   *** filter(...);
   *** filter(...);
   *** filterIndexed(...);
   *** filterIndexed(...);
   *** filterIndexed(...);
   *** filterIndexed(...);
   *** filterIndexed(...);
   *** filterIndexed(...);
   *** filterIndexed(...);
   *** filterIndexed(...);
   *** filterIndexed(...);
   *** filterIndexedTo(...);
   *** filterIndexedTo(...);
   *** filterIndexedTo(...);
   *** filterIndexedTo(...);
   *** filterIndexedTo(...);
   *** filterIndexedTo(...);
   *** filterIndexedTo(...);
   *** filterIndexedTo(...);
   *** filterIndexedTo(...);
   *** filterNot(...);
   *** filterNot(...);
   *** filterNot(...);
   *** filterNot(...);
   *** filterNot(...);
   *** filterNot(...);
   *** filterNot(...);
   *** filterNot(...);
   *** filterNot(...);
   *** filterNotNull(...);
   *** filterNotNullTo(...);
   *** filterNotTo(...);
   *** filterNotTo(...);
   *** filterNotTo(...);
   *** filterNotTo(...);
   *** filterNotTo(...);
   *** filterNotTo(...);
   *** filterNotTo(...);
   *** filterNotTo(...);
   *** filterNotTo(...);
   *** filterTo(...);
   *** filterTo(...);
   *** filterTo(...);
   *** filterTo(...);
   *** filterTo(...);
   *** filterTo(...);
   *** filterTo(...);
   *** filterTo(...);
   *** filterTo(...);
   *** first(...);
   *** first(...);
   *** first(...);
   *** first(...);
   *** first(...);
   *** first(...);
   *** first(...);
   *** first(...);
   *** first(...);
   *** first(...);
   *** first(...);
   *** first(...);
   *** first(...);
   *** first(...);
   *** first(...);
   *** first(...);
   *** first(...);
   *** first(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** flatMap(...);
   *** flatMap(...);
   *** flatMap(...);
   *** flatMap(...);
   *** flatMap(...);
   *** flatMap(...);
   *** flatMap(...);
   *** flatMap(...);
   *** flatMap(...);
   *** flatMapSequence(...);
   *** flatMapSequenceTo(...);
   *** flatMapTo(...);
   *** flatMapTo(...);
   *** flatMapTo(...);
   *** flatMapTo(...);
   *** flatMapTo(...);
   *** flatMapTo(...);
   *** flatMapTo(...);
   *** flatMapTo(...);
   *** flatMapTo(...);
   *** fold(...);
   *** fold(...);
   *** fold(...);
   *** fold(...);
   *** fold(...);
   *** fold(...);
   *** fold(...);
   *** fold(...);
   *** fold(...);
   *** foldIndexed(...);
   *** foldIndexed(...);
   *** foldIndexed(...);
   *** foldIndexed(...);
   *** foldIndexed(...);
   *** foldIndexed(...);
   *** foldIndexed(...);
   *** foldIndexed(...);
   *** foldIndexed(...);
   *** foldRight(...);
   *** foldRight(...);
   *** foldRight(...);
   *** foldRight(...);
   *** foldRight(...);
   *** foldRight(...);
   *** foldRight(...);
   *** foldRight(...);
   *** foldRight(...);
   *** foldRightIndexed(...);
   *** foldRightIndexed(...);
   *** foldRightIndexed(...);
   *** foldRightIndexed(...);
   *** foldRightIndexed(...);
   *** foldRightIndexed(...);
   *** foldRightIndexed(...);
   *** foldRightIndexed(...);
   *** foldRightIndexed(...);
   *** forEach(...);
   *** forEach(...);
   *** forEach(...);
   *** forEach(...);
   *** forEach(...);
   *** forEach(...);
   *** forEach(...);
   *** forEach(...);
   *** forEach(...);
   *** forEachIndexed(...);
   *** forEachIndexed(...);
   *** forEachIndexed(...);
   *** forEachIndexed(...);
   *** forEachIndexed(...);
   *** forEachIndexed(...);
   *** forEachIndexed(...);
   *** forEachIndexed(...);
   *** forEachIndexed(...);
   *** getIndices(...);
   *** getIndices(...);
   *** getIndices(...);
   *** getIndices(...);
   *** getIndices(...);
   *** getIndices(...);
   *** getIndices(...);
   *** getIndices(...);
   *** getIndices(...);
   *** getLastIndex(...);
   *** getLastIndex(...);
   *** getLastIndex(...);
   *** getLastIndex(...);
   *** getLastIndex(...);
   *** getLastIndex(...);
   *** getLastIndex(...);
   *** getLastIndex(...);
   *** getLastIndex(...);
   *** getOrNull(...);
   *** getOrNull(...);
   *** getOrNull(...);
   *** getOrNull(...);
   *** getOrNull(...);
   *** getOrNull(...);
   *** getOrNull(...);
   *** getOrNull(...);
   *** getOrNull(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupingBy(...);
   *** indexOf(...);
   *** indexOf(...);
   *** indexOf(...);
   *** indexOf(...);
   *** indexOf(...);
   *** indexOf(...);
   *** indexOf(...);
   *** indexOfFirst(...);
   *** indexOfFirst(...);
   *** indexOfFirst(...);
   *** indexOfFirst(...);
   *** indexOfFirst(...);
   *** indexOfFirst(...);
   *** indexOfFirst(...);
   *** indexOfFirst(...);
   *** indexOfFirst(...);
   *** indexOfLast(...);
   *** indexOfLast(...);
   *** indexOfLast(...);
   *** indexOfLast(...);
   *** indexOfLast(...);
   *** indexOfLast(...);
   *** indexOfLast(...);
   *** indexOfLast(...);
   *** indexOfLast(...);
   *** intersect(...);
   *** intersect(...);
   *** intersect(...);
   *** intersect(...);
   *** intersect(...);
   *** intersect(...);
   *** intersect(...);
   *** intersect(...);
   *** intersect(...);
   *** joinTo(...);
   *** joinTo(...);
   *** joinTo(...);
   *** joinTo(...);
   *** joinTo(...);
   *** joinTo(...);
   *** joinTo(...);
   *** joinTo(...);
   *** joinTo(...);
   *** joinToString(...);
   *** joinToString(...);
   *** joinToString(...);
   *** joinToString(...);
   *** joinToString(...);
   *** joinToString(...);
   *** joinToString(...);
   *** joinToString(...);
   *** joinToString(...);
   *** last(...);
   *** last(...);
   *** last(...);
   *** last(...);
   *** last(...);
   *** last(...);
   *** last(...);
   *** last(...);
   *** last(...);
   *** last(...);
   *** last(...);
   *** last(...);
   *** last(...);
   *** last(...);
   *** last(...);
   *** last(...);
   *** last(...);
   *** last(...);
   *** lastIndexOf(...);
   *** lastIndexOf(...);
   *** lastIndexOf(...);
   *** lastIndexOf(...);
   *** lastIndexOf(...);
   *** lastIndexOf(...);
   *** lastIndexOf(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** map(...);
   *** map(...);
   *** map(...);
   *** map(...);
   *** map(...);
   *** map(...);
   *** map(...);
   *** map(...);
   *** map(...);
   *** mapIndexed(...);
   *** mapIndexed(...);
   *** mapIndexed(...);
   *** mapIndexed(...);
   *** mapIndexed(...);
   *** mapIndexed(...);
   *** mapIndexed(...);
   *** mapIndexed(...);
   *** mapIndexed(...);
   *** mapIndexedNotNull(...);
   *** mapIndexedNotNullTo(...);
   *** mapIndexedTo(...);
   *** mapIndexedTo(...);
   *** mapIndexedTo(...);
   *** mapIndexedTo(...);
   *** mapIndexedTo(...);
   *** mapIndexedTo(...);
   *** mapIndexedTo(...);
   *** mapIndexedTo(...);
   *** mapIndexedTo(...);
   *** mapNotNull(...);
   *** mapNotNullTo(...);
   *** mapTo(...);
   *** mapTo(...);
   *** mapTo(...);
   *** mapTo(...);
   *** mapTo(...);
   *** mapTo(...);
   *** mapTo(...);
   *** mapTo(...);
   *** mapTo(...);
   *** maxByOrNull(...);
   *** maxByOrNull(...);
   *** maxByOrNull(...);
   *** maxByOrNull(...);
   *** maxByOrNull(...);
   *** maxByOrNull(...);
   *** maxByOrNull(...);
   *** maxByOrNull(...);
   *** maxByOrNull(...);
   *** maxByOrThrow(...);
   *** maxByOrThrow(...);
   *** maxByOrThrow(...);
   *** maxByOrThrow(...);
   *** maxByOrThrow(...);
   *** maxByOrThrow(...);
   *** maxByOrThrow(...);
   *** maxByOrThrow(...);
   *** maxByOrThrow(...);
   *** maxOrNull(...);
   *** maxOrNull(...);
   *** maxOrNull(...);
   *** maxOrNull(...);
   *** maxOrNull(...);
   *** maxOrNull(...);
   *** maxOrNull(...);
   *** maxOrNull(...);
   *** maxOrNull(...);
   *** maxOrNull(...);
   *** maxOrThrow(...);
   *** maxOrThrow(...);
   *** maxOrThrow(...);
   *** maxOrThrow(...);
   *** maxOrThrow(...);
   *** maxOrThrow(...);
   *** maxOrThrow(...);
   *** maxOrThrow(...);
   *** maxOrThrow(...);
   *** maxOrThrow(...);
   *** maxWithOrNull(...);
   *** maxWithOrNull(...);
   *** maxWithOrNull(...);
   *** maxWithOrNull(...);
   *** maxWithOrNull(...);
   *** maxWithOrNull(...);
   *** maxWithOrNull(...);
   *** maxWithOrNull(...);
   *** maxWithOrNull(...);
   *** maxWithOrThrow(...);
   *** maxWithOrThrow(...);
   *** maxWithOrThrow(...);
   *** maxWithOrThrow(...);
   *** maxWithOrThrow(...);
   *** maxWithOrThrow(...);
   *** maxWithOrThrow(...);
   *** maxWithOrThrow(...);
   *** maxWithOrThrow(...);
   *** minByOrNull(...);
   *** minByOrNull(...);
   *** minByOrNull(...);
   *** minByOrNull(...);
   *** minByOrNull(...);
   *** minByOrNull(...);
   *** minByOrNull(...);
   *** minByOrNull(...);
   *** minByOrNull(...);
   *** minByOrThrow(...);
   *** minByOrThrow(...);
   *** minByOrThrow(...);
   *** minByOrThrow(...);
   *** minByOrThrow(...);
   *** minByOrThrow(...);
   *** minByOrThrow(...);
   *** minByOrThrow(...);
   *** minByOrThrow(...);
   *** minOrNull(...);
   *** minOrNull(...);
   *** minOrNull(...);
   *** minOrNull(...);
   *** minOrNull(...);
   *** minOrNull(...);
   *** minOrNull(...);
   *** minOrNull(...);
   *** minOrNull(...);
   *** minOrNull(...);
   *** minOrThrow(...);
   *** minOrThrow(...);
   *** minOrThrow(...);
   *** minOrThrow(...);
   *** minOrThrow(...);
   *** minOrThrow(...);
   *** minOrThrow(...);
   *** minOrThrow(...);
   *** minOrThrow(...);
   *** minOrThrow(...);
   *** minWithOrNull(...);
   *** minWithOrNull(...);
   *** minWithOrNull(...);
   *** minWithOrNull(...);
   *** minWithOrNull(...);
   *** minWithOrNull(...);
   *** minWithOrNull(...);
   *** minWithOrNull(...);
   *** minWithOrNull(...);
   *** minWithOrThrow(...);
   *** minWithOrThrow(...);
   *** minWithOrThrow(...);
   *** minWithOrThrow(...);
   *** minWithOrThrow(...);
   *** minWithOrThrow(...);
   *** minWithOrThrow(...);
   *** minWithOrThrow(...);
   *** minWithOrThrow(...);
   *** none(...);
   *** none(...);
   *** none(...);
   *** none(...);
   *** none(...);
   *** none(...);
   *** none(...);
   *** none(...);
   *** none(...);
   *** none(...);
   *** none(...);
   *** none(...);
   *** none(...);
   *** none(...);
   *** none(...);
   *** none(...);
   *** none(...);
   *** none(...);
   *** partition(...);
   *** partition(...);
   *** partition(...);
   *** partition(...);
   *** partition(...);
   *** partition(...);
   *** partition(...);
   *** partition(...);
   *** partition(...);
   *** random(...);
   *** random(...);
   *** random(...);
   *** random(...);
   *** random(...);
   *** random(...);
   *** random(...);
   *** random(...);
   *** random(...);
   *** randomOrNull(...);
   *** randomOrNull(...);
   *** randomOrNull(...);
   *** randomOrNull(...);
   *** randomOrNull(...);
   *** randomOrNull(...);
   *** randomOrNull(...);
   *** randomOrNull(...);
   *** randomOrNull(...);
   *** reduce(...);
   *** reduce(...);
   *** reduce(...);
   *** reduce(...);
   *** reduce(...);
   *** reduce(...);
   *** reduce(...);
   *** reduce(...);
   *** reduce(...);
   *** reduceIndexed(...);
   *** reduceIndexed(...);
   *** reduceIndexed(...);
   *** reduceIndexed(...);
   *** reduceIndexed(...);
   *** reduceIndexed(...);
   *** reduceIndexed(...);
   *** reduceIndexed(...);
   *** reduceIndexed(...);
   *** reduceIndexedOrNull(...);
   *** reduceIndexedOrNull(...);
   *** reduceIndexedOrNull(...);
   *** reduceIndexedOrNull(...);
   *** reduceIndexedOrNull(...);
   *** reduceIndexedOrNull(...);
   *** reduceIndexedOrNull(...);
   *** reduceIndexedOrNull(...);
   *** reduceIndexedOrNull(...);
   *** reduceOrNull(...);
   *** reduceOrNull(...);
   *** reduceOrNull(...);
   *** reduceOrNull(...);
   *** reduceOrNull(...);
   *** reduceOrNull(...);
   *** reduceOrNull(...);
   *** reduceOrNull(...);
   *** reduceOrNull(...);
   *** reduceRight(...);
   *** reduceRight(...);
   *** reduceRight(...);
   *** reduceRight(...);
   *** reduceRight(...);
   *** reduceRight(...);
   *** reduceRight(...);
   *** reduceRight(...);
   *** reduceRight(...);
   *** reduceRightIndexed(...);
   *** reduceRightIndexed(...);
   *** reduceRightIndexed(...);
   *** reduceRightIndexed(...);
   *** reduceRightIndexed(...);
   *** reduceRightIndexed(...);
   *** reduceRightIndexed(...);
   *** reduceRightIndexed(...);
   *** reduceRightIndexed(...);
   *** reduceRightIndexedOrNull(...);
   *** reduceRightIndexedOrNull(...);
   *** reduceRightIndexedOrNull(...);
   *** reduceRightIndexedOrNull(...);
   *** reduceRightIndexedOrNull(...);
   *** reduceRightIndexedOrNull(...);
   *** reduceRightIndexedOrNull(...);
   *** reduceRightIndexedOrNull(...);
   *** reduceRightIndexedOrNull(...);
   *** reduceRightOrNull(...);
   *** reduceRightOrNull(...);
   *** reduceRightOrNull(...);
   *** reduceRightOrNull(...);
   *** reduceRightOrNull(...);
   *** reduceRightOrNull(...);
   *** reduceRightOrNull(...);
   *** reduceRightOrNull(...);
   *** reduceRightOrNull(...);
   *** requireNoNulls(...);
   *** reverse(...);
   *** reverse(...);
   *** reverse(...);
   *** reverse(...);
   *** reverse(...);
   *** reverse(...);
   *** reverse(...);
   *** reverse(...);
   *** reverse(...);
   *** reverse(...);
   *** reverse(...);
   *** reverse(...);
   *** reverse(...);
   *** reverse(...);
   *** reverse(...);
   *** reverse(...);
   *** reverse(...);
   *** reverse(...);
   *** reversed(...);
   *** reversed(...);
   *** reversed(...);
   *** reversed(...);
   *** reversed(...);
   *** reversed(...);
   *** reversed(...);
   *** reversed(...);
   *** reversed(...);
   *** reversedArray(...);
   *** reversedArray(...);
   *** reversedArray(...);
   *** reversedArray(...);
   *** reversedArray(...);
   *** reversedArray(...);
   *** reversedArray(...);
   *** reversedArray(...);
   *** reversedArray(...);
   *** runningFold(...);
   *** runningFoldIndexed(...);
   *** runningReduce(...);
   *** runningReduceIndexed(...);
   *** scan(...);
   *** scanIndexed(...);
   *** shuffle(...);
   *** shuffle(...);
   *** shuffle(...);
   *** shuffle(...);
   *** shuffle(...);
   *** shuffle(...);
   *** shuffle(...);
   *** shuffle(...);
   *** shuffle(...);
   *** shuffle(...);
   *** shuffle(...);
   *** shuffle(...);
   *** shuffle(...);
   *** shuffle(...);
   *** shuffle(...);
   *** shuffle(...);
   *** shuffle(...);
   *** shuffle(...);
   *** single(...);
   *** single(...);
   *** single(...);
   *** single(...);
   *** single(...);
   *** single(...);
   *** single(...);
   *** single(...);
   *** single(...);
   *** single(...);
   *** single(...);
   *** single(...);
   *** single(...);
   *** single(...);
   *** single(...);
   *** single(...);
   *** single(...);
   *** single(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** slice(...);
   *** slice(...);
   *** slice(...);
   *** slice(...);
   *** slice(...);
   *** slice(...);
   *** slice(...);
   *** slice(...);
   *** slice(...);
   *** slice(...);
   *** slice(...);
   *** slice(...);
   *** slice(...);
   *** slice(...);
   *** slice(...);
   *** slice(...);
   *** slice(...);
   *** slice(...);
   *** sliceArray(...);
   *** sliceArray(...);
   *** sliceArray(...);
   *** sliceArray(...);
   *** sliceArray(...);
   *** sliceArray(...);
   *** sliceArray(...);
   *** sliceArray(...);
   *** sliceArray(...);
   *** sliceArray(...);
   *** sliceArray(...);
   *** sliceArray(...);
   *** sliceArray(...);
   *** sliceArray(...);
   *** sliceArray(...);
   *** sliceArray(...);
   *** sliceArray(...);
   *** sliceArray(...);
   *** sortBy(...);
   *** sortByDescending(...);
   *** sortDescending(...);
   *** sortDescending(...);
   *** sortDescending(...);
   *** sortDescending(...);
   *** sortDescending(...);
   *** sortDescending(...);
   *** sortDescending(...);
   *** sortDescending(...);
   *** sortDescending(...);
   *** sortDescending(...);
   *** sortDescending(...);
   *** sortDescending(...);
   *** sortDescending(...);
   *** sortDescending(...);
   *** sortDescending(...);
   *** sortDescending(...);
   *** sorted(...);
   *** sorted(...);
   *** sorted(...);
   *** sorted(...);
   *** sorted(...);
   *** sorted(...);
   *** sorted(...);
   *** sorted(...);
   *** sortedArray(...);
   *** sortedArray(...);
   *** sortedArray(...);
   *** sortedArray(...);
   *** sortedArray(...);
   *** sortedArray(...);
   *** sortedArray(...);
   *** sortedArray(...);
   *** sortedArrayDescending(...);
   *** sortedArrayDescending(...);
   *** sortedArrayDescending(...);
   *** sortedArrayDescending(...);
   *** sortedArrayDescending(...);
   *** sortedArrayDescending(...);
   *** sortedArrayDescending(...);
   *** sortedArrayDescending(...);
   *** sortedArrayWith(...);
   *** sortedBy(...);
   *** sortedBy(...);
   *** sortedBy(...);
   *** sortedBy(...);
   *** sortedBy(...);
   *** sortedBy(...);
   *** sortedBy(...);
   *** sortedBy(...);
   *** sortedBy(...);
   *** sortedByDescending(...);
   *** sortedByDescending(...);
   *** sortedByDescending(...);
   *** sortedByDescending(...);
   *** sortedByDescending(...);
   *** sortedByDescending(...);
   *** sortedByDescending(...);
   *** sortedByDescending(...);
   *** sortedByDescending(...);
   *** sortedDescending(...);
   *** sortedDescending(...);
   *** sortedDescending(...);
   *** sortedDescending(...);
   *** sortedDescending(...);
   *** sortedDescending(...);
   *** sortedDescending(...);
   *** sortedDescending(...);
   *** sortedWith(...);
   *** sortedWith(...);
   *** sortedWith(...);
   *** sortedWith(...);
   *** sortedWith(...);
   *** sortedWith(...);
   *** sortedWith(...);
   *** sortedWith(...);
   *** sortedWith(...);
   *** subtract(...);
   *** subtract(...);
   *** subtract(...);
   *** subtract(...);
   *** subtract(...);
   *** subtract(...);
   *** subtract(...);
   *** subtract(...);
   *** subtract(...);
   *** sum(...);
   *** sum(...);
   *** sum(...);
   *** sum(...);
   *** sum(...);
   *** sum(...);
   *** sumBy(...);
   *** sumBy(...);
   *** sumBy(...);
   *** sumBy(...);
   *** sumBy(...);
   *** sumBy(...);
   *** sumBy(...);
   *** sumBy(...);
   *** sumBy(...);
   *** sumByDouble(...);
   *** sumByDouble(...);
   *** sumByDouble(...);
   *** sumByDouble(...);
   *** sumByDouble(...);
   *** sumByDouble(...);
   *** sumByDouble(...);
   *** sumByDouble(...);
   *** sumByDouble(...);
   *** sumOfByte(...);
   *** sumOfDouble(...);
   *** sumOfFloat(...);
   *** sumOfInt(...);
   *** sumOfLong(...);
   *** sumOfShort(...);
   *** take(...);
   *** take(...);
   *** take(...);
   *** take(...);
   *** take(...);
   *** take(...);
   *** take(...);
   *** take(...);
   *** take(...);
   *** takeLast(...);
   *** takeLast(...);
   *** takeLast(...);
   *** takeLast(...);
   *** takeLast(...);
   *** takeLast(...);
   *** takeLast(...);
   *** takeLast(...);
   *** takeLast(...);
   *** takeLastWhile(...);
   *** takeLastWhile(...);
   *** takeLastWhile(...);
   *** takeLastWhile(...);
   *** takeLastWhile(...);
   *** takeLastWhile(...);
   *** takeLastWhile(...);
   *** takeLastWhile(...);
   *** takeLastWhile(...);
   *** takeWhile(...);
   *** takeWhile(...);
   *** takeWhile(...);
   *** takeWhile(...);
   *** takeWhile(...);
   *** takeWhile(...);
   *** takeWhile(...);
   *** takeWhile(...);
   *** takeWhile(...);
   *** toBooleanArray(...);
   *** toByteArray(...);
   *** toCharArray(...);
   *** toCollection(...);
   *** toCollection(...);
   *** toCollection(...);
   *** toCollection(...);
   *** toCollection(...);
   *** toCollection(...);
   *** toCollection(...);
   *** toCollection(...);
   *** toCollection(...);
   *** toDoubleArray(...);
   *** toFloatArray(...);
   *** toHashSet(...);
   *** toHashSet(...);
   *** toHashSet(...);
   *** toHashSet(...);
   *** toHashSet(...);
   *** toHashSet(...);
   *** toHashSet(...);
   *** toHashSet(...);
   *** toHashSet(...);
   *** toIntArray(...);
   *** toList(...);
   *** toList(...);
   *** toList(...);
   *** toList(...);
   *** toList(...);
   *** toList(...);
   *** toList(...);
   *** toList(...);
   *** toList(...);
   *** toLongArray(...);
   *** toMutableList(...);
   *** toMutableList(...);
   *** toMutableList(...);
   *** toMutableList(...);
   *** toMutableList(...);
   *** toMutableList(...);
   *** toMutableList(...);
   *** toMutableList(...);
   *** toMutableList(...);
   *** toMutableSet(...);
   *** toMutableSet(...);
   *** toMutableSet(...);
   *** toMutableSet(...);
   *** toMutableSet(...);
   *** toMutableSet(...);
   *** toMutableSet(...);
   *** toMutableSet(...);
   *** toMutableSet(...);
   *** toSet(...);
   *** toSet(...);
   *** toSet(...);
   *** toSet(...);
   *** toSet(...);
   *** toSet(...);
   *** toSet(...);
   *** toSet(...);
   *** toSet(...);
   *** toShortArray(...);
   *** union(...);
   *** union(...);
   *** union(...);
   *** union(...);
   *** union(...);
   *** union(...);
   *** union(...);
   *** union(...);
   *** union(...);
   *** withIndex(...);
   *** withIndex(...);
   *** withIndex(...);
   *** withIndex(...);
   *** withIndex(...);
   *** withIndex(...);
   *** withIndex(...);
   *** withIndex(...);
   *** withIndex(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** asList(...);
   *** asList(...);
   *** asList(...);
   *** asList(...);
   *** asList(...);
   *** asList(...);
   *** asList(...);
   *** asList(...);
   *** asList(...);
   *** binarySearch(...);
   *** binarySearch(...);
   *** binarySearch(...);
   *** binarySearch(...);
   *** binarySearch(...);
   *** binarySearch(...);
   *** binarySearch(...);
   *** binarySearch(...);
   *** binarySearch(...);
   *** copyInto(...);
   *** copyInto(...);
   *** copyInto(...);
   *** copyInto(...);
   *** copyInto(...);
   *** copyInto(...);
   *** copyInto(...);
   *** copyInto(...);
   *** copyInto(...);
   *** copyOfRange(...);
   *** copyOfRange(...);
   *** copyOfRange(...);
   *** copyOfRange(...);
   *** copyOfRange(...);
   *** copyOfRange(...);
   *** copyOfRange(...);
   *** copyOfRange(...);
   *** copyOfRange(...);
   *** fill(...);
   *** fill(...);
   *** fill(...);
   *** fill(...);
   *** fill(...);
   *** fill(...);
   *** fill(...);
   *** fill(...);
   *** fill(...);
   *** filterIsInstance(...);
   *** filterIsInstanceTo(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** sort(...);
   *** sort(...);
   *** sort(...);
   *** sort(...);
   *** sort(...);
   *** sort(...);
   *** sort(...);
   *** sort(...);
   *** sort(...);
   *** sort(...);
   *** sort(...);
   *** sort(...);
   *** sort(...);
   *** sort(...);
   *** sort(...);
   *** sort(...);
   *** sortWith(...);
   *** sortWith(...);
   *** toSortedSet(...);
   *** toSortedSet(...);
   *** toSortedSet(...);
   *** toSortedSet(...);
   *** toSortedSet(...);
   *** toSortedSet(...);
   *** toSortedSet(...);
   *** toSortedSet(...);
   *** toSortedSet(...);
   *** toSortedSet(...);
   *** toTypedArray(...);
   *** toTypedArray(...);
   *** toTypedArray(...);
   *** toTypedArray(...);
   *** toTypedArray(...);
   *** toTypedArray(...);
   *** toTypedArray(...);
   *** toTypedArray(...);
   *** contentDeepEquals(...);
   *** contentDeepToString(...);
   *** flatten(...);
   *** unzip(...);
   *** arrayOfNulls(...);
   *** contentDeepHashCode(...);
   *** copyOfRangeToIndexCheck(...);
}

-keep class kotlin.collections.BooleanIterator
-keepclassmembers class kotlin.collections.BooleanIterator {
   <init>(...);
   *** next(...);
   *** nextBoolean(...);
   *** remove(...);
   *** hasNext(...);
}

-keep class kotlin.collections.BooleanIterator
-keepclassmembers class kotlin.collections.BooleanIterator {
   *** nextBoolean(...);
   *** hasNext(...);
}

-keep class kotlin.collections.BrittleContainsOptimizationKt
-keepclassmembers class kotlin.collections.BrittleContainsOptimizationKt {
}

-keep class kotlin.collections.ByteIterator
-keepclassmembers class kotlin.collections.ByteIterator {
   <init>(...);
   *** next(...);
   *** nextByte(...);
   *** remove(...);
   *** hasNext(...);
}

-keep class kotlin.collections.ByteIterator
-keepclassmembers class kotlin.collections.ByteIterator {
   *** nextByte(...);
   *** hasNext(...);
}

-keep class kotlin.collections.CharIterator
-keepclassmembers class kotlin.collections.CharIterator {
   <init>(...);
   *** next(...);
   *** nextChar(...);
   *** remove(...);
   *** hasNext(...);
}

-keep class kotlin.collections.CharIterator
-keepclassmembers class kotlin.collections.CharIterator {
   *** nextChar(...);
   *** hasNext(...);
}

-keep class kotlin.collections.CollectionsKt
-keepclassmembers class kotlin.collections.CollectionsKt {
   *** all(...);
   *** any(...);
   *** any(...);
   *** asSequence(...);
   *** associate(...);
   *** associateBy(...);
   *** associateBy(...);
   *** associateByTo(...);
   *** associateByTo(...);
   *** associateTo(...);
   *** associateWith(...);
   *** associateWithTo(...);
   *** averageOfByte(...);
   *** averageOfDouble(...);
   *** averageOfFloat(...);
   *** averageOfInt(...);
   *** averageOfLong(...);
   *** averageOfShort(...);
   *** chunked(...);
   *** chunked(...);
   *** contains(...);
   *** count(...);
   *** count(...);
   *** distinct(...);
   *** distinctBy(...);
   *** drop(...);
   *** dropLast(...);
   *** dropLastWhile(...);
   *** dropWhile(...);
   *** elementAt(...);
   *** elementAtOrElse(...);
   *** elementAtOrNull(...);
   *** filter(...);
   *** filterIndexed(...);
   *** filterIndexedTo(...);
   *** filterNot(...);
   *** filterNotNull(...);
   *** filterNotNullTo(...);
   *** filterNotTo(...);
   *** filterTo(...);
   *** first(...);
   *** first(...);
   *** first(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** flatMap(...);
   *** flatMapSequence(...);
   *** flatMapSequenceTo(...);
   *** flatMapTo(...);
   *** fold(...);
   *** foldIndexed(...);
   *** foldRight(...);
   *** foldRightIndexed(...);
   *** forEach(...);
   *** forEachIndexed(...);
   *** getOrNull(...);
   *** groupBy(...);
   *** groupBy(...);
   *** groupByTo(...);
   *** groupByTo(...);
   *** groupingBy(...);
   *** indexOf(...);
   *** indexOf(...);
   *** indexOfFirst(...);
   *** indexOfFirst(...);
   *** indexOfLast(...);
   *** indexOfLast(...);
   *** intersect(...);
   *** joinTo(...);
   *** joinToString(...);
   *** last(...);
   *** last(...);
   *** last(...);
   *** last(...);
   *** lastIndexOf(...);
   *** lastIndexOf(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** lastOrNull(...);
   *** map(...);
   *** mapIndexed(...);
   *** mapIndexedNotNull(...);
   *** mapIndexedNotNullTo(...);
   *** mapIndexedTo(...);
   *** mapNotNull(...);
   *** mapNotNullTo(...);
   *** mapTo(...);
   *** maxByOrNull(...);
   *** maxByOrThrow(...);
   *** maxOrNull(...);
   *** maxOrNull(...);
   *** maxOrNull(...);
   *** maxOrThrow(...);
   *** maxOrThrow(...);
   *** maxOrThrow(...);
   *** maxWithOrNull(...);
   *** maxWithOrThrow(...);
   *** minByOrNull(...);
   *** minByOrThrow(...);
   *** minOrNull(...);
   *** minOrNull(...);
   *** minOrNull(...);
   *** minOrThrow(...);
   *** minOrThrow(...);
   *** minOrThrow(...);
   *** minWithOrNull(...);
   *** minWithOrThrow(...);
   *** minus(...);
   *** minus(...);
   *** minus(...);
   *** minus(...);
   *** none(...);
   *** none(...);
   *** onEach(...);
   *** onEachIndexed(...);
   *** partition(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** random(...);
   *** randomOrNull(...);
   *** reduce(...);
   *** reduceIndexed(...);
   *** reduceIndexedOrNull(...);
   *** reduceOrNull(...);
   *** reduceRight(...);
   *** reduceRightIndexed(...);
   *** reduceRightIndexedOrNull(...);
   *** reduceRightOrNull(...);
   *** requireNoNulls(...);
   *** requireNoNulls(...);
   *** reversed(...);
   *** runningFold(...);
   *** runningFoldIndexed(...);
   *** runningReduce(...);
   *** runningReduceIndexed(...);
   *** scan(...);
   *** scanIndexed(...);
   *** shuffle(...);
   *** single(...);
   *** single(...);
   *** single(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** singleOrNull(...);
   *** slice(...);
   *** slice(...);
   *** sortBy(...);
   *** sortByDescending(...);
   *** sortDescending(...);
   *** sorted(...);
   *** sortedBy(...);
   *** sortedByDescending(...);
   *** sortedDescending(...);
   *** sortedWith(...);
   *** subtract(...);
   *** sumBy(...);
   *** sumByDouble(...);
   *** sumOfByte(...);
   *** sumOfDouble(...);
   *** sumOfFloat(...);
   *** sumOfInt(...);
   *** sumOfLong(...);
   *** sumOfShort(...);
   *** take(...);
   *** takeLast(...);
   *** takeLastWhile(...);
   *** takeWhile(...);
   *** toBooleanArray(...);
   *** toByteArray(...);
   *** toCharArray(...);
   *** toCollection(...);
   *** toDoubleArray(...);
   *** toFloatArray(...);
   *** toHashSet(...);
   *** toIntArray(...);
   *** toList(...);
   *** toLongArray(...);
   *** toMutableList(...);
   *** toMutableList(...);
   *** toMutableSet(...);
   *** toSet(...);
   *** toShortArray(...);
   *** union(...);
   *** windowed(...);
   *** windowed(...);
   *** withIndex(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zip(...);
   *** zipWithNext(...);
   *** zipWithNext(...);
   *** filterIsInstance(...);
   *** filterIsInstanceTo(...);
   *** reverse(...);
   *** toSortedSet(...);
   *** toSortedSet(...);
   *** asReversed(...);
   *** asReversedMutable(...);
   *** addAll(...);
   *** addAll(...);
   *** addAll(...);
   *** removeAll(...);
   *** removeAll(...);
   *** removeAll(...);
   *** removeAll(...);
   *** removeAll(...);
   *** removeFirst(...);
   *** removeFirstOrNull(...);
   *** removeLast(...);
   *** removeLastOrNull(...);
   *** retainAll(...);
   *** retainAll(...);
   *** retainAll(...);
   *** retainAll(...);
   *** retainAll(...);
   *** sort(...);
   *** sortWith(...);
   *** forEach(...);
   *** withIndex(...);
   *** iterator(...);
   *** collectionSizeOrDefault(...);
   *** collectionSizeOrNull(...);
   *** flatten(...);
   *** unzip(...);
   *** arrayListOf(...);
   *** asCollection(...);
   *** binarySearch(...);
   *** binarySearch(...);
   *** binarySearch(...);
   *** binarySearchBy(...);
   *** emptyList(...);
   *** getIndices(...);
   *** getLastIndex(...);
   *** listOf(...);
   *** listOfNotNull(...);
   *** listOfNotNull(...);
   *** mutableListOf(...);
   *** optimizeReadOnlyList(...);
   *** shuffled(...);
   *** throwCountOverflow(...);
   *** throwIndexOverflow(...);
   *** brittleContainsOptimizationEnabled(...);
   *** build(...);
   *** copyToArrayOfAny(...);
   *** createListBuilder(...);
   *** createListBuilder(...);
   *** listOf(...);
   *** shuffled(...);
   *** shuffled(...);
}

-keep class kotlin.collections.DoubleIterator
-keepclassmembers class kotlin.collections.DoubleIterator {
   <init>(...);
   *** next(...);
   *** nextDouble(...);
   *** remove(...);
   *** hasNext(...);
}

-keep class kotlin.collections.DoubleIterator
-keepclassmembers class kotlin.collections.DoubleIterator {
   *** nextDouble(...);
   *** hasNext(...);
}

-keep class kotlin.collections.FloatIterator
-keepclassmembers class kotlin.collections.FloatIterator {
   <init>(...);
   *** next(...);
   *** nextFloat(...);
   *** remove(...);
   *** hasNext(...);
}

-keep class kotlin.collections.FloatIterator
-keepclassmembers class kotlin.collections.FloatIterator {
   *** nextFloat(...);
   *** hasNext(...);
}

-keep class kotlin.collections.GroupingKt
-keepclassmembers class kotlin.collections.GroupingKt {
   *** aggregate(...);
   *** aggregateTo(...);
   *** eachCountTo(...);
   *** fold(...);
   *** fold(...);
   *** foldTo(...);
   *** foldTo(...);
   *** reduce(...);
   *** reduceTo(...);
   *** eachCount(...);
}

-keep class kotlin.collections.Grouping
-keepclassmembers class kotlin.collections.Grouping {
}

-keep class kotlin.collections.IndexedValue
-keepclassmembers class kotlin.collections.IndexedValue {
   <init>(...);
   *** getIndex(...);
   *** getValue(...);
   *** component1(...);
   *** component2(...);
   *** copy(...);
}

-keep class kotlin.collections.IntIterator
-keepclassmembers class kotlin.collections.IntIterator {
   <init>(...);
   *** next(...);
   *** nextInt(...);
   *** remove(...);
   *** hasNext(...);
}

-keep class kotlin.collections.IntIterator
-keepclassmembers class kotlin.collections.IntIterator {
   *** nextInt(...);
   *** hasNext(...);
}

-keep class kotlin.collections.LongIterator
-keepclassmembers class kotlin.collections.LongIterator {
   <init>(...);
   *** next(...);
   *** nextLong(...);
   *** remove(...);
   *** hasNext(...);
}

-keep class kotlin.collections.LongIterator
-keepclassmembers class kotlin.collections.LongIterator {
   *** nextLong(...);
   *** hasNext(...);
}

-keep class kotlin.collections.MapAccessorsKt
-keepclassmembers class kotlin.collections.MapAccessorsKt {
}

-keep class kotlin.collections.MapsKt
-keepclassmembers class kotlin.collections.MapsKt {
   *** all(...);
   *** any(...);
   *** any(...);
   *** asSequence(...);
   *** count(...);
   *** flatMap(...);
   *** flatMapSequence(...);
   *** flatMapSequenceTo(...);
   *** flatMapTo(...);
   *** forEach(...);
   *** map(...);
   *** mapNotNull(...);
   *** mapNotNullTo(...);
   *** mapTo(...);
   *** none(...);
   *** none(...);
   *** onEach(...);
   *** onEachIndexed(...);
   *** toList(...);
   *** emptyMap(...);
   *** filter(...);
   *** filterKeys(...);
   *** filterNot(...);
   *** filterNotTo(...);
   *** filterTo(...);
   *** filterValues(...);
   *** getOrElseNullable(...);
   *** getOrPut(...);
   *** getValue(...);
   *** hashMapOf(...);
   *** linkedMapOf(...);
   *** mapKeys(...);
   *** mapKeysTo(...);
   *** mapOf(...);
   *** mapValues(...);
   *** mapValuesTo(...);
   *** minus(...);
   *** minus(...);
   *** minus(...);
   *** minus(...);
   *** mutableMapOf(...);
   *** optimizeReadOnlyMap(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** putAll(...);
   *** putAll(...);
   *** putAll(...);
   *** toMap(...);
   *** toMap(...);
   *** toMap(...);
   *** toMap(...);
   *** toMap(...);
   *** toMap(...);
   *** toMap(...);
   *** toMap(...);
   *** toMutableMap(...);
   *** build(...);
   *** createMapBuilder(...);
   *** createMapBuilder(...);
   *** getOrPut(...);
   *** mapCapacity(...);
   *** mapOf(...);
   *** sortedMapOf(...);
   *** sortedMapOf(...);
   *** toSingletonMap(...);
   *** toSortedMap(...);
   *** toSortedMap(...);
   *** getOrImplicitDefaultNullable(...);
   *** withDefault(...);
   *** withDefaultMutable(...);
}

-keep class kotlin.collections.SetsKt
-keepclassmembers class kotlin.collections.SetsKt {
   *** minus(...);
   *** minus(...);
   *** minus(...);
   *** minus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** emptySet(...);
   *** hashSetOf(...);
   *** linkedSetOf(...);
   *** mutableSetOf(...);
   *** optimizeReadOnlySet(...);
   *** setOf(...);
   *** setOfNotNull(...);
   *** setOfNotNull(...);
   *** build(...);
   *** createSetBuilder(...);
   *** createSetBuilder(...);
   *** setOf(...);
   *** sortedSetOf(...);
   *** sortedSetOf(...);
}

-keep class kotlin.collections.ShortIterator
-keepclassmembers class kotlin.collections.ShortIterator {
   <init>(...);
   *** next(...);
   *** nextShort(...);
   *** remove(...);
   *** hasNext(...);
}

-keep class kotlin.collections.ShortIterator
-keepclassmembers class kotlin.collections.ShortIterator {
   *** nextShort(...);
   *** hasNext(...);
}

-keep class kotlin.collections.SlidingWindowKt
-keepclassmembers class kotlin.collections.SlidingWindowKt {
}

-keep class kotlin.collections.TypeAliasesKt
-keepclassmembers class kotlin.collections.TypeAliasesKt {
}

-keep class kotlin.collections.UArraySortingKt
-keepclassmembers class kotlin.collections.UArraySortingKt {
}

-keep class kotlin.collections.UCollectionsKt
-keepclassmembers class kotlin.collections.UCollectionsKt {
   *** sumOfUByte(...);
   *** sumOfUInt(...);
   *** sumOfULong(...);
   *** sumOfUShort(...);
   *** toUByteArray(...);
   *** toUIntArray(...);
   *** toULongArray(...);
   *** toUShortArray(...);
}

-keep class kotlin.collections.unsigned.UArraysKt
-keepclassmembers class kotlin.collections.unsigned.UArraysKt {
   *** contentEquals-FGO6Aew(...);
   *** contentEquals-KJPZfPQ(...);
   *** contentEquals-kV0jMPg(...);
   *** contentEquals-lec5QzE(...);
   *** contentHashCode-2csIQuQ(...);
   *** contentHashCode-XUkPCBk(...);
   *** contentHashCode-d-6D3K8(...);
   *** contentHashCode-uLth9ew(...);
   *** contentToString-2csIQuQ(...);
   *** contentToString-XUkPCBk(...);
   *** contentToString-d-6D3K8(...);
   *** contentToString-uLth9ew(...);
   *** drop-PpDY95g(...);
   *** drop-nggk6HY(...);
   *** drop-qFRl0hI(...);
   *** drop-r7IrZao(...);
   *** dropLast-PpDY95g(...);
   *** dropLast-nggk6HY(...);
   *** dropLast-qFRl0hI(...);
   *** dropLast-r7IrZao(...);
   *** fill-2fe2U9s(...);
   *** fill-EtDCXyQ(...);
   *** fill-K6DWlUc(...);
   *** fill-WpHrYlw(...);
   *** firstOrNull--ajY-9A(...);
   *** firstOrNull-GBYM_sE(...);
   *** firstOrNull-QwZRm1k(...);
   *** firstOrNull-rL5Bavg(...);
   *** getIndices--ajY-9A(...);
   *** getIndices-GBYM_sE(...);
   *** getIndices-QwZRm1k(...);
   *** getIndices-rL5Bavg(...);
   *** getLastIndex--ajY-9A(...);
   *** getLastIndex-GBYM_sE(...);
   *** getLastIndex-QwZRm1k(...);
   *** getLastIndex-rL5Bavg(...);
   *** getOrNull-PpDY95g(...);
   *** getOrNull-nggk6HY(...);
   *** getOrNull-qFRl0hI(...);
   *** getOrNull-r7IrZao(...);
   *** lastOrNull--ajY-9A(...);
   *** lastOrNull-GBYM_sE(...);
   *** lastOrNull-QwZRm1k(...);
   *** lastOrNull-rL5Bavg(...);
   *** maxOrNull--ajY-9A(...);
   *** maxOrNull-GBYM_sE(...);
   *** maxOrNull-QwZRm1k(...);
   *** maxOrNull-rL5Bavg(...);
   *** maxOrThrow-U(...);
   *** maxOrThrow-U(...);
   *** maxOrThrow-U(...);
   *** maxOrThrow-U(...);
   *** maxWithOrNull-XMRcp5o(...);
   *** maxWithOrNull-YmdZ_VM(...);
   *** maxWithOrNull-eOHTfZs(...);
   *** maxWithOrNull-zrEWJaI(...);
   *** maxWithOrThrow-U(...);
   *** maxWithOrThrow-U(...);
   *** maxWithOrThrow-U(...);
   *** maxWithOrThrow-U(...);
   *** minOrNull--ajY-9A(...);
   *** minOrNull-GBYM_sE(...);
   *** minOrNull-QwZRm1k(...);
   *** minOrNull-rL5Bavg(...);
   *** minOrThrow-U(...);
   *** minOrThrow-U(...);
   *** minOrThrow-U(...);
   *** minOrThrow-U(...);
   *** minWithOrNull-XMRcp5o(...);
   *** minWithOrNull-YmdZ_VM(...);
   *** minWithOrNull-eOHTfZs(...);
   *** minWithOrNull-zrEWJaI(...);
   *** minWithOrThrow-U(...);
   *** minWithOrThrow-U(...);
   *** minWithOrThrow-U(...);
   *** minWithOrThrow-U(...);
   *** plus-CFIt9YE(...);
   *** plus-kzHmqpY(...);
   *** plus-ojwP5H8(...);
   *** plus-xo_DsdI(...);
   *** random-2D5oskM(...);
   *** random-JzugnMA(...);
   *** random-oSF2wD8(...);
   *** random-s5X_as8(...);
   *** randomOrNull-2D5oskM(...);
   *** randomOrNull-JzugnMA(...);
   *** randomOrNull-oSF2wD8(...);
   *** randomOrNull-s5X_as8(...);
   *** reversed--ajY-9A(...);
   *** reversed-GBYM_sE(...);
   *** reversed-QwZRm1k(...);
   *** reversed-rL5Bavg(...);
   *** shuffle--ajY-9A(...);
   *** shuffle-2D5oskM(...);
   *** shuffle-GBYM_sE(...);
   *** shuffle-JzugnMA(...);
   *** shuffle-QwZRm1k(...);
   *** shuffle-oSF2wD8(...);
   *** shuffle-rL5Bavg(...);
   *** shuffle-s5X_as8(...);
   *** singleOrNull--ajY-9A(...);
   *** singleOrNull-GBYM_sE(...);
   *** singleOrNull-QwZRm1k(...);
   *** singleOrNull-rL5Bavg(...);
   *** slice-F7u83W8(...);
   *** slice-HwE9HBo(...);
   *** slice-JGPC0-M(...);
   *** slice-JQknh5Q(...);
   *** slice-Q6IL4kU(...);
   *** slice-ZRhS8yI(...);
   *** slice-c0bezYM(...);
   *** slice-tAntMlw(...);
   *** sliceArray-CFIt9YE(...);
   *** sliceArray-Q6IL4kU(...);
   *** sliceArray-ZRhS8yI(...);
   *** sliceArray-c0bezYM(...);
   *** sliceArray-kzHmqpY(...);
   *** sliceArray-ojwP5H8(...);
   *** sliceArray-tAntMlw(...);
   *** sliceArray-xo_DsdI(...);
   *** sort--ajY-9A(...);
   *** sort--nroSd4(...);
   *** sort-4UcCI2c(...);
   *** sort-Aa5vz7o(...);
   *** sort-GBYM_sE(...);
   *** sort-QwZRm1k(...);
   *** sort-oBK06Vg(...);
   *** sort-rL5Bavg(...);
   *** sortDescending--ajY-9A(...);
   *** sortDescending--nroSd4(...);
   *** sortDescending-4UcCI2c(...);
   *** sortDescending-Aa5vz7o(...);
   *** sortDescending-GBYM_sE(...);
   *** sortDescending-QwZRm1k(...);
   *** sortDescending-oBK06Vg(...);
   *** sortDescending-rL5Bavg(...);
   *** sorted--ajY-9A(...);
   *** sorted-GBYM_sE(...);
   *** sorted-QwZRm1k(...);
   *** sorted-rL5Bavg(...);
   *** sortedArray--ajY-9A(...);
   *** sortedArray-GBYM_sE(...);
   *** sortedArray-QwZRm1k(...);
   *** sortedArray-rL5Bavg(...);
   *** sortedArrayDescending--ajY-9A(...);
   *** sortedArrayDescending-GBYM_sE(...);
   *** sortedArrayDescending-QwZRm1k(...);
   *** sortedArrayDescending-rL5Bavg(...);
   *** sortedDescending--ajY-9A(...);
   *** sortedDescending-GBYM_sE(...);
   *** sortedDescending-QwZRm1k(...);
   *** sortedDescending-rL5Bavg(...);
   *** sumOfUByte(...);
   *** sumOfUInt(...);
   *** sumOfULong(...);
   *** sumOfUShort(...);
   *** take-PpDY95g(...);
   *** take-nggk6HY(...);
   *** take-qFRl0hI(...);
   *** take-r7IrZao(...);
   *** takeLast-PpDY95g(...);
   *** takeLast-nggk6HY(...);
   *** takeLast-qFRl0hI(...);
   *** takeLast-r7IrZao(...);
   *** toTypedArray--ajY-9A(...);
   *** toTypedArray-GBYM_sE(...);
   *** toTypedArray-QwZRm1k(...);
   *** toTypedArray-rL5Bavg(...);
   *** toUByteArray(...);
   *** toUIntArray(...);
   *** toULongArray(...);
   *** toUShortArray(...);
   *** withIndex--ajY-9A(...);
   *** withIndex-GBYM_sE(...);
   *** withIndex-QwZRm1k(...);
   *** withIndex-rL5Bavg(...);
   *** zip-C-E_24M(...);
   *** zip-F7u83W8(...);
   *** zip-HwE9HBo(...);
   *** zip-JGPC0-M(...);
   *** zip-JQknh5Q(...);
   *** zip-ctEhBpI(...);
   *** zip-f7H3mmw(...);
   *** zip-kdPth3s(...);
   *** zip-mazbYpA(...);
   *** zip-nl983wc(...);
   *** zip-uaTIQ5s(...);
   *** zip-us8wMrg(...);
   *** asList--ajY-9A(...);
   *** asList-GBYM_sE(...);
   *** asList-QwZRm1k(...);
   *** asList-rL5Bavg(...);
   *** binarySearch-2fe2U9s(...);
   *** binarySearch-EtDCXyQ(...);
   *** binarySearch-K6DWlUc(...);
   *** binarySearch-WpHrYlw(...);
}

-keep class kotlin.collections.builders.ListBuilderKt
-keepclassmembers class kotlin.collections.builders.ListBuilderKt {
}

